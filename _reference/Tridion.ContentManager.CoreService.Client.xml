<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tridion.ContentManager.CoreService.Client</name>
    </assembly>
    <members>
        <member name="M:Tridion.ContentManager.CoreService.Client.ApplicableActionsExtensions.IsActionAllowed(Tridion.ContentManager.CoreService.Client.ApplicableActionsData,System.String)">
            <summary>
            Checks if provided action is applicable and allowed.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ApplicableActionsExtensions.IsActionAllowed(Tridion.ContentManager.CoreService.Client.ApplicableActionsData,Tridion.ContentManager.CoreService.Client.TcmAction)">
            <summary>
            Checks if provided action is applicable and allowed.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ApplicableActionsExtensions.IsActionApplicable(Tridion.ContentManager.CoreService.Client.ApplicableActionsData,System.String)">
            <summary>
            Checks if provided action is applicable (either allowed or denied).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ApplicableActionsExtensions.IsActionApplicable(Tridion.ContentManager.CoreService.Client.ApplicableActionsData,Tridion.ContentManager.CoreService.Client.TcmAction)">
            <summary>
            Checks if provided action is applicable (either allowed or denied).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter">
            <summary>
            Represents an adapter to convert between strongly typed objects and <see cref="T:Tridion.ContentManager.CoreService.Client.ApplicationData"/> objects.
            The conversion is done by (de)serializing from/to the binary <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationData.Data"/> property.
            </summary>
            <remarks>
            The following kinds of object types are supported:
            <list type="bullet">
                <item>types with <see cref="T:System.Runtime.Serialization.DataContractAttribute"/> defined</item>
                <item>Runtime serializable types (<see cref="T:System.SerializableAttribute"/> defined)</item>
                <item><see cref="T:System.Xml.XmlElement"/> objects</item>
                <item>.NET value types</item>
                <item><c>null</c> value</item>
            </list>
            <para>
            Types with WCF data contract are converted by (de)serializing with standard <see cref="T:System.Runtime.Serialization.DataContractSerializer"/> using binary XML format.
            The <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationData.TypeId"/> property will contain information about the name, namespace and version of the data contract.
            </para>
            <para>
            Serializable types (and all value types) are converted by (de)serializing with standard <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>.
            The <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationData.TypeId"/> property will contain full assembly qualified name of the serialized type.
            </para>
            <para>
            Types representing <see cref="T:System.Xml.XmlElement"/> are converted by storing UTF-8 encoded content of the XML element.
            The <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationData.TypeId"/> property will contain information about the name and namespace of the root element.
            This is the only format which potentially can be decoded in different language or technology, because the data simply contains an XML content.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the adapter class from a typed application data object.
            </summary>
            <param name="applicationId">Application identifier for the application data</param>
            <param name="typedApplicationData">Typed application data object to convert - for all supported types see the class remarks</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.#ctor(Tridion.ContentManager.CoreService.Client.ApplicationData)">
            <summary>
            Initializes a new instance of the adapter class from an <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.ApplicationData"/> object.
            </summary>
            <param name="applicationDataObject">An <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.ApplicationData"/> object to convert</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.GetAs``1">
            <summary>
            Returns a strongly typed application data object, deserializing it from the <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.ApplicationData"/> if needed.
            </summary>
            <typeparam name="T">The expected type to cast to - must be compatible with the original type</typeparam>
            <returns>Typed application data object of the requested type</returns>
            <example>
            Converting <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.ApplicationData"/> into strongly typed application data:
            <code>
            ApplicationDataAdapter adapter = new ApplicationDataAdapter(appData);
            DateTime time = adapter.GetAs&lt;DateTime&gt;(); 
            </code>
            </example>
            <remarks>
            Instead of explicitly creating an <see cref="T:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter"/> instance and invoking this method on it,
            the <see cref="M:Tridion.ContentManager.CoreService.Client.ApplicationDataUtilities.GetAs``1(Tridion.ContentManager.CoreService.Client.ApplicationData)"/> extension method can also be used directly on the <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.ApplicationData"/> instance.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.ApplicationData">
            <summary>
            Returns the <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.ApplicationData"/> object, serializing it from the strongly typed application data if needed.
            </summary>
            <example>
            Converting strongly typed application data into <see cref="P:Tridion.ContentManager.CoreService.Client.ApplicationDataAdapter.ApplicationData"/>:
            <code>
            ApplicationDataAdapter adapter = new ApplicationDataAdapter("TestApplication", DateTime.Now);
            ApplicationData appData = adapter.ApplicationData;
            </code>
            </example>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ApplicationDataUtilities">
            <summary>
            Contains utility or extension methods for the <see cref="T:Tridion.ContentManager.CoreService.Client.ApplicationData"/> class.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ApplicationDataUtilities.GetAs``1(Tridion.ContentManager.CoreService.Client.ApplicationData)">
            <summary>
            Returns the strongly typed application data object, deserializing it from the <see cref="T:Tridion.ContentManager.CoreService.Client.ApplicationData"/> if needed.
            </summary>
            <typeparam name="T">The expected type to cast to</typeparam>
            <param name="target">Implicit target object parameter</param>
            <returns>Typed application data object of the requested type</returns>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.CoreServiceFaultConstants">
            <summary>
            Constants generated from TcmErrorCode enumeration.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SearchQueryData">
            <summary>
            Represents a data object of Search Query.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.ActivityDefinition">
            <summary>
            Gets or sets the activity definition with which must be associated search item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.Author">
            <summary>
            Get or set the author to search for
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.BaseColumns">
            <summary>
            Gets or sets which base columns (XML attributes) to include in the XML list. When <c>null</c> is specified, the condition is not applied.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.BasedOnSchemas">
            <summary>
            Gets or sets the Schemas to search for.
            </summary>
            <remarks>
            Only items that are using or based on the given Schemas will be returned.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.BlueprintStatus">
            <summary>
            Gets or sets the Blueprint status to search for
            </summary>
            <remarks><see cref="F:ContentManagement.SearchBlueprintStatus.Shared" /> is only applicable for search in a context of specific publication (the <see cref="P:FromRepository" /> must be set). </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.Description">
            <summary>
            Gets or sets the text to search for in the item's description
            </summary>
            <seealso cref="P:IsDescriptionCaseSensitive" />
            <remarks>Does not support wild card search. Value of these property always considered as phrase query.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.FromRepository">
            <summary>
            Gets or sets the Repository from which the items should be inherited.
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:BlueprintStatus" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.FullTextQuery">
            <summary>
            Gets or sets the Full-Text Query.
            </summary>
            <remarks>
            The Full Text Query is combined with the other specified criteria.
            The following characters are used by the query syntax: + - &amp;&amp; || ! ( ) { } [ ] ^ " ~ * ? : \
            In order to use any of these without their syntactical meaning, you need to escape them by a preceding \
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.IsDescriptionCaseSensitive">
            <summary>
            Gets or sets whether the description should be sought case sensitive or not
            </summary>
            <seealso cref="P:Title" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.IsPublished">
            <summary>
            Gets or sets whether the item must be published or not.
            </summary>
            <remarks>
            When set the search is performed only on publishable items.
            If set to false then returns unpublished items.
            If set to true then returns published items.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.IsTitleCaseSensitive">
            <summary>
            Gets or sets whether the title should be sought case sensitive or not
            </summary>
            <seealso cref="P:Title" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.ItemTypes">
            <summary>
            Gets or sets the Item Types to search for.
            </summary>
            <remarks>
            To skip Item Type filtering and search for Items regardless of their Item Type, set this property to <c>null</c> or an empty collection.
            Some Item Types are not supported in Search and specifying them will not have an effect.
            Supported Item Types correspond to objects that derive from Repository Local Object.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.LockType">
            <summary>
            Gets or sets the lock type of versioned item to search for
            </summary>
            <seealso cref="P:LockUser" />
            <remarks>
            The following combinations of <see cref="T:ContentManagement.LockType" /> are supported:
            <list type="table">
            <item><term><see cref="F:ContentManagement.LockType.None" /></term><description>Returns all items regardless of lock state.</description></item>
            <item><term><see cref="F:ContentManagement.LockType.CheckedOut" /></term><description>Only returns items which are checked out.</description></item>
            <item><term><see cref="F:ContentManagement.LockType.CheckedOut" /> and <see cref="F:ContentManagement.LockType.Permanent" /></term><description>Only returns items which are permanently checked out.</description></item>
            <item><term><see cref="F:ContentManagement.LockType.CheckedOut" /> and <see cref="F:ContentManagement.LockType.Permanent" /> and <see cref="F:ContentManagement.LockType.InWorkflow" /></term><description>Only returns items which are in workflow.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.LockUser">
            <summary>
            Gets or sets the user that must hold the lock of versioned item.
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:LockType" />.
            </remarks>
            <seealso cref="P:LockType" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.ModifiedAfter">
            <summary>
            Gets or sets a lower limit on the modified date
            </summary>
            <remarks>
            Only items which are last modified after the given date/time will be returned.
            By default sets to current date and time if <see cref="P:ModifiedBefore" /> is set.
            </remarks>
            <seealso cref="P:ModifiedBefore" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.ModifiedBefore">
            <summary>
            Gets or sets an upper limit on the modified date
            </summary>
            <remarks>
            Only items which are last modified before the given date/time will be returned.
            By default sets to current date and time if <see cref="P:ModifiedAfter" /> is set.
            </remarks>
            <seealso cref="P:ModifiedAfter" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.ProcessDefinition">
            <summary>
            Gets or sets the process definition with which must be associated search item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.ResultLimit">
            <summary>
            Gets or sets the limit on the number of search results returned.
            </summary>
            <remarks>
            The default value for this property is 1000.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.SearchIn">
            <summary>
            Gets or sets the search scope.
            </summary>
            <remarks>
            The following search scopes are supported:
            <list type="bullet">
            <item>For searching system wide, leave <see cref="P:SearchIn" /> set to <c>null</c></item>
            <item>For searching within a Repository/Publication, set the value of <see cref="P:SearchIn" /> to that specific <see cref="T:RepositoryData" /></item>
            <item>For searching within an organizational item only (one level), set the value of <see cref="P:SearchIn" /> to that specific <see cref="T:OrganizationalItemData" /> and the value of <see cref="P:SearchInSubtree" /> to <c>false</c></item>
            <item>For searching within an organizational item and the entire subtree, set the value of <see cref="P:SearchIn" /> to that specific <see cref="T:OrganizationalItemData" /> and the value of <see cref="P:SearchInSubtree" /> to <c>true</c></item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.SearchInSubtree">
            <summary>
            Gets or sets a value indicating whether to search one level deep or within an entire subtree.
            </summary>
            <value>
            Set <c>true</c> to search the entire subtree, otherwise set <c>false</c>.
            Default is <c>true</c>.
            </value>
            <remarks>
            This can only be used in conjunction with <see cref="P:SearchIn" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.Title">
            <summary>
            Gets or sets the text to search for in the item's title
            </summary>
            <seealso cref="P:IsTitleCaseSensitive" />
            <remarks>Does not support wild card search. Value of these property always considered as phrase query.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.UsedKeywords">
            <summary>
            Gets or sets the <see cref="T:KeywordData" /> to search for.
            </summary>
            <remarks>
            <para>
            Only items which are classified with the given Keyword will be returned.
            </para>
            <para>
            Current implementation allows only one Keyword.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.IncludeAllowedActionsColumns">
            <summary>
            Gets or sets a value indicating whether the allowed actions columns should be included in the result.
            </summary>
            <remarks>This property is introduced in version 7.0</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.IncludeDescriptionColumn">
            <summary>
            Gets or sets a value indicating whether to include the item's descriptions in the result.
            </summary>
            <remarks>This property is introduced in version 7.0</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SearchQueryData.IncludeLocationInfoColumns">
            <summary>
            Gets or sets a value indicating whether Location Info columns is included in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            This property determines the inclusion of the <see cref="T:LocationInfo" /> or the following XML attribute <c>Path</c> and <c>Url</c> while getting the XML list.
            This property is introduced in version 7.0
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ListBaseColumns">
            <summary>
            Specifies which columns (XML attributes) to include in XML lists.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListBaseColumns.Id">
            <summary>Only the identifier (ID attribute)</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListBaseColumns.IdAndTitle">
            <summary>Identifier (ID attribute) and display name (Title attribute)</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListBaseColumns.Default">
            <summary>The default set of columns. Typically, this is the ID and Title attributes plus additional attributes depending on the kind of list. What these additional attributes are can be found in the system schema.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListBaseColumns.Extended">
            <summary>Same as <see cref="F:Default" />, plus the following extended columns: IsPublished, IsShared, IsLocalized, SubType (for schemas: purpose, for template: template type), FileExt (file extension of multimedia data), Trustee (name of revisor). Only applies to ListItems.</summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BasedOnSchemaData">
            <summary>
            Represents a data object of BasedOnSchema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BasedOnSchemaData.Field">
            <summary>
            Gets or sets the (local) name of the Schema Field to search in.
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:Schema" /> and <see cref="P:FieldValue" />.
            </remarks>
            <seealso cref="P:Schema" />
            <seealso cref="P:FieldValue" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BasedOnSchemaData.FieldValue">
            <summary>
            Gets or sets the content to search for within a given Schema Field value.
            </summary>
            <remarks>
            This can only be used in conjunction with <see cref="P:Schema" /> and <see cref="P:Field" />.
            </remarks>
            <seealso cref="P:Schema" />
            <seealso cref="P:Field" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BasedOnSchemaData.Schema">
            <summary>
            Gets or sets the <see cref="T:SchemaData" /> to search for.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SearchBlueprintStatus">
            <summary>
            Specifies the Blueprint status to search for.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SearchBlueprintStatus.Unspecified">
            <summary>
            Don't search for a specific Blueprint status
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SearchBlueprintStatus.Local">
            <summary>
            Search for local items
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SearchBlueprintStatus.Localized">
            <summary>
            Search for localized items (a.k.a. local copies)
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SearchBlueprintStatus.Shared">
            <summary>
            Search for shared items
            </summary>
            <remarks>
            This is only applicable for search in a context of specific publication.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ItemType">
            <summary>
            Specifies the Content Manager item types.
            </summary>
            <remarks>
            This enumeration defines both the symbolic names and numeric values for all TCM item types.
            The numeric values are used in TCM URIs.
            Note that the numeric values look like bit flags, but they are not really:
            repository-local, system-wide and workflow item types have overlapping bit values.
            Therefore, performing bitwise ORs or ANDs is dangerous; it can only be done for item types of
            the same "class" (repository-local, system-wide or workflow).
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.LockType">
            <summary>
            Defines the state (lock) of an item.
            </summary>
            <remarks>
            This is a set of flags, so combinations of the values are possible.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.Link.IdRef">
            <summary>
            Gets or sets the TCM URI of the referenced object.
            </summary>
            <remarks>
            Either this property or the <see cref="P:WebDavUrl" /> must be set. They can be both set.
            When using the CoreService, the <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.Link.Title">
            <summary>
            Gets or sets the title of the referenced object.
            </summary>
            <remarks>
            The title is used for informational purposes only.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.Link.WebDavUrl">
            <summary>
            Gets or sets the WebDAV URL of the referenced object.
            </summary>
            <remarks>
            Either this property or the <see cref="P:IdRef" /> must be set. They can be both set.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.Link.Description">
            <summary>
            Gets or sets the description of the referenced object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SchemaData">
            <summary>
            Represents the data of a Schema defining the structure of content and/or metadata.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.AllowedMultimediaTypes">
            <summary>
            Gets or sets access to the allowed Multimedia Types.
            </summary>
            <remarks>
            This property only applies to Schemas with purpose <see cref="F:ContentManagement.SchemaPurpose.Multimedia" />.
            It defines what the allowed Multimedia Types are for Multimedia Components based on this Schema.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.ComponentProcess">
            <summary>
            Gets or sets an associated Process Definition which defines the editing process for Components based on this Schema..
            </summary>
            <remarks>
            If a Component Process is specified, a workflow process based on this Process Definition will be started when a Component is saved.
            This process has to be finished before the Component will be checked in. Hence we refer to this as an editing process.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.Description">
            <summary>
            Gets or sets a description for the Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.IsTridionWebSchema">
            <summary>
            Gets whether the Schema qualifies as "Tridion Web Schema".
            </summary>
            <remarks>
            A "Tridion Web Schema" is a Schema for which the content model is simple enough to be
            represented as a set of fields.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.NamespaceUri">
            <summary>
            Gets the namespace URI (target namespace) of the Schema.
            </summary>
            <remarks>This property is for read-only purposes and is derived from the <see cref="P:Xsd" />. If this value needs to be changed, the <see cref="P:Xsd" /> should be updated accordingly.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.Purpose">
            <summary>
            Gets or sets the purpose for the Schema.
            </summary>
            <remarks>
            A Schema can be used for a single purpose only.
            At the different places where Schemas can be selected, the set of available Schemas
            is filtered by the Schema's purpose.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.RootElementName">
            <summary>
            Gets or sets the name of the root element.
            </summary>
            <remarks>
            In a W3C Schema (XSD), it is possible to have multiple global elements,
            i.e. elements that can act as root element.
            A Schema in Tridion Content Manager must identify a single global element as the root element.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.Xsd">
            <summary>
            Gets or sets the Schema content as <see cref="T:SerializableXmlDocument" />.
            </summary>
            <remarks>
            <para>
            This property provides low-level access to the XSD.
            It is also possible to access the Schema content through the CoreService ReadSchemaFields API.
            For Tridion Web Schemas, this is possible for both the content and the metadata.
            For complex Schemas, this is only possible for the metadata.
            </para>
            <para>
            For localized Schema, only the field labels can be changed. All the other changes to the schema will be ignored.
            The labels can be found in the following path of the Xsd : xsd:schema/xsd:annotation/xsd:appinfo/tcm:Labels
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.BundleProcess">
            <summary>
            Gets or sets an associated Process Definition which defines the Bundle process.
            </summary>
            <remarks>
            <para>If a Bundle Process is specified for Component/Multimedia Schema, Component based on this Schema must be added to a Bundle before it can be checked in.
            The Bundle has to be of an appropriate type. That is: The Bundle's Schema has to be associated with this Process Definition.</para>
            <para>For Bundle Schema the Bundle Process defines the Process that will be used to start a Workflow on a Bundle based on this Schema.</para>
            <para>This property is introduced in version 7.0</para>
            </remarks>
            <seealso cref="P:ComponentProcess" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.DeleteBundleOnProcessFinished">
            <summary>
            Gets or sets a value indicating whether the Bundles based on this Schema should be deleted when a workflow process they are part of finishes.
            </summary>
            <remarks>
            <para>This property is valid only for Bundle Schema. Trying to set the property on any other type of schema to anything other than <c>false</c> will throw an exception.</para>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaData.RegionDefinition">
            <summary>
            (Not supported in this release)
            Gets or sets the Region Definition.
            </summary>
            <remarks>
            <para>This property is valid only for Region Schema. Trying to set the property on any other type of schema to anything other than <c>false</c> will throw an exception.</para>
            <para>This property is introduced in version 7.1</para>
            This property is not supported, will throw exception if used.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.IdentifiableObjectData.AllowedActions">
            <summary>
            Gets information about the actions that can be performed on the object in its current state.
            </summary>
            <remarks>
            An action can be either Allowed, Denied or neither. In the latter case, the action is not applicable.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.IdentifiableObjectData.Id">
            <summary>
            Gets the identifier (<see cref="T:TcmUri" />) of the object.
            </summary>
            <remarks>
            When using the CoreService this property might get generated as a <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.IdentifiableObjectData.IsEditable">
            <summary>
            Gets whether the object is editable.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.IdentifiableObjectData.Title">
            <summary>
            Gets or sets the title (display name) of the object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.IdentifiableObjectData.ExtensionProperties">
            <summary>
            Gets or sets the extension properties dictionary which may be used by extensions.
            </summary>
            <remarks>
            <para>Key must comply with XML NCName datatype.</para>
            <para>This value is not persisted by Content Manager Kernel.</para>
            <para>This property is introduced in version 8.0.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.IdentifiableObjectData.ApplicableActions">
            <summary>
            Gets information about the applicable actions which can be performed on the object in its current state.
            </summary>
            <remarks>
            <para>
            Keys of the <see cref="P:ApplicableActionsData.Actions" /> contain actions which are allowed or not (depending on the appropriate value).
            If the action is not mentioned then it is not applicable.
            </para>
            <para>This property is introduced in version 8.1.</para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.AllowedActions">
            <summary>
            Used to specify allowed actions on an object.
            </summary>
            <remarks>
            For the list of allowed and denied actions, use <see cref="T:ApplicableActionsData" /> in stead of this info.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AllowedActions.Allow">
            <summary>
            Gets or sets the actions that are allowed to be performed on the object (as a numeric value).
            </summary>
            <remarks>
            This property is used for XML (de-)serialization purposes.
            </remarks>
            <seealso cref="P:Allow" />
            <remarks>
            This property is deprecated. Use <see cref="T:ApplicableActionsData" /> instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AllowedActions.Deny">
            <summary>
            Gets or sets the actions that are not allowed to be performed on the object (as a numeric value).
            </summary>
            <remarks>
            This property is used for XML (de-)serialization purposes.
            </remarks>
            <seealso cref="P:Deny" />
            <remarks>
            This property is deprecated. Use <see cref="T:ApplicableActionsData" /> instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AllowedActions.Managed">
            <summary>
            Gets or sets the types of items that can be added to the Organizational Item (as a numeric value).
            </summary>
            <remarks>
            This property is used for XML (de-)serialization purposes.
            </remarks>
            <seealso cref="P:Managed" />
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ListInfo">
            <summary>
            Abstract base class for "ListInfo" objects (containing read-only, informational properties).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BasicVersionInfo">
            <summary>
            Basic version information about any <see cref="T:IdentifiableObjectData">Identifiable Object</see>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BasicVersionInfo.CreationDate">
            <summary>
            Gets or sets the date/time at which the item was created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BasicVersionInfo.RevisionDate">
            <summary>
            Gets or sets the date/time at which the item was last modified.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ApplicableActionsData">
            <summary>
            Used to specify Applicable actions on an object.
            </summary>
            <remarks>
            <para>
            The action is applicable to an item if it can potentially be executed on that item. For example, <see cref="F:TcmAction.Delete" /> action is applicable
            to local item, but it is not applicable to shared item. Applicable item can be either allowed if preconditions are met or denied. For example,
            deleting of an local item may be denied if item is published or user does not have enough rights to manage items of that type. Note that even if
            action is allowed, execution of this action still may fail as not all business rule validations are performed to calculate if the action is applicable or not.
            Only handful subset of lightweight checks is validated here.
            </para>
            <para>
            The <see cref="P:Actions" /> dictionary contains all applicable actions (both allowed and denied). If particular action is not in this list, it is not
            applicable to current item.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApplicableActionsData.Actions">
            <summary>
            Gets the actions that are allowed to be performed on the item.
            </summary>
            <value>
            A dictionary with all actions (both TCM and custom) that are applicable to current item. The value, associated with an action shows if action is
            allowed or denied.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowObjectData.ContextRepository">
            <summary>
            Gets the context Repository: the Repository in which the object has been retrieved.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityDefinitionData.Assignee">
            <summary>
            Gets or sets the User or Group to which the Workflow activity will be assigned.
            </summary>
            <remarks>
            <para>
            Depending on the character of activity this property has some limitations:
            </para>
            <list type="bullet">
            <item>Assignee of the first activity in the process might not be set explicitly. In that case activity will be assigned to everyone.</item>
            <item>Automatic activities (activities with <see cref="P:Script" /> property set) should be assigned to the workflow agent user (Id of this user can be found in Content Manager configuration under the 'Automatic Trustee ID' setting in the Workflow settings node).</item>
            </list>
            <para>
            If this property is not set or set to null, the value depends on the kind of activity:
            </para>
            <list type="bullet">
            <item>For normal activity the everyone group will be assigned.</item>
            <item>For decision activity a performer of the previous activity will be assigned.</item>
            <item>For automatic activity (activity with <see cref="P:Script" /> property set) the workflow agent user will be assigned.</item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityDefinitionData.Description">
            <summary>
            Gets or sets the description of the Activity Definition.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityDefinitionData.ProcessDefinition">
            <summary>
            Gets or sets the Workflow Process Definition that contains this activity.
            </summary>
            <value>Will be <c>null</c> if the Activity Definition is read in the context of a Process Definition. If read stand-alone it will be set.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityDefinitionData.ActivityConstraints">
            <summary>
            Gets or sets the constraints of an activity.
            </summary>
            <remarks>
            This property is introduced in version 7.0.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData">
            <summary>
            Represents the data of a Tridion proprietary Activity Definition.
            </summary>
            <seealso cref="T:TridionProcessDefinitionData" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.ActivityType">
            <summary>
            Gets or sets a value indicating whether this instance represents a decision or not.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.FinishApprovalStatus">
            <summary>
            Gets or sets the Approval Status that is assigned to the Workflow Item when the Activity finishes.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.NextActivityDefinitions">
            <summary>
            Gets or sets the potential next activities in the Workflow.
            </summary>
            <value>Will be <c>null</c> if the Activity Definition is read stand-alone. In the context of a Process Definition it will be set.</value>
            <remarks>
            The collection should be empty if this represents the last activity or it should contain exactly one activity, unless this represents a decision.
            Note that the next activity should be identified (linked) by title, not by Id.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.Script">
            <summary>
            Gets or sets the script of an automated Activity.
            </summary>
            <value>A string that contains VBScript code.</value>
            <remarks>
            <para>
            An Activity Definition can represent an automated activity to which a script is associated.
            This script is then executed by the TCM Workflow Agent once the workflow process reaches the activity.
            </para>
            <para>
            When you create a Process Definition, you can define an automatic Activity Definition simply by setting
            the Script property. You don't need to explicitly specify the <see cref="P:ActivityDefinitionData.Assignee" />, it will be
            automatically set to the TCM Workflow Agent during the creation of the Process Definition.
            </para>
            <para>
            The TCM Workflow Agent user is declared in the TCM configuration in the <c>workflow</c> section as the following example illustrates:
            <pre>
            &lt;configuration&gt;
            &lt;workflow workflowAgentAccountUri="tcm:0-3-65552" /&gt;
            &lt;/configuration&gt;
            </pre>
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.AllowOverrideDueDate">
            <summary>
            Gets or sets a value indicating whether <see cref="P:ActivityData.DueDate" /> can be changed manually, or not.
            </summary>
            <value>
            <c>true</c> if <see cref="P:ActivityData.DueDate" /> can be changed manually; otherwise, <c>false</c>.
            </value>
            <remarks>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.PerformingTimeout">
            <summary>
            Gets or sets the timeout for performing current activity, in minutes.
            </summary>
            <value>
            The timeout for performing current activity, in minutes.
            </value>
            <remarks>
            <para>
            If value for this property set, default value for <see cref="P:ActivityData.DueDate" /> will be set, during creating instance of this activity definition.
            </para>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.ScriptType">
            <summary>
            Gets or sets the script type of <see cref="P:Script" /> of an automated Activity.
            </summary>
            <value>
            The value must be the name of one of the configured Workflow script types.
            </value>
            <remarks>
            <para>This property introduced in version 7.0.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.ExpirationScript">
            <summary>
            Gets or sets the script for Activity Expiration.
            </summary>
            <value>A string that contains VBScript/CSharp code.</value>
            <remarks>
            <para>
            When <see cref="P:PerformingTimeout" /> is set, Workflow agent executes this script to expire the Activity.
            </para>
            <para>This property introduced in version 7.1.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionActivityDefinitionData.ExpirationScriptType">
            <summary>
            Gets or sets the script type of <see cref="P:ExpirationScript" /> of an Activity.
            </summary>
            <value>
            The value must be the name of one of the configured Workflow script types.
            </value>
            <remarks>
            <para>This property introduced in version 7.1.</para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.WorkItemData">
            <summary>
            Represents the data of a Work Item: the association between an item participating in workflow and an <see cref="T:ActivityData">Activity</see>.
            </summary>
            <seealso cref="T:ActivityData" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemData.Activity">
            <summary>
            Gets the Activity which contains the Work Item.
            </summary>
            <value>
            If the Work Item is read in context of the Activity, the value is <c>null</c>.
            The value is only set if the Work Item is read stand-alone.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemData.Owner">
            <summary>
            Gets the User who owns the Work Item.
            </summary>
            <remarks>
            The owner of the Work Item can view/edit the <see cref="P:Subject" />.
            The owners of all <see cref="P:WorkItems">Work Items</see> of an Activity
            are called the <see cref="P:Performers" /> of the Activity.
            In the future, each Work Item can have different Owner hence the Activity may have multiple Performers.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemData.Process">
            <summary>
            Gets the Process which contains the Work Item.
            </summary>
            <value>
            If the Work Item is read in context of the Process, the value is <c>null</c>.
            The value is only set if the Work Item is read stand-alone.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemData.Subject">
            <summary>
            Gets the item participating in the workflow.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemData.Comment">
            <summary>
            Gets or sets a comment on the Work Item.
            </summary>
            <remarks>
            <para>Work Item comments can be used to communicate between workflow participants. It does not have meaning for the CM system itself.</para>
            <para>When an Activity is finished, its Work Item comments are carried over to the next Activity.</para>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemData.SubjectOwningRepository">
            <summary>
            Gets the Owning Repository of the Subject
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessData.Activities">
            <summary>
            Gets the Activities that occurred within the Process.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessData.HasSnapshots">
            <summary>
            Gets a value indicating whether this Process has snapshots.
            </summary>
            <remarks>
            This property reflects the <see cref="P:StoreSnapshot" /> property of the Process Definition.
            However, if the Process Definition's property is changed, existing Processes will keep their setting.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessData.Subjects">
            <summary>
            Gets or sets the items which participate in the Process.
            </summary>
            <remarks>
            In most circumstances, this is a read-only property which represents the union of all <see cref="P:WorkItemData.Subject">Subjects of all Work Items</see>
            of the current activity in case of process instance or last activity in case of process history.
            When creating a new Process Instance, this property can be set. As soon as the Process Instance is created, it will have a first Activity Instance
            which contains Work Items for each provided subject. If any of the subjects specified is not a workflow able item an exception is thrown.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessData.Creator">
            <summary>
            Gets the creator of this process.
            </summary>
            <remarks>
            <para>This property is introduced in version 7.0.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessData.WorkflowType">
            <summary>
            Gets the workflow type of this process.
            </summary>
            <remarks>
            <para>This property is introduced in version 7.0.</para>
            <para>Different workflows are intended for different purposes (such as workflow process started automatically on editing item, project workflow
            where multiple items involved or task workflow process. The Workflow Type allows to distinguish workflow processes by their purpose. Predefined
            Workflow Types are: <c>Unspecified (tcm:0-1-67584)</c> (default), <c>SystemStarted  (tcm:0-2-67584)</c> (set internally on saving of Component,
            Page, Component Template or Page Template if they have associated Process Definition) and <c>Task (tcm:0-3-67584)</c>.</para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessInstanceData">
            <summary>
            Represents the data of a Process Instance: a current Process.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessInstanceData.ProcessDefinition">
            <summary>
            Gets the Process Definition on which the Process Instance is based.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessInstanceData.Variables">
            <summary>
            Gets or sets the variable collection containing data shared between Process Instance activities.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessHistoryData.FinishDate">
            <summary>
            Gets the Finish TimeStamp of the Activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessHistoryData.FinishReason">
            <summary>
            Gets the Finish Reason of the Activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessHistoryData.ProcessDefinitionTitle">
            <summary>
            Gets the Process Definition Title of the Activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.Assignee">
            <summary>
            Gets the User or Group to which the Activity is assigned.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.FinishDate">
            <summary>
            Gets the date/time at which the Activity has been finished.
            </summary>
            <value>
            The date/time at which the Activity has been finished or <c>null</c> if the Activity has not been finished yet.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.FinishMessage">
            <summary>
            Gets the message provided by the User that finished the Activity.
            </summary>
            <value>
            If the Activity has not been finished yet this will be an empty string.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.Owner">
            <summary>
            Gets the User who owns the Activity.
            </summary>
            <remarks>
            The User who starts an Activity becomes the owner of the Activity.
            Ownership can be transferred to someone else using the ReAssign method.
            Only the owner can Finish the Activity.
            </remarks>
            <seealso cref="P:Performers" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.Performers">
            <summary>
            Gets the Users that are performing or have performed the Activity.
            </summary>
            <remarks>
            This property is an aggregation of the Work Items' Owner property.
            This property can be empty collection if the Activity was never started, and hence the Work Item(s) were never owned by anybody.
            <para>
            Activity can have multiple Performers because each Work Item can by owned/performed by someone else.</para>
            </remarks>
            <seealso cref="P:Owner" />
            <seealso cref="P:WorkItems" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.Position">
            <summary>
            Gets the position of the current Activity within the Process.
            </summary>
            <seealso cref="P:Process" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.Process">
            <summary>
            Gets the Process which contains the Activity.
            </summary>
            <value>
            If the Activity is read in context of its containing Process, this property is <c>null</c>;
            it only has a value if the Activity is read stand-alone.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.StartDate">
            <summary>
            Gets the date/time at which the Activity was started (for the first time).
            </summary>
            <value>If the Activity is not started yet, the value is <c>null</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.SuspendDate">
            <summary>
            Gets the date/time at which the automated Activity was suspended or failed (the last time).
            </summary>
            <value>If the Activity has not been suspended or failed (yet), the value is <c>null</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.WorkItems">
            <summary>
            Gets the Work Items involved in the Activity.
            </summary>
            <remarks>
            An Activity contains a Work Item for each Content Manager item ("subject") involved in the Activity.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.AssignmentDate">
            <summary>
            Gets the most recent assigned/re-assigned date/time of the Activity.
            </summary>
            <remarks>
            <para>Initially the Assignment date and Creation date is same, upon re-assign of the activity this is updated to time the operation was performed.</para>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityData.DueDate">
            <summary>
            Gets or sets the deadline for finishing activity.
            </summary>
            <remarks>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityHistoryData.ActivityType">
            <summary>
            Gets the Activity Type related to current <see cref="T:ActivityHistoryData" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityHistoryData.ApprovalStatus">
            <summary>
            Gets the Approval Status of the Activity History.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityHistoryData.Description">
            <summary>
            Gets the Description of current <see cref="T:ActivityHistoryData" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityHistoryData.ActivityDefinitionTitle">
            <summary>
            Gets the Activity Definition Title of the Activity.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ActivityInstanceData">
            <summary>
            Represents the data of an Activity Instance: a current Activity which is part of a Process Instance.
            </summary>
            <seealso cref="T:ProcessInstanceData" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstanceData.ActivityDefinition">
            <summary>
            Gets the Activity Definition on which the Activity Instance is based.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstanceData.ActivityState">
            <summary>
            Gets the state of the Activity Instance.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstanceData.ActivityConstraints">
            <summary>
            Gets the constraints of this activity.
            </summary>
            <remarks>This property derived from <see cref="T:ActivityDefinitionData" />.ActivityConstraints.
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstanceData.ResumeBookmark">
            <summary>
            Gets the resume bookmark for suspended automated activities.
            </summary>
            <remarks>
            <para>During suspending of activity user can specify <see cref="P:ResumeBookmark" /> object. With its help script execution can be started in future from specific place, but not from the very beginning.</para>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstanceData.SuspendOrFailReason">
            <summary>
            Gets the reason why this Activity was suspended or failed.
            </summary>
            <remarks>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstanceData.IsExpirationExecution">
            <summary>
            Gets or sets value, indicated whether this activity expired or not.
            </summary>
            <remarks>This property is used by Workflow Agent while expiring the activity.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RepositoryData">
            <summary>
            Represents a Repository: a context for Blueprinting.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.AccessControlList">
            <summary>
            Gets or sets the Access Control List which is used to restrict access to the Repository.
            </summary>
            <remarks>
            Notice that saving a Repository with empty ACL is not supported. In such case the original ACL will not be modified during saving.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.CategoriesXsd">
            <summary>
            Gets the Categories XSD of this Repository.
            </summary>
            <value>The root element of the Categories XSD (xsd:schema).</value>
            <remarks>
            The Categories XSD is a W3C Schema defining all Categories and Keywords (titles)
            in the Repository.
            Since each Repository has its own set of Categories and Keywords and Keyword titles can be localized,
            each Repository has its own Categories XSD.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.DefaultMultimediaSchema">
            <summary>
            Gets or sets the default Multimedia Schema.
            </summary>
            <remarks>
            The default Multimedia Schema is used by WebDAV.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.HasChildren">
            <summary>
            Gets a value indicating whether this Repository has child Repositories in a BluePrint hierarchy.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.Key">
            <summary>
            Gets or sets the Key value.
            </summary>
            <remarks>
            The Key property is used as an additional value to identify Repository. Its value can not be empty and must be unique across all Repositories.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.LocationInfo">
            <summary>
            Gets or sets the location/context information.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.Metadata">
            <summary>
            Gets or sets the (custom) metadata as <see cref="T:SerializableXmlDocument" />.
            </summary>
            <seealso cref="P:MetadataSchema" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.MetadataSchema">
            <summary>
            Gets or sets the Schema for the (custom) metadata on the Repository.
            </summary>
            <value>A <see cref="T:SchemaData" /> object (purpose must be <see cref="F:ContentManagement.SchemaPurpose.Metadata" />) or <c>null</c> if the Repository has no custom metadata.</value>
            <remarks>
            If <c>ExpandLinks</c> <see cref="T:LoadFlags" /> specified, <see cref="T:ExpandableLink`1" /> with fully loaded data object will be returned.
            </remarks>
            <seealso cref="P:Metadata" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.Parents">
            <summary>
            Gets or sets access to the parent Repositories.
            </summary>
            <remarks>
            The order of the items in the lists corresponds to the Blueprint priority of the parents.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.RootFolder">
            <summary>
            Gets the root Folder.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.TaskProcess">
            <summary>
            Gets or sets the Process Definition which defines the task process in this Publication.
            </summary>
            <remarks>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.BusinessProcessType">
            <summary>
            Gets or sets Business Process Type which defines the Business Process to use in this Publication.
            </summary>
            <remarks>
            <para>
            The value of this property is inferred during creation from its parent publication with highest priority with non null Business Process Type.
            In case none of the parent publication has Business Process Type set then the value stays null.
            </para>
            <para>To set this property explicitly, the Business Process Type Management and Publication Management rights are necessary.</para>
            <para>In order to unset this property set the value of this property to Null Link (tcm:0-0-0).</para>
            <para>This property is introduced in version 8.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryData.MinimalLocalizeApprovalStatus">
            <summary>
            Gets or sets the minimal approval status to localize dynamic version of an item in workflow in this Publication.
            </summary>
            <remarks>
            <para>The default value is <see cref="F:Workflow.ApprovalStatusType.Undefined" />. In this case, localization of dynamic versions is always allowed.</para>
            <para>If set to value other than Undefined, then it is only allowed to localize dynamic version of an item in workflow if its current
            approval status is the same or "higher" than the specified.</para>
            <para>This setting is only applicable to items in workflow. It is always allowed to localize dynamic versions of items that do not have
            associated workflow.</para>
            <para>To set this property explicitly, the Publication Management rights are necessary.</para>
            <para>In order to unset this property (make it Undefined) set the value of this property to Null Link (tcm:0-0-0).</para>
            <para>This property is introduced in version 8.1.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.ComponentSnapshotTemplate">
            <summary>
            Gets or sets the Component Template that is used to render the snapshot for a Component that is in Workflow.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.ComponentTemplateProcess">
            <summary>
            Gets or sets the Process Definition that defines the Workflow process which is triggered when Component Templates are edited.
            </summary>
            <seealso cref="P:TemplateBundleProcess" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.DefaultComponentTemplate">
            <summary>
            Gets or sets the default Component Template.
            </summary>
            <remarks>
            The default Component Template is used to render previews of Components.
            It also provides the default content for new Component Templates.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.DefaultPageTemplate">
            <summary>
            Gets or sets the default Page Template.
            </summary>
            <remarks>
            The default Page Template provides the default content for new Page Templates.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.DefaultTemplateBuildingBlock">
            <summary>
            Gets or sets the default Template Building Block.
            </summary>
            <remarks>
            The default Template Building Block provides the default content for new Template Building Blocks.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.MultimediaPath">
            <summary>
            Gets or sets the path to the directory containing published binaries.
            </summary>
            <remarks>
            This property is for backward compatibility.
            As of 5.3, it is also possible to publish binaries in any Structure Group.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.MultimediaUrl">
            <summary>
            Gets or sets the URL of the directory containing published binaries.
            </summary>
            <remarks>
            This property is for backward compatibility.
            As of 5.3, it is also possible to publish binaries in any Structure Group.
            This needs to be a relative Url: server-relative (starts with a '/') or relative to the publishing context (doesn't start with a '/').
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.PageSnapshotTemplate">
            <summary>
            Gets or sets the Page Template that is used to render the snapshot for a Page that is in Workflow.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.PageTemplateProcess">
            <summary>
            Gets or sets the Process Definition that defines the Workflow process which is triggered when Page Templates are edited.
            </summary>
            <seealso cref="P:TemplateBundleProcess" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.PublicationPath">
            <summary>
            Gets or sets the publication/publish path.
            </summary>
            <remarks>
            The publish path of Structure Groups and Pages starts with the Publication's PublicationPath.
            </remarks>
            <seealso cref="P:PublicationUrl" />
            <seealso cref="P:shLocationInfo.PublishPath" />
            <seealso cref="P:PublishLocationPath" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.PublicationType">
            <summary>
            Gets or sets the type of a Publication.
            </summary>
            <value>
            The value must be the name of one of the configured Publication Types.
            The following values can be used out-of-the box (configured with installation by default):
            <list type="table">
            <item><term>Unspecified</term><description>Unspecified Publication Type</description></item>
            <item><term>Content</term><description>Content Publication Type</description></item>
            <item><term>Web</term><description>Web Publication Type</description></item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.PublicationUrl">
            <summary>
            Gets or sets the server-relative publication/publish URL.
            </summary>
            <remarks>
            This property is for backward compatibility as of 8.0.
            Leave this property empty to enable resolving of publish URL based on Topology Manager configuration.
            If specified, it will be considered as server-relative URL.
            The publish URL of Structure Groups and Pages starts with the Publication's PublicationUrl if any.
            </remarks>
            <seealso cref="P:PublicationPath" />
            <seealso cref="P:PublishPath" />
            <seealso cref="P:PublishLocationUrl" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.RootStructureGroup">
            <summary>
            Gets the root Structure Group.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.ShareProcessAssociations">
            <summary>
            Gets or sets a value indicating whether to share Process Associations of Schemas and Structure Groups from a parent Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationData.TemplateBundleProcess">
            <summary>
            Gets or sets the Process Definition which defines the Bundle process for all Templates (PT, CT, TBB) in this Publication.
            </summary>
            <remarks>
            If a Template Bundle Process is specified, Templates must be added to a Bundle before they can be checked in.
            The Bundle has to be of an appropriate type. That is: The Bundle's Schema has to be associated with this Process Definition.
            <para>This property is introduced in version 7.0</para>
            </remarks>
            <seealso cref="P:PageTemplateProcess" />
            <seealso cref="P:ComponentTemplateProcess" />
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BluePrintNodeData">
            <summary>
            Represents a node in a BluePrint hierarchy.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintNodeData.Item">
            <summary>
            Gets or sets the <see cref="T:RepositoryLocalObjectData" /> that this <see cref="T:BluePrintNodeData" /> represents.
            </summary>
            <value>A <see cref="T:RepositoryLocalObjectData" /> object.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrusteeData.Description">
            <summary>
            Gets or sets the description (full name) of the Trustee
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrusteeData.GroupMemberships">
            <summary>
            Gets or sets access to the Trustee's Group memberships.
            </summary>
            <remarks>
            Normally, this property only contains the direct Group memberships and does not include Group memberships obtained from an external (LDAP) directory.
            However, the Session.User property is a special User object for which the Group memberships are "expanded":
            it includes indirect Group memberships and also Group memberships obtained from an external (LDAP) directory.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrusteeData.IsPredefined">
            <summary>
            Gets whether the trustee is predefined by the system.
            </summary>
            <remarks>
            Predefined Trustees cannot be deleted and may be suppressed from lists.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.UserData">
            <summary>
            Represents the data of a User.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserData.IsEnabled">
            <summary>
            Gets or sets whether the User is enabled.
            </summary>
            <remarks>
            A user can only log in if his User account is enabled.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserData.IsEnabledEditable">
            <summary>
            Gets whether the enabled state can be modified.
            </summary>
            <remarks>
            <para>Only System Administrators can modify an enabled state of User if it's not his own or is predefined.</para>
            <para>This property is only set if the LoadFlag IncludeAllowedActions is used otherwise the value is <c>null</c>.</para>
            </remarks>
            <seealso cref="P:TrusteeData.IsPredefined" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserData.IsPrivilegesEditable">
            <summary>
            Gets whether the privileges can be modified.
            </summary>
            <remarks>
            <para>Only System Administrators can modify a User's privileges if it's not his own or is predefined.</para>
            <para>This property is only set if the LoadFlag IncludeAllowedActions is used otherwise the value is <c>null</c>.</para>
            </remarks>
            <seealso cref="P:TrusteeData.IsPredefined" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserData.LanguageId">
            <summary>
            Gets or sets the language ID (LCID) of the User
            </summary>
            <remarks>
            The language ID determines the language in which localizable text is displayed.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserData.LocaleId">
            <summary>
            Gets or sets the locale ID (LCID) of the User
            </summary>
            <remarks>
            The locale ID determines the formatting of date/time and numeric values.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserData.Privileges">
            <summary>
            Gets or sets the User's system-wide privileges
            </summary>
            <value>
            A bitmap of privilege value. Currently, only one privilege value has been defined:
            <list type="table">
            <item><term>1</term><description>System Administrator</description></item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessTokenData.ExpiresAt">
            <summary>
            Gets the expiration date and time in UTC format for this token.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessTokenData.Signature">
            <summary>
            Gets a signature value for this token to prevent modifying any of its properties outside of the CM system.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessTokenData.InheritedSystemPrivileges">
            <summary>
            Gets a dictionary containing <see cref="T:Security.SystemPrivilege" /> and <see cref="T:Link`1" /> associations.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.GroupData">
            <summary>
            Represents a data of Group of Users.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupData.ClaimMappings">
            <summary>
            Gets or sets access to the Group's Claim Mappings.
            </summary>
            <remarks>
            A specific kind of Claim Mapping is a Directory Group Mapping,
            which is used to map the group to a Group or Subtree in a Directory Service.
            </remarks>
            <seealso cref="T:DirectoryGroupMappingData" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupData.DefaultGroupId">
            <summary>
            Gets the Default Group Id
            </summary>
            <remarks>
            Determines the default group id for current group
            </remarks>
            <seealso cref="T:DirectoryGroupMappingData" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupData.Scope">
            <summary>
            Gets or sets access to the Group's scope (also known as "usage constraints"): the Repositories in which the Group can be used.
            </summary>
            <value>
            A collection of Repository objects representing the Repositories in which the Group can be used.
            An empty collection means that the Group is not scoped to particular Repositories.
            Changes to the collection are reflected in the state of the Group.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupData.InheritedSystemPrivileges">
            <summary>
            Gets a dictionary containing <see cref="T:Security.SystemPrivilege" /> and <see cref="T:Link`1" /> associations.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupData.SystemPrivileges">
            <summary>
            Gets or sets a collection of <see cref="T:Security.SystemPrivilege" /> assigned for this group.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.MultimediaTypeData">
            <summary>
            Represents a Multimedia Type: a type of binary content
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.MultimediaTypeData.FileExtensions">
            <summary>
            Gets or sets the file extensions associated with this Multimedia type.
            </summary>
            <remarks>
            File extensions must be unique across all Multimedia types.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.MultimediaTypeData.MimeType">
            <summary>
            Gets or sets the MIME type according to IETF RFC 2046.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishingTargetData.Description">
            <summary>
            Gets or sets a description of the Publishing Target.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TargetTypeData">
            <summary>
            Represents the data of a Target Type used as target for publishing.
            </summary>
            <remarks>
            When publishing in the Content Manager Explorer, the user selects Target Types.
            Target Types are an abstraction over Publication Targets - multiple Publication Targets can be grouped under one Target Type.
            The primary purpose of this is to use different Publication Targets for different Publications.
            <para>
            A Target Type can be used by only one Business Process Type.
            Target Type in use by Publication Target cannot be used by Business Process Type and vice-versa.
            </para>
            <para>
            Creating, updating or deleting Target Type requires the user to be System Administrator.
            However, when Target Type is created/updated/deleted in context of a Business Process Type, the user should have Business Process Type Management rights,
            and in order to alter the Access Control List additional Permission Management rights is required in the context of this Business Process Type.
            </para>
            <para>
            Deleting a Publication should delete the Target Types that are used in all the Business Process Types which are local in that Publication, not localized.
            </para>
            </remarks>
            <seealso cref="T:PublicationTargetData" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetTypeData.AccessControlList">
            <summary>
            Gets or sets the Access Control List which is used to restrict access to the Target Type.
            </summary>
            <remarks>
            Notice that saving a Target Type with empty ACL is not supported. In such case the original ACL will not be modified during saving.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetTypeData.BusinessProcessType">
            <summary>
            Gets associated Business Process Type of this Target Type.
            </summary>
            <remarks>
            When saving Target Type in context of a Business Process Type this property is automatically set.
            The link to the Business Proces Type is always returned in its Primary Blueprint Parent context.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetTypeData.MinimalApprovalStatus">
            <summary>
            Gets or sets MinimalApprovalStatus of this Target Type.
            </summary>
            <remarks>
            <para>
            When rendering, items with approval status equal or "higher" than the minimal approval status of the Target Type will be rendered.
            </para>
            <para>
            Items with <see cref="F:Workflow.ApprovalStatusType.Undefined" /> is not affected by this setting.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetTypeData.Priority">
            <summary>
            Gets or sets Priority for this Target Type.
            </summary>
            <remarks>
            When creating <c>PublishTransaction</c> this value is used if not overridden.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetTypeData.Purpose">
            <summary>
            Gets or sets the Purpose of this Target Type in context of a Business Process Type.
            </summary>
            <remarks>
            <para>
            This property can be set in context of a Business Process Type.
            </para>
            <para>
            This value is case-sensitive.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublicationTargetData">
            <summary>
            Represents the data of a Publication Target: a logical target for publishing.
            </summary>
            <remarks>
            A Publication Target represents one or more physical targets ("Destinations") with the
            same logical purpose. For example: a web farm consisting of multiple physical web servers.
            Publication Targets, in turn, are grouped using Target Types.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetData.DefaultCodePage">
            <summary>
            Gets or sets the default code page number.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetData.Destinations">
            <summary>
            Gets or sets the Destinations for the Publication Target.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetData.MinApprovalStatus">
            <summary>
            Gets or sets the minimum approval status of the item.
            </summary>
            <value>
            An <see cref="T:Workflow.ApprovalStatusData" /> object representing the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetData.Priority">
            <summary>
            Gets or sets the priority value for this publication target.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetData.Publications">
            <summary>
            Gets or sets the Publications for the Publication Target.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetData.TargetLanguage">
            <summary>
            Gets or sets the name of the target language.
            </summary>
            <value>
            Empty string indicates that TCDL is not generated.
            Any non-empty string indicates that TCDL is generated - it can be the legacy name of the target language used or any name used in future.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetData.TargetTypes">
            <summary>
            Gets or sets the TargetTypes for the Publication Target.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetData.IsEmulated">
            <summary>
            Gets a value indicating whether this Publication Target was emulated from the Target Type.
            </summary>
            <remarks>
            <para>
            When new <see cref="T:TargetTypeData" /> is created that is used in <see cref="T:BusinessProcessTypeData" />,
            the emulated <see cref="T:PublicationTargetData" /> is created for backward compatibility.
            </para>
            <para>
            This property is introduced in version 8.0.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ApprovalStatusData">
            <summary>
            Represents a data of Approval Status.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApprovalStatusData.IsDeleted">
            <summary>
            Gets a value indicating whether the Approval Status is deleted.
            </summary>
            <remarks>
            If an Approval Status is deleted, it is not physically removed, but only flagged as deleted
            (and therefore suppressed from the list of Approval Statuses).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApprovalStatusData.Position">
            <summary>
            Gets or sets the position of this Approval Status in the list of Approval Statuses.
            </summary>
            <remarks>
            The list of Approval Statuses is ordered, because Publication Targets can have a minimal Approval Status:
            Approval Statuses with a Position lower than this minimal approval status won't be publishable.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BatchData">
            <summary>
            Represents data of a Batch. Defines batch operations and aditional info related to batch invocation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchData.NumberOfDoneOperations">
            <summary>
            Gets the count of done operations.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchData.Operations">
            <summary>
            Gets or sets the list of operations of current batch.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchData.Performer">
            <summary>
            Gets the performer of batch operation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchData.StartAt">
            <summary>
            Gets or sets the time, when batch operation must be started.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchData.TotalNumberOfOperations">
            <summary>
            Gets the total of operations.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchData.PerformerAccessToken">
            <summary>
            Gets access token of the performer.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RegisteredTypeData.Name">
            <summary>
            Gets the non-translatable name of the registered type that can be used to identify it
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.WorkflowTypeData">
            <summary>
            Represents a data of Workflow Type.
            </summary>
            <remarks>
            <para>Different workflows are intended for different purposes (such as workflow process started automatically on editing item, project workflow
            where multiple items involved or task workflow process. The Workflow Type allows to distinguish workflow processes by their purpose. Predefined
            Workflow Types are: <c>Unspecified (tcm:0-1-67584)</c> (default), <c>SystemStarted  (tcm:0-2-67584)</c> (set internally on saving of Component,
            Page, Component Template or Page Template if they have associated Process Definition) and <c>Task (tcm:0-3-67584)</c>.</para>
            <para>Workflow types are read-only and can't be created/modified/deleted through API. Custom workflow types can be registered in the
            Tridion.ContentManager.config in the <c>workflowTypes</c> section. To get the list of registered workflow types, use the <c>ICoreService2012.GetSystemWideList</c>
            with the <c>WorkflowTypesFilterData</c> filter.</para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishTransactionData">
            <summary>
            Represents the data object of a PublishTransaction.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.Creator">
            <summary>
            Gets the the user that created this <see cref="T:PublishTransactionData" /> by publishing item(s).
            </summary>
            <value>The creator.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.DeployerAction">
            <summary>
            Gets the action the deployer should take.
            </summary>
            <value>The deployer action.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.HasRenderFailures">
            <summary>
            Gets a value indicating whether one of the <see cref="P:ContextData.ProcessedItems" /> in this instance has render failures.
            </summary>
            <value>
            <c>True</c> if at least one of the <see cref="P:ContextData.ProcessedItems" /> in this instance has render failures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.Information">
            <summary>
            Gets the information about this publish transaction.
            </summary>
            <value>Information about the reason of a failed publish transaction.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.Instruction">
            <summary>
            Gets the instruction of this instance.
            </summary>
            <value>The instruction of this instance.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.Items">
            <summary>
            Gets the collection of items that need to be published or unpublished.
            </summary>
            <value>The collection of items that needs to be published or unpublished. Currently this is always one item.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.Priority">
            <summary>
            Gets the priority of this instance. It can be one of three values: low, normal or high. Transactions are executed according to this priority.
            </summary>
            <value>The priority of this instance.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.PublishContexts">
            <summary>
            Gets the collection of publish contexts that indicates where to publish/unpublish to.
            </summary>
            <value>The collection of publish contexts.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.State">
            <summary>
            Gets the state of this instance.
            </summary>
            <value>The state of this instance.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.StateChangeDateTime">
            <summary>
            Gets the date/time when the last state change occurred.
            </summary>
            <value>The date/time of the last state change.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.IsCompleted">
            <summary>
            Gets the value whether the publishing of the <see cref="T:PublishTransactionData" /> is finished.
            </summary>
            <remarks>
            <para>This property is introduced in version 8.0.</para>
            <para>This property is set to <c>true</c> when transaction is in one of the final states: <see cref="F:Publishing.PublishTransactionState.Success" />, <see cref="F:Publishing.PublishTransactionState.Failed" />,
            <see cref="F:Publishing.PublishTransactionState.Warning" />, <see cref="F:Publishing.PublishTransactionState.Undone" />, <see cref="F:Publishing.PublishTransactionState.UndoFailed" />; otherwise, <c>false</c>.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.PublisherHost">
            <summary>
            Gets the name of the server with Publisher service that handles current <see cref="T:PublishTransactionData" />.
            </summary>
            <remarks>
            <para>This property is introduced in version 8.0.</para>
            <para>The value of this property is available after a Publisher has started processing this publish transaction and is an unqualified (domainless) server name. Prior to that the value of this property is <c>null</c>.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.TargetType">
            <summary>
            Gets the Target Type for this Publish Transaction.
            </summary>
            <remarks>
            <para>This property might be null if associated Publication Target has none or more than one Target Type.</para>
            <para>This property introduced in version 8.0.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.RenderingTime">
            <summary>
            Gets the time span which was spent to render <see cref="T:PublishTransactionData" />.
            </summary>
            <remarks>
            <para>The value of this property is available after a Publisher has finished rendering of the publish transaction.</para>
            <para>This property is introduced in version 8.1.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.ResolvingTime">
            <summary>
            Gets the time span which was spent to resolve items for <see cref="T:PublishTransactionData" />.
            </summary>
            <remarks>
            <para>The value of this property is available after a Publisher has finished resolving of the items to be published for the publish transaction.</para>
            <para>This property is introduced in version 8.1.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionData.TotalExecutionTime">
            <summary>
            Gets the time span which was spent for publishing <see cref="T:PublishTransactionData" />.
            </summary>
            <remarks>
            <para>The value of this property is available after publish transaction gets to the one of the final states
            (<see cref="F:Publishing.PublishTransactionState.Success" />, <see cref="F:Publishing.PublishTransactionState.Warning" />, <see cref="F:Publishing.PublishTransactionState.Failed" />).</para>
            <para>This property is introduced in version 8.1.</para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationData">
            <summary>
            Representing data object of Process Definition Association
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationData.ProcessDefinition">
            <summary>
            Gets the ProcessDefinition related to current <see cref="T:ProcessDefinitionAssociationData" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectData.BluePrintInfo">
            <summary>
            Gets the BluePrint information.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectData.IsPublishedInContext">
            <summary>
            Gets whether the object is published in the context Publication.
            </summary>
            <remarks>
            More extensive Publish Info can be retrieved from the PublishEngine.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectData.LocationInfo">
            <summary>
            Gets the location/context information.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectData.Metadata">
            <summary>
            Gets or sets the (custom) metadata as <see cref="T:SerializableXmlDocument" />.
            </summary>
            <seealso cref="P:MetadataSchema" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectData.MetadataSchema">
            <summary>
            Gets or sets the Schema for the (custom) metadata.
            </summary>
            <value>A <see cref="T:SchemaData" /> (purpose must be <see cref="F:ContentManagement.SchemaPurpose.Metadata" />) or <see cref="T:Link" /> to Null Uri if the object has no custom metadata.</value>
            <remarks>
            If <c>ExpandLinks</c> <see cref="T:LoadFlags" /> specified, <see cref="T:ExpandableLink`1" /> with fully loaded data object will be returned.
            </remarks>
            <seealso cref="P:Metadata" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectData.LockInfo">
            <summary>
            Gets the Lock information. Set for Organizational Items and Versioned Items.
            </summary>
            <remarks>Introduced in 7.0.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessDefinitionData">
            <summary>
            Abstract base class for the data of Process Definitions.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionData.ActivityDefinitions">
            <summary>
            Gets the Activity Definitions.
            </summary>
            <remarks>
            The first Activity Definition specified in this collection is the one that will be the used
            to create the first Activity Instance of the workflow.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionData.StoreSnapshot">
            <summary>
            Gets or sets a value indicating whether Process Instances based on this Process Definition store snapshots.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TridionProcessDefinitionData">
            <summary>
            Represents the data of a Tridion proprietary Process Definition.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionProcessDefinitionData.Diagram">
            <summary>
            Gets or sets the binary representation of the Diagram of the Activity Definition.
            </summary>
            <value>A Microsoft Visio diagram, or an empty byte array.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemData.AccessControlList">
            <summary>
            Gets or sets the Access Control List which is used to restrict access to the Organizational Item.
            </summary>
            <remarks>
            Notice that saving an Organizational Item with empty ACL is not supported. In such case the original ACL will not be modified during saving.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemData.IsPermissionsInheritanceRoot">
            <summary>
            Gets or sets a value indicating whether the item inherits permissions from the parent item.
            </summary>
            <value><c>true</c> if permissions are specified for item itself; otherwise, <c>false</c>, if item inherits permissions from the parent item.</value>
            <remarks>By default, that property is set to false for non root organizational items. If it is false, modification of <c>AccessControlList.AccessControlEntries</c>
            will be silently ignored.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemData.IsRootOrganizationalItem">
            <summary>
            Gets whether the Organizational Item is a root (i.e. its parent is a Publication).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.FolderData">
            <summary>
            Represents the data of a Folder: an item used to organize the items in a Repository.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FolderData.IsLinkedSchemaMandatory">
            <summary>
            Gets or sets whether the linked Schema is mandatory.
            </summary>
            <remarks>
            If the linked Schema is not mandatory, it merely acts as a default Schema for new Components created in the Folder.
            If the linked Schema is mandatory, Components cannot be saved in the Folder unless they are based on this Schema.
            It is not possible to make the linked Schema mandatory if there are Components in the Folder based on another Schema.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FolderData.LinkedSchema">
            <summary>
            Gets or sets the linked Schema of the Folder.
            </summary>
            <remarks>
            The linked Schema acts as default Schema for Components created in the Folder.
            It can also acts as mandatory Schema, if <see cref="P:IsLinkedSchemaMandatory" /> is set to <c>true</c>.
            In the latter case, Components cannot be saved in the Folder unless they are based on this Schema.
            </remarks>
            <seealso cref="P:IsLinkedSchemaMandatory" />
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.StructureGroupData">
            <summary>
            Represents the data of a Structure Group: an Organizational Item used to build the Publication's target structure.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StructureGroupData.DefaultPageTemplate">
            <summary>
            Gets or sets the default Page Template.
            </summary>
            <remarks>
            All items contained in the Structure Group which don't have a (default) Page Template
            set explicitly inherit their setting from the Structure Group.
            The Structure Group itself may inherit its default Page Template setting from its parent
            (Structure Group or Publication).
            </remarks>
            <seealso cref="P:IsDefaultPageTemplateInherited" />
            <seealso cref="P:PageData.PageTemplate" />
            <seealso cref="P:PublicationData.DefaultPageTemplate" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StructureGroupData.Directory">
            <summary>
            Gets or sets the directory name.
            </summary>
            <remarks>
            The directory name is the Structure Group's physical name in the target structure.
            The directory name is subject to the restrictions of the Windows file system.
            The directory name of the root Structure Group may be empty.
            </remarks>
            <seealso cref="P:PublishLocationPath" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StructureGroupData.IsActive">
            <summary>
            Gets or sets the active state of the Structure Group.
            If the active state is set to <c>false</c>, the Structure Group and the items inside it cannot be published.
            </summary>
            <remarks>
            Even if the active state is set to <c>true</c>, it is not enough for a Structure Group to be publishable;
            all of its ancestor Structure Groups must also have the active state set to <c>true</c> for that to succeed.
            </remarks>
            <seealso cref="P:IsActiveResolvedValue" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StructureGroupData.IsActiveResolvedValue">
            <summary>
            Gets a value indicating whether this Structure Group and its items can be published.
            Returns <c>true</c> if the active state of this Structure Group and all of its ancestors is <c>true</c>.
            Returns <c>false</c> if the active state of this Structure Group or any of its ancestors is <c>false</c>.
            The individual active state of each Structure Group is represented by the property <see cref="P:IsActive" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StructureGroupData.IsDefaultPageTemplateInherited">
            <summary>
            Gets or sets whether the default Page Template is inherited from the Structure Group's parent.
            </summary>
            <remarks>
            The Structure Group's parent is the containing Structure Group or the Publication in case
            of the root Structure Group.
            Returns <c>true</c> if the IsDefaultPageTemplateInherited property is <c>null</c>.
            </remarks>
            <seealso cref="P:DefaultPageTemplate" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StructureGroupData.PageProcess">
            <summary>
            Gets or sets an associated Process Definition which defines the editing process for Pages in the Structure Group.
            </summary>
            <remarks>
            If a Page Process is specified, a workflow process based on this Process Definition will be started when a Page is saved.
            This process has to be finished before the Page will be checked in. Hence we refer to this as an editing process.
            </remarks>
            <seealso cref="P:PageBundleProcess" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StructureGroupData.PageBundleProcess">
            <summary>
            Gets or sets an associated Process Definition which defines the Bundle process for Pages in the Structure Group.
            </summary>
            <remarks>
            If a Page Bundle Process is specified, Pages must be added to a Bundle before they can be checked in.
            The Bundle has to be of an appropriate type. That is: The Bundle's Schema has to be associated with this Process Definition.
            <para>This property is introduced in version 7.0</para>
            </remarks>
            <seealso cref="P:PageProcess" />
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.VirtualFolderData">
            <summary>
            Represents the data of a Virtual Folder: an Organizational Item that dynamically collects its contents.
            </summary>
            <remarks>
            Although Virtual Folder subclasses exist in the TOM.NET, there are no subclasses in the data model.
            The TOM.NET subclasses only add Business Logic; any additional properties exposed on these subclasses are mapped to the <see cref="P:Configuration" /> property.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.VirtualFolderData.Configuration">
            <summary>
            Gets or sets the configuration data.
            </summary>
            <value>The root element of the configuration data.</value>
            <remarks>
            This property provides low-level access to the XML configuration data..
            </remarks>
            <seealso cref="P:TypeSchema" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.VirtualFolderData.TypeSchema">
            <summary>
            Gets or sets the Schema for the configuration data.
            </summary>
            <value>A <see cref="T:SchemaData" /> object (purpose must be <see cref="F:ContentManagement.SchemaPurpose.VirtualFolderType" />)</value>
            <seealso cref="P:Configuration" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.VirtualFolderData.ApprovalStatus">
            <summary>
            Gets the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Workflow.ApprovalStatusData" /> object representing the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.VirtualFolderData.Description">
            <summary>
            Gets or sets the description of the Virtual Folder.
            </summary>
            <remarks>
            The description can be used for informational purposes.
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.VirtualFolderData.WorkflowInfo">
            <summary>
            Gets workflow-related information for the item
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ResolvedBundleData">
            <summary>
            Represents the data of a Resolved Bundle, which represents the actual Bundle and the specified mapped item(s) in it.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolvedBundleData.ItemCount">
            <summary>
            Gets the number of total items in the Bundle.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolvedBundleData.MappedItems">
            <summary>
            Gets a collection of TCM URIs or WebDAV URLs of given items which are associated with this Bundle.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.CategoryData">
            <summary>
            Represents the data of a Category of Keywords.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CategoryData.AllowedParentCategories">
            <summary>
            Get access to the allowed parent Categories.
            </summary>
            <value>A collection of Category objects. This is a connected collection: changes to the collection are reflected in the object's state.</value>
            <remarks>
            Keywords from this Category are allowed to have parent Keywords from the allowed parent categories.
            Current implementation allows only one parent category. By default when no parent category is set the category itself is added as allowed parent category.
            Reassign with a new collection when changing or setting a new parent.
            To remove parent categories reassign with a new collection which contains the Category itself.
            </remarks>
            <seealso cref="P:IsTaxonomyRoot" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CategoryData.Description">
            <summary>
            Gets or sets the description of the Category.
            </summary>
            <remarks>
            The description can be used for informational purposes.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CategoryData.IsTaxonomyRoot">
            <summary>
            Gets whether the Category is a root Category (i.e. it has no allowed parent Categories other than itself).
            </summary>
            <seealso cref="P:AllowedParentCategories" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CategoryData.KeywordMetadataSchema">
            <summary>
            Gets or sets the metadata Schema for the Keywords in this Category.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CategoryData.UseForIdentification">
            <summary>
            Gets or sets indicating whether the Category can be used for Taxonomy identification.
            </summary>
            <remarks>
            Specifies whether to enforce title uniqueness in the whole Blueprint structure on components that are classified with keywords from this Category.
            For example, Components can be classified by a Keyword if there is no other Component with the same title classified with this Keyword.
            Can be configurable only on root Categories.
            Title uniqueness check is performed on Component with fields that contains Keyword from Category with UseForIdentification set to true.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CategoryData.UseForNavigation">
            <summary>
            Gets or sets a value indicating whether the taxonomy in this Category can be published.
            </summary>
            <remarks>
            Before SDL Tridion 2009 the behavior was get or set whether the taxonomy can be used for navigation.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CategoryData.XmlName">
            <summary>
            Gets or sets the XML (type) name of the Category.
            </summary>
            <remarks>
            Each publication contains a "Categories XSD" in which all Categories and their Keywords
            are defined. In this Categories XSD, each Category is represented as a complex type with this name.
            The XML name is subject to the restrictions specified for type names in XML Schemas:
            <list type="bullet">
            <item>The first character must be a letter or an underscore.</item>
            <item>Following characters may be letters, digits, underscores, dashes or dots.</item>
            </list>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BusinessProcessTypeData">
            <summary>
            Represents a Business Process Type: defines a type of (publishing) Business Process, including a set of publishing Target Types and workflows.
            </summary>
            <remarks>
            It is a root Organizational Item. Title must be unique across its blueprint hierarchy; like all other root organizational item.
            <para>
            Metadata Schema, Bundle Schemas and Target Types of a Business Process Type is not localizable.
            </para>
            <para>
            <c>AccessControlListData</c> and <c>IsPermissionsInheritanceRoot</c> cannot be set for Business Process Type.
            </para>
            <para>
            <c>GetList</c> and <c>GetListXml</c> returns the associated <see cref="P:BundleSchemas" />.
            </para>
            <para>
            When reading a Business Process Type the associated Target Types are returned without its Access Control List, if that information is needed,
            then, the Business Process Type should be loaded with <c>LoadFlags.Expanded</c>.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BusinessProcessTypeData.BundleSchemas">
            <summary>
            Gets or sets the bundle schemas which are applicable for this Business Process Type.
            </summary>
            <remarks>
            This property is not localizable.
            <para>
            The collection of Bundle Schemas is used to determine the workflow that will be used in the <c>Publication</c>.
            </para>
            <para>
            This property can only be set by user with Business Process Type Management rights.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BusinessProcessTypeData.CdTopologyTypeId">
            <summary>
            Gets or sets the topology type id of the Business Process Type.
            </summary>
            <remarks>
            <para>
            This property can not be null or empty.
            </para>
            <para>
            CdTopologyType with specified <see cref="P:CdTopologyTypeId" /> must exists in the associated Topology Manager.
            The endpoint address of the associated Topology Manager is stored in the environment variable with name "TRIDION_TTM_SERVICEURL".
            </para>
            <para>
            This property is not localizable.
            </para>
            <para>
            Value of this property is the id of the topology type from the associated Tridion Topology Manager.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BusinessProcessTypeData.Description">
            <summary>
            Gets or sets the description of the Business Process Type.
            </summary>
            <remarks>
            The description can be used for informational purposes.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BusinessProcessTypeData.TargetTypes">
            <summary>
            Gets or sets associated Target Types of this Business Process Type.
            </summary>
            <remarks>
            This property is not localizable.
            <para>
            The collection of Target Types is used to determine Content Delivery Environment using Topology Manager.
            </para>
            <para>
            In order to change the Access Control List additional Permission Management rights is required in the context publication.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.KeywordData">
            <summary>
            Represents the data of a Keyword used to classify items.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordData.Description">
            <summary>
            Gets or sets a description of the Keyword.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordData.IsAbstract">
            <summary>
            Gets or sets whether the Keyword is abstract.
            </summary>
            <remarks>
            An abstract Keyword cannot be used to classify items with. It is merely there to act
            as a parent for other Keywords.
            This property cannot be changed in a local copy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordData.IsRoot">
            <summary>
            Gets whether the Keyword is a root Keyword (i.e. it has no parent Keywords).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordData.Key">
            <summary>
            Gets or sets a custom key for the Keyword.
            </summary>
            <remarks>
            This key can be used to identify a Keyword in custom code; it has no special meaning to the TCM system.
            Unlike the Keyword's <see cref="P:IdentifiableObjectData.Title" />, this property cannot be changed in a local copy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordData.ParentKeywords">
            <summary>
            Gets or sets access to the parent Keywords of this Keyword.
            </summary>
            <remarks>
            Parent Keywords are used to form a Taxonomy of Keywords.
            Typically, a parent Keyword is a broader term/concept.
            The Parent Keywords must be from one of the allowed parent Categories of this Keyword's Category.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordData.RelatedKeywords">
            <summary>
            Gets or sets access to the Keywords related to this Keyword.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TargetGroupData">
            <summary>
            Represents the data of a Target Group: used to target an audience based on certain conditions.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetGroupData.Conditions">
            <summary>
            Gets or sets access to the conditions that define the Target Group
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetGroupData.Description">
            <summary>
            Gets or sets the description of the Target Group.
            </summary>
            <remarks>
            The Description has no special meaning to the system. It can be used to explain
            the purpose of the Target Group to users.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ComponentData">
            <summary>
            Represents the data of a Component: a generic holder of content and metadata.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentData.ApprovalStatus">
            <summary>
            Gets the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Workflow.ApprovalStatusData" /> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentData.BinaryContent">
            <summary>
            Gets or sets access to the Component's binary content.
            </summary>
            <remarks>
            Only Multimedia Components (i.e. Component based on a Multimedia Schema) have binary content.
            For "normal" Components, which have XML content instead, this property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentData.ComponentType">
            <summary>
            Gets the type of the Component (Normal or Multimedia).
            </summary>
            <remarks>
            This type is derived from the <see cref="P:Schema" /> on which the Component is based.
            Components with type <see cref="F:ContentManagement.ComponentType.Multimedia" /> are often referred to as "Multimedia Components".
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentData.Content">
            <summary>
            Gets or sets the Component's XML content as <see cref="T:SerializableXmlDocument" />.
            </summary>
            <value>
            The <see cref="T:SerializableXmlDocument" /> or <c>null</c> for Multimedia Components.
            </value>
            <remarks>
            This property provides low-level access to the XML content.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentData.IsBasedOnMandatorySchema">
            <summary>
            Gets whether the Component is based on a Mandatory Schema
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentData.IsBasedOnTridionWebSchema">
            <summary>
            Gets whether the Component is based on a Tridion Web Schema
            </summary>
            <remarks>
            When saving a Schema, its content model is analyzed to determine whether it is simple enough
            to qualify as "Tridion Web Schema".
            Components which are based on a Tridion Web Schema can be edited using a form-based User Interface
            in the Content Manager Explorer.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentData.Schema">
            <summary>
            Gets or sets the Schema for the Component's content and metadata.
            </summary>
            <remarks>
            If <c>ExpandLinks</c> <see cref="T:LoadFlags" /> specified, <see cref="T:ExpandableLink`1" /> with fully loaded data object will be returned.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentData.WorkflowInfo">
            <summary>
            Gets workflow-related information for the item
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PageData">
            <summary>
            Represents the data of a Page: an artifact in the Publication's target structure.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageData.ApprovalStatus">
            <summary>
            Gets the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Workflow.ApprovalStatusData" /> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageData.ComponentPresentations">
            <summary>
            Gets or sets the Component Presentations on the Page.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageData.FileName">
            <summary>
            Gets or sets the file name.
            </summary>
            <remarks>
            The file name is the Page's physical name in the target structure.
            The file name is subject to the restrictions of the Windows file system.
            The file name does not include the file extension.
            The file extension is determined by the Page Template: <see cref="P:FileExtension" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageData.IsPageTemplateInherited">
            <summary>
            Gets or sets whether the Page Template is inherited from the containing Structure Group.
            </summary>
            <seealso cref="T:PageTemplateData" />
            <seealso cref="P:DefaultPageTemplate" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageData.PageTemplate">
            <summary>
            Gets or sets the Page Template used to render the Page.
            </summary>
            <remarks>
            The Page Template can be set explicitly on the Page or be inherited from the containing
            Structure Group: <see cref="P:DefaultPageTemplate" />
            </remarks>
            <seealso cref="P:IsPageTemplateInherited" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageData.WorkflowInfo">
            <summary>
            Gets workflow-related information for the item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageData.RegionSchema">
            <summary>
            (Not supported in this release)
            Gets the Region Schema for the Page's root Region.
            </summary>
            <remarks>
            <para>
            Region Schema for the Page's root Region is always derived from the <see cref="P:PageSchema" /> defined for the Page Template.
            This property is not supported, will throw exception if used.
            </para>
            <para>
            If <c>ExpandLinks</c> <see cref="T:LoadFlags" /> specified, <see cref="T:ExpandableLink`1" /> with fully loaded data object will be returned.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageData.Regions">
            <summary>
            (Not supported in this release)
            Gets or sets the collection of nested Regions on the Page.
            </summary>
            <remarks>
            This is a keyed collection where keys are the region names. The collection can be modified according to the following rules.
            If the <see cref="P:PageSchema" /> is set, the structure of regions must adhere to the definition specified by that schema.
            If the schema is not set, there is no restrictions and the regions can be added or changed in any fashion.
            This property is not supported, will throw exception if used.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TemplateData.BinaryContent">
            <summary>
            Gets or sets access to the Template's binary content.
            </summary>
            <value>A <see cref="T:ntentManagement.BinaryContentData" /> object representing the binary content and its properties.</value>
            <remarks>
            Depending on the <see cref="P:TemplateType" />, a Template can have text content, binary content or both.
            </remarks>
            <seealso cref="P:Content" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TemplateData.Content">
            <summary>
            Gets or sets the Template's (text) content.
            </summary>
            <value>A string containing the text content or an empty string if the Template doesn't have text content.</value>
            <remarks>
            Depending on the <see cref="P:TemplateType" />, a Template can have text content, binary content or both.
            </remarks>
            <seealso cref="P:BinaryContent" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TemplateData.ParameterSchema">
            <summary>
            Gets or sets the Parameter Schema.
            </summary>
            <value>
            A <see cref="T:ntentManagement.SchemaData" /> object (purpose must be <see cref="F:ContentManagement.SchemaPurpose.TemplateParameters" />)
            or <c>null</c> if no Parameter Schema is defined.
            </value>
            <remarks>
            <para>
            A Template can define the parameters it accepts using a Parameter Schema.
            </para>
            <para>
            If <c>ExpandLinks</c> <see cref="T:LoadFlags" /> specified, <see cref="T:ExpandableLink`1" /> with fully loaded data object will be returned.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TemplateData.TemplateType">
            <summary>
            Gets or sets the Template Type.
            </summary>
            <value>
            The value must be the name of one of the configured Template Types.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ComponentTemplateData">
            <summary>
            Represents the data of a Component Template: a template used to render a Component into a Component Presentation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.AllowOnPage">
            <summary>
            Gets or sets whether the Component Template may be used on a Page.
            </summary>
            <remarks>
            This setting only applies to Component Templates which render "dynamic" Component Presentations.
            </remarks>
            <seealso cref="P:IsRepositoryPublishable" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.ApprovalStatus">
            <summary>
            Gets the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Workflow.ApprovalStatusData" /> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.DynamicTemplate">
            <summary>
            Gets or sets the "dynamic" part of the Component Template: an XSLT which is executed on the Content Delivery system.
            </summary>
            <value>A string containing the XSLT or an empty string if not applicable.</value>
            <remarks>
            Only applicable if the <see cref="P:OutputFormat" /> is set to "XML Document".
            </remarks>
            <seealso cref="P:TemplateData.Content" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.IsRepositoryPublishable">
            <summary>
            Gets or sets whether the Component Template renders "dynamic" Component Presentations.
            </summary>
            <value>If <c>true</c>, the Component Template renders "dynamic" Component Presentations.</value>
            <remarks>
            A "dynamic" Component Presentation is published separately instead of being embedded on a Page.
            </remarks>
            <seealso cref="P:AllowOnPage" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.OutputFormat">
            <summary>
            Gets or sets the format of the rendered Component Presentation.
            </summary>
            <value>The possible values are currently constrained by the system schema (cm_xml.xsd):
            <list type="bullet">
            <item>HTML</item>
            <item>HTML Fragment</item>
            <item>ASP VBScript</item>
            <item>ASP JScript</item>
            <item>JSP Scripting</item>
            <item>Plain Text</item>
            <item>XML Document</item>
            <item>XML Fragment</item>
            <item>ASCX WebControl</item>
            <item>REL</item>
            <item>Other</item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.Priority">
            <summary>
            Gets or sets the priority used for resolving Component links.
            </summary>
            <remarks>
            The Priority is used by Content Delivery linking to resolve a Component link:
            if a Component is published on multiple Pages, then a choice has to be made to which Page
            the hyperlink should point.
            This decision is made based on the Priority of the Component Template used
            to render the Component: the hyperlink will point to the Page containing
            a Component Presentation with the highest priority.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.RelatedSchemas">
            <summary>
            Gets or sets access to the "related" Schemas.
            </summary>
            <remarks>
            If a Component Template is related to a Schema, it means that the Component Template
            can render Components based on that Schema.
            Component Template - Schema relationships are used to filter Component Templates
            in the GUI. When the user adds a Component Presentation to a Page, he has to
            select a Component and a Component Template. Once the Component is selected,
            the list of Component Templates is filtered: it shows only the Component Templates
            that are related to the Schema that the Component is based on.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.TrackingCategories">
            <summary>
            Gets or sets access to the "tracking" Categories.
            </summary>
            <remarks>
            When rendering a Component using the Component Template,
            code to increment "tracking keys" can get generated by the system.
            Which "tracking keys" will get incremented is determined by the Keywords
            attached to the Component and the Tracking Categories set on the Component Template:
            each Keyword attached to the Component which is part of one of the Tracking Categories
            will result in an associated "tracking key" increment.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplateData.WorkflowInfo">
            <summary>
            Gets workflow-related information for the item
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PageTemplateData">
            <summary>
            Represents the data of a Page Template: a template used to render a Page.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageTemplateData.ApprovalStatus">
            <summary>
            Gets the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Workflow.ApprovalStatusData" /> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageTemplateData.FileExtension">
            <summary>
            Gets or sets the file extension used for Pages based on this Page Template.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageTemplateData.WorkflowInfo">
            <summary>
            Gets workflow-related information for the item
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PageTemplateData.PageSchema">
            <summary>
            (Not supported in this release)
            Gets or sets the page schema.
            </summary>
            <remarks>
            <para>
            Only schemas with purpose <see cref="F:ContentManagement.SchemaPurpose.Region" /> can be set on this property.
            When set, component presentation(s) and region(s) of page using this page template will be validated against this schema, along with its
            Metadata instead of the Metadata schema of the page.
            </para>
            <para>
            If <c>ExpandLinks</c> <see cref="T:LoadFlags" /> specified, <see cref="T:ExpandableLink`1" /> with fully loaded data object will be returned.
            </para>
            This property is not supported, will throw exception if used.
            This property is introduced in version 7.1.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TemplateBuildingBlockData">
            <summary>
            Represents the data of a Template Building Block: a re-usable template module.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TemplateBuildingBlockData.ApprovalStatus">
            <summary>
            Gets the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Workflow.ApprovalStatusData" /> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TemplateBuildingBlockData.WorkflowInfo">
            <summary>
            Gets workflow-related information for the item
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BundleTypeData">
            <summary>
            Represents the data of a Bundle Type, which is a Bundle schema and a collection of resolved Bundles of this type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BundleTypeData.MappedItems">
            <summary>
            Gets a collection of TCM URIs or WebDAV URLs of given items which prefers to be in a Bundle of this type.
            </summary>
            <remarks>
            If a Bundle Process is specified for a given item, then it must be added to a Bundle before it can be checked in.
            The Bundle has to be of an appropriate type, that is, the Bundle's Schema must be associated with a Process Definition.
            The specified Bundle Process results in preferred Bundle types.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BundleTypeData.ResolvedBundles">
            <summary>
            Gets a collection of resolved Bundles of this type.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ExtensionPropertyDictionary">
            <summary>
            Represents a collection of Extension Properties.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BluePrintInfo">
            <summary>
            BluePrint info for <see cref="T:RepositoryLocalObjectData">Repository-Local Objects</see>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintInfo.IsLocalized">
            <summary>
            Gets or sets whether the item is localized in the current context Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintInfo.IsShared">
            <summary>
            Gets or sets whether the item is shared in the current context Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintInfo.OwningRepository">
            <summary>
            Gets or sets the Repository in which the item physically resides.
            </summary>
            <remarks>
            For shared items, the "context Repository" and "owning Repository" will be different.
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
            <seealso cref="P:LocationInfo.ContextRepository" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintInfo.PrimaryBluePrintParentItem">
            <summary>
            Gets or sets the link to master item (item in the top of BluePrint chain, where it was originally created).
            </summary>
            <remarks>
            <para>
            For shared and localized items returns the originally item on the top of the BluePrint tree.
            </para>
            <para>
            For local items returns item itself.
            </para>
            <para>
            This property is loaded only while reading item. It will not loaded by getting list of items.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.LocationInfo">
            <summary>
            Location/context info for <see cref="T:RepositoryLocalObjectData">Repository-Local Objects</see>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LocationInfo.ContextRepository">
            <summary>
            Gets or sets the context Repository from which the container object has been retrieved.
            </summary>
            <remarks>
            For shared items, the "context Repository" and "owning Repository" will be different.
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LocationInfo.OrganizationalItem">
            <summary>
            Gets or sets the Organizational Item that contains the container object.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LocationInfo.Path">
            <summary>
            Gets or sets the path to the item (that is, excluding the item's own title).
            </summary>
            <value>A string containing the path, which is formed by concatenating the organizational item titles, starting at the Publication level (separated by backslash characters).</value>
            <seealso cref="P:WebDavUrl" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LocationInfo.WebDavUrl">
            <summary>
            Gets or sets the WebDAV URL of the item.
            </summary>
            <value>A string containing the WebDAV URL or an empty string if WebDAV is not enabled or the item cannot be exposed through WebDAV.</value>
            <seealso cref="P:Path" />
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.LockInfo">
            <summary>
            Lock information about <see cref="T:RepositoryLocalObjectData">Repository Local Object</see>.
            </summary>
            <remarks>Introduced in 7.0.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LockInfo.LockDate">
            <summary>
            Date/time at which the item was locked.
            </summary>
            <value>The date/time at which the item was locked or <c>null</c> if the item is not locked.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LockInfo.LockType">
            <summary>
            Type of lock on the item (if any).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LockInfo.LockUser">
            <summary>
            User who locked the item.
            </summary>
            <value>A Link to a UserData object or Link to Null URI if the item is not locked.</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.DynamicVersionInfo">
            <summary>
            Represents information about the dynamic version of a <see cref="T:VersionedItemData">Versioned Item</see>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DynamicVersionInfo.Revision">
            <summary>
            Gets or sets the last revision counter.
            </summary>
            <returns>Revision counter if item was edited. If item is checked-in, returns -1. If item is checked-out and no changes saved, revision is 0.</returns>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DynamicVersionInfo.RevisionDate">
            <summary>
            Gets or sets the date/time at which the item was last modified (saved).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DynamicVersionInfo.Revisor">
            <summary>
            Gets or sets link to user who did last revision (last save action).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RegionDefinitionData">
            <summary>
            Represents the data of a Region Definition in a Region Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RegionDefinitionData.ComponentPresentationConstraints">
            <summary>
            Gets or sets the Component Presentation constraints for a Region using this Region Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RegionDefinitionData.DefaultComponentPresentations">
            <summary>
            Gets or sets the default Component Presentations for a Region using this Region Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RegionDefinitionData.NestedRegions">
            <summary>
            Gets or sets the nested Regions for the Region Schema.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SchemaPurpose">
            <summary>
            Defines a purpose of a Schema, that is in which items the Schema can be used.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.Component">
            <summary>Schema defines the content and metadata of Components with XML content.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.Multimedia">
            <summary>Schema defines the content and metadata of Multimedia Components.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.Embedded">
            <summary>Schema is included into other Schemas.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.Metadata">
            <summary>Schema defines the metadata of items (except for Components).</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.Protocol">
            <summary>Schema defines the protocol fields of a Publication Target.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.VirtualFolderType">
            <summary>Schema defines the configuration data of a Virtual Folder.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.TemplateParameters">
            <summary>Schema defines the parameters of a Template.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.Bundle">
            <summary>
            Schema defines the metadata and process definition of a Bundle
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.Region">
            <summary>
            Schema defines the Region definition and metadata
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.Widget">
            <summary>
            Schema defines the content and metadata of Widget Components with XML content.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.SchemaPurpose.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishLocationInfo.PublishLocationPath">
            <summary>
            Gets or sets the publish path of the container object, including its own directory/file name and extension.
            </summary>
            <seealso cref="P:PublishPath" />
            <seealso cref="P:PublishLocationUrl" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishLocationInfo.PublishLocationUrl">
            <summary>
            Gets or sets the publish URL of the container object.
            </summary>
            <remarks>
            The publish URL is formed by a concatenation of the context Publication's PublicationUrl,
            the intermediary Structure Groups' Directory (recursively) and the object's own directory/file name and extension.
            </remarks>
            <seealso cref="P:PublishLocationPath" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishLocationInfo.PublishPath">
            <summary>
            Gets or sets the publish path of the container object.
            </summary>
            <remarks>
            The publish path is formed by a concatenation of the context Publication's PublicationPath
            and the intermediary Structure Groups' Directory (recursively).
            The path does not include the object's own directory/file name.
            </remarks>
            <seealso cref="P:PublishLocationPath" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LimitedVersionInfo.Creator">
            <summary>
            Gets or sets the User who created the container object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.CheckOutDate">
            <summary>
            Gets or sets the date/time at which the item was checked out.
            </summary>
            <value>The date/time at which the item was checked out or <c>null</c> if the item is not checked out.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.CheckOutUser">
            <summary>
            Gets or sets the User who checked out the item.
            </summary>
            <value>A Link to a UserData object or Link to Null URI if the item is not checked out.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.IsNew">
            <summary>
            Gets or sets the value indicating whether the item is "new" (not checked in yet).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.LastVersion">
            <summary>
            Gets or sets the last version number of this item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.LockType">
            <summary>
            Gets or sets the type of lock on the item (if any).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.Revision">
            <summary>
            Gets or sets the revision number of this item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.Revisor">
            <summary>
            Gets or sets the User who last modified this item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.SystemComment">
            <summary>
            Gets the system comment.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.Version">
            <summary>
            Gets or sets the version number of this item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FullVersionInfo.UserComment">
            <summary>
            Gets the comment set by the user during check-in of this item.
            </summary>
            <remarks>This property is introduced in version 7.0</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.WorkflowInfo">
            <summary>
            Represents workflow-related information for items that can participate in a workflow process.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.ActivityDefinitionDescription">
            <summary>
            Gets or sets the Activity Definition Description of the current Activity Instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.ActivityInstance">
            <summary>
            Gets or sets the Activity Instance in which the item is currently participating (if any)
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.Assignee">
            <summary>
            Gets or sets the Assignee of the current Activity Instance
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.CreationDate">
            <summary>
            Gets or sets the creation date/time of the current Activity Instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.FinishDate">
            <summary>
            Gets or sets the finish date/time of the last Activity Instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.Performer">
            <summary>
            Gets or sets the Performer of the current Activity Instance
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.PreviousMessage">
            <summary>
            Gets or sets the finish message of the last Activity Instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.ProcessInstance">
            <summary>
            Gets or sets the Process Instance in which the item is currently participating (if any)
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.StartDate">
            <summary>
            Gets or sets the start date/time of the current Activity Instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.ActivityState">
            <summary>
            Gets or sets the state of the current Activity Instance
            </summary>
            <remarks>
            Supported CoreService Endpoint : CoreService 2011
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.ActivityConstraints">
            <summary>
            Gets or sets the constraints of the current activity.
            </summary>
            <remarks>
            <para>This property is derived from the <see cref="T:ActivityDefinitionData" />.ActivityConstraints of the current Activity.</para>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.AssignmentDate">
            <summary>
            Gets the most recent assigned/re-assigned date/time of the current Activity Instance.
            </summary>
            <remarks>
            <para>Initially the Assignment date and Creation date is same, upon re-assign of the activity this is updated to time the operation was performed.</para>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkflowInfo.DueDate">
            <summary>
            Gets or sets the due date/time of the current Activity Instance if any.
            </summary>
            <remarks>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishInfoData">
            <summary>
            Represents publishing information for <see cref="T:RepositoryLocalObjectData">Repository local objects</see>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInfoData.PublicationTarget">
            <summary>
            Gets or sets a Link to the Publication Target for publishing to.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInfoData.PublishedAt">
            <summary>
            Gets or sets the date/time at which the item was last published.
            </summary>
            <value>The date/time at which the item was last published.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInfoData.RenderedWith">
            <summary>
            Gets or sets a Link to the template with which the item was rendered.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInfoData.Repository">
            <summary>
            Gets or sets a Link to the Repository in which the container object has publish details.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInfoData.User">
            <summary>
            Gets or sets a Link to the User that published or un-published the container.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInfoData.TargetType">
            <summary>
            Gets or sets a Link to the Target Type for publishing to.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInfoData.TargetPurpose">
            <summary>
            Gets or sets the Purpose of <see cref="P:TargetType" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WhereUsedListInfo.Comment">
            <summary>
            Gets the comment.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WhereUsedListInfo.CommentToken">
            <summary>
            Gets the comment token.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WhereUsedListInfo.Versions">
            <summary>
            Gets the collection of versions.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationListInfo.ControlledItemType">
            <summary>
            Gets the type of the controlled item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationListInfo.FileName">
            <summary>
            Gets the name of file.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationListInfo.IsPublished">
            <summary>
            Gets whether the object is published in the context Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationListInfo.ItemLock">
            <summary>
            Gets the ItemLock type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationListInfo.PublicationTitle">
            <summary>
            Gets the title of the Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationListInfo.SubType">
            <summary>
            Gets the item subtype.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessInstanceListInfo.ActivityDefinitionType">
            <summary>
            Gets the activity definition type.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessInstanceListInfo.ApprovalStatus">
            <summary>
            Gets the approval status.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessInstanceListInfo.CurrentActivity">
            <summary>
            Gets the current activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemListInfo.ActivityCreationDate">
            <summary>
            Gets the activity creation date.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemListInfo.ActivityDefinitionTitle">
            <summary>
            Gets the title of activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemListInfo.ActivityStartDate">
            <summary>
            Gets the activity start date.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemListInfo.ActivityState">
            <summary>
            Gets the state of the current Activity Instance
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemListInfo.ActivityType">
            <summary>
            Gets the type of activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemListInfo.FileName">
            <summary>
            Gets the item fileName.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemListInfo.IsPublished">
            <summary>
            Gets whether the object is published in the context Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WorkItemListInfo.SubType">
            <summary>
            Gets the item subtype.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionListInfo.ItemPath">
            <summary>
            Gets the item path.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionListInfo.PublicationTargetTitle">
            <summary>
            Gets the publication target title.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionListInfo.PublicationTitle">
            <summary>
            Gets the publication title.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionListInfo.PublishAction">
            <summary>
            Gets the publish action.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionListInfo.ScheduleTime">
            <summary>
            Gets the schedule time.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ContainingBundlesListInfo.BundleProcess">
            <summary>
            Gets the Process Definition which defines the Bundle process if any
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ActivityState">
            <summary>
            Defines a state of an Activity.
            </summary>
            <remarks>
            When the Workflow Agent can't execute the script, the Activity is set to <see cref="F:Failed" />.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ActivityConstraints">
            <summary>
            Defines the constraints of an Activity Instance.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.WhereUsedCommentToken">
            <summary>
            Kind of relationship between this item and used item
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.WhereUsedCommentToken.ParentItem">
            <summary>.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.WhereUsedCommentToken.LocalCopy">
            <summary></summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.WhereUsedCommentToken.OnlyOldVersions">
            <summary>if only old versions of an item refer to the given item.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.WhereUsedCommentToken.OnlyCheckedOutVersion">
            <summary>if only the checked-out version of an item refers to the given item.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.WhereUsedCommentToken.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ActivityType">
            <summary>
            Defines a type of an Activity.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ActivityType.Normal">
            <summary>
            Normal activity.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ActivityType.Decision">
            <summary>
            Decision activity.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ActivityType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.VariablesDictionary">
            <summary>
            Represents multiple sets of variables grouped by name.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessFinishReason">
            <summary>
            Defines the reason a Process is going to be finished or has finished already.
            </summary>
            <remarks>
            Some changes have been introduced in comparison with SDL Web R5. The <see cref="F:ForceFinished" /> value did not exist in R5.
            The ProcessFinishForced value of R5 is mapped to <see cref="F:Terminated" /> in TOM.NET.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessFinishReason.CompletedNormally">
            <summary>
            Identifies if the process has finished normally.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessFinishReason.ForceFinished">
            <summary>
            Identifies if the process was forcefully finished.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessFinishReason.Terminated">
            <summary>
            Identifies if the process was terminated.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessFinishReason.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ApplicableActionsDataDictionary">
            <summary>
            Represents multiple sets of the applicable actions.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.AccessControlListData">
            <summary>
            Represents the data of an Access Control List which is used to restrict access to a container.
            </summary>
            <seealso cref="P:AccessControlList" />
            <seealso cref="P:AccessControlList" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessControlListData.AccessControlEntries">
            <summary>
            Gets or sets the Access Control Entries which the Access Control List contains.
            </summary>
            <remarks>This list doesn't support delta update. So in order to add new entry, original list should be extended with that new entry, not overwritten.
            If <c>AccessControlEntries</c> are modified on organizational item which is not permissions inheritance root, changes will be silently ignored.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.AccessControlEntryData">
            <summary>
            Represent the data of an entry in an Access Control List, which is used to restrict access to containers.
            </summary>
            <remarks>
            An Access Control Entry specifies which permissions and/or rights a given <see cref="P:Trustee" /> has.
            Permissions and Rights can either be Allowed, Denied or Implicit Denied.
            </remarks>
            <seealso cref="T:AccessControlListData" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessControlEntryData.AllowedPermissions">
            <summary>
            Gets or sets the Permissions that the <see cref="P:Trustee" /> is allowed to have.
            </summary>
            <value>
            One or more values from the <see cref="T:Security.Permissions" /> enumeration. Multiple values are combined using the bitwise or operator.
            </value>
            <remarks>
            This property works in conjunction with <see cref="P:DeniedPermissions" />.
            The following combinations are possible:
            <list type="table">
            <item><term>Allowed</term><description>Allowed bit set, Denied bit not set</description></item>
            <item><term>Implicit Denied</term><description>Allowed bit not set, Denied bit not set</description></item>
            <item><term>Denied</term><description>Allowed bit not set, Denied bit set</description></item>
            </list>
            </remarks>
            <seealso cref="P:DeniedPermissions" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessControlEntryData.AllowedRights">
            <summary>
            Gets or sets the Rights that the <see cref="P:Trustee" /> is allowed to have.
            </summary>
            <value>
            One or more values from the <see cref="T:Security.Rights" /> enumeration. Multiple values are combined using the bitwise or operator.
            </value>
            <remarks>
            This property works in conjunction with <see cref="P:DeniedRights" />.
            The following combinations are possible:
            <list type="table">
            <item><term>Allowed</term><description>Allowed bit set, Denied bit not set</description></item>
            <item><term>Implicit Denied</term><description>Allowed bit not set, Denied bit not set</description></item>
            <item><term>Denied</term><description>Allowed bit not set, Denied bit set</description></item>
            </list>
            </remarks>
            <seealso cref="P:DeniedRights" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessControlEntryData.DeniedPermissions">
            <summary>
            Gets or sets the Permissions that the <see cref="P:Trustee" /> is denied to have.
            </summary>
            <value>
            One or more values from the <see cref="T:Security.Permissions" /> enumeration. Multiple values are combined using the bitwise or operator.
            </value>
            <remarks>
            This property works in conjunction with <see cref="P:AllowedPermissions" />.
            The following combinations are possible:
            <list type="table">
            <item><term>Allowed</term><description>Allowed bit set, Denied bit not set</description></item>
            <item><term>Implicit Denied</term><description>Allowed bit not set, Denied bit not set</description></item>
            <item><term>Denied</term><description>Allowed bit not set, Denied bit set</description></item>
            </list>
            </remarks>
            <seealso cref="P:AllowedPermissions" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessControlEntryData.DeniedRights">
            <summary>
            Gets or sets the Rights that the <see cref="P:Trustee" /> is denied to have.
            </summary>
            <value>
            One or more values from the <see cref="T:Security.Rights" /> enumeration. Multiple values are combined using the bitwise or operator.
            </value>
            <remarks>
            This property works in conjunction with <see cref="P:AllowedRights" />.
            The following combinations are possible:
            <list type="table">
            <item><term>Allowed</term><description>Allowed bit set, Denied bit not set</description></item>
            <item><term>Implicit Denied</term><description>Allowed bit not set, Denied bit not set</description></item>
            <item><term>Denied</term><description>Allowed bit not set, Denied bit set</description></item>
            </list>
            </remarks>
            <seealso cref="P:AllowedRights" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.AccessControlEntryData.Trustee">
            <summary>
            Gets the Trustee (User or Group) which the Access Control Entry applies to.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Permissions">
            <summary>
            Specifies the Permissions used for security checks.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Rights">
            <summary>
            Specifies the Rights used for security checks.
            </summary>
            <remarks>
            <para>
            Using <see cref="F:WorkflowManagement" /> allows the user to:
            <list type="bullet">
            <item>Create, update and delete ProcessDefinitions.</item>
            <item>Localize and UnLocalize ProcessDefinitions.</item>
            <item>Associate Process Definition for items that supports workflow e.g. Component, Page, Page Template, Component Template and Bundle. Process Definition can be associated from Publication (for Templates), Structure Group (for Pages) or Schema (for Components and Bundles).</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.GroupMembershipData">
            <summary>
            Contains the scope of a group.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupMembershipData.Group">
            <summary>
            Gets or sets the group.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupMembershipData.Scope">
            <summary>
            Gets or sets the scope for a group.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SystemPrivilegesDictionary">
            <summary>
            Represents a dictionary of <see cref="T:Security.SystemPrivilege" /> associations with collection of <see cref="T:Link`1" />.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SystemPrivilege">
            <summary>
            Represents a system-wide privilege.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SystemPrivilege.Description">
            <summary>
            Localized description of system-wide privilege.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SystemPrivilege.Key">
            <summary>
            Key of a system-wide privilege.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SystemPrivilege.Title">
            <summary>
            Localized title of system-wide privilege.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ClaimMappingData">
            <summary>
            Abstract base class representing the data of a mapping between a Claim and a TCM Group.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClaimMappingData.Description">
            <summary>
            Gets or sets the description of the mapping.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClaimMappingData.Group">
            <summary>
            Gets or sets the Group for which the mapping exists.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DirectoryGroupMappingData.DirectoryServiceName">
            <summary>
            Gets or sets the name the Directory Service to match on.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DirectoryGroupMappingData.SearchDN">
            <summary>
            Gets or sets the Distinguished Name (DN) of the Group or Subtree to match on.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DirectoryGroupMappingData.SearchType">
            <summary>
            Gets or sets the search type: either a Subtree or Group.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.DirectorySearchType">
            <summary>
            Search types for Directory Group Mapping.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DirectorySearchType.Subtree">
            <summary>
            Search in a given subtree.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DirectorySearchType.Group">
            <summary>
            Search in a given group.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DirectorySearchType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.FileExtensionsList">
            <summary>
            A collection of <c>FileExtensions</c>.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishPriority">
            <summary>
            Identifies the priority of the publish action.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishPriority.Low">
            <summary>
            Low priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishPriority.Normal">
            <summary>
            Normal priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishPriority.High">
            <summary>
            High priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishPriority.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TargetDestinationData">
            <summary>
            Represents the data of a Target Destination.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetDestinationData.ProtocolData">
            <summary>
            Gets or sets the protocol data as <see cref="T:SerializableXmlDocument" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetDestinationData.ProtocolSchema">
            <summary>
            Gets or sets the Protocol Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetDestinationData.Title">
            <summary>
            Gets or sets a description of the Publishing Target.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BatchOperationData">
            <summary>
            Provides information about batch operation on list of subjects.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationData.Operation">
            <summary>
            Gets or sets the operation name.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationData.Parameters">
            <summary>
            Gets or sets the additional params for invoking operation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationData.Statuses">
            <summary>
            Gets the collection, which contains information about performing operation on each subject.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationData.SubjectLinks">
            <summary>
            Gets or sets the subjects on which current operation must be performed.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ParametersDictionary">
            <summary>
            Represents multiple sets of parameters grouped by name.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BatchOperationStatusData">
            <summary>
            Contains information about performing batch operation on concrete subject.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationStatusData.ErrorCode">
            <summary>
            Gets the error code in case of error during operation (warning, error).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationStatusData.Id">
            <summary>
            Gets the id of status.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationStatusData.Information">
            <summary>
            Gets the information about operation performing(warning, error).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationStatusData.State">
            <summary>
            Gets the state of current batch operation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationStatusData.SubjectId">
            <summary>
            Gets the subject id.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationStatusData.ValidationErrors">
            <summary>
            Gets the list of <see cref="T:ValidationErrorData" /> which were raised while performing an operation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BatchOperationStatusData.ValidationWarnings">
            <summary>
            Gets the list of <see cref="T:ValidationWarningData" /> which were raised while performing an operation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.WeakLink">
            <summary>Represents a link to a batch operation subject.</summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WeakLink.IdRef">
            <summary>
            Gets the Id of the referenced object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WeakLink.Title">
            <summary>
            Gets or sets the title of the referenced object.
            </summary>
            <remarks>
            The title is used for informational purposes only.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BatchOperationState">
            <summary>
            The state of batch operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.BatchOperationState.NotStarted">
            <summary>
            Batch operation wasn't started yet.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.BatchOperationState.Success">
            <summary>
            Batch operation was successfully finished.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.BatchOperationState.Warning">
            <summary>
            Batch operation was finished with warning.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.BatchOperationState.Error">
            <summary>
            Batch operation wasn't finished due to error.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.BatchOperationState.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ValidationErrorData">
            <summary>
            Represents the data of a validation error which is returned when validating an item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ValidationErrorData.ErrorCode">
            <summary>
            Gets the error code of the validation error or of the exception if any.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ValidationErrorData.ExceptionName">
            <summary>
            Gets the name of the exception if any.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ValidationWarningData">
            <summary>
            Represents the data of a validation warning which is returned when validating an item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ValidationResultData.Message">
            <summary>
            Gets the detailed message about the validation result.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ValidationResultData.Location">
            <summary>
            Gets the location where the validation error occurred.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ValidationResultData.Source">
            <summary>
            Gets the name of the component/subsystem that generated the message.
            </summary>
            <remarks>
            This property is set to "Content Manager" for all errors and warnings generated by Content Manager kernel.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishInstructionBaseData">
            <summary>
            Represents the data object of a PublishInstructionBase. All publisher instructions derive from that class.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInstructionBaseData.ExtensionXml">
            <summary>
            Gets or sets the XML that represents the custom properties in derived classes.
            </summary>
            <value>The XML representing custom properties.</value>
            <remarks>
            The extension XML contains values of all custom properties added in a derived class. Each property value is stored as a separate XML element.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInstructionBaseData.ResolveInstruction">
            <summary>
            Gets or sets the resolve instruction.
            </summary>
            <value>The resolve instruction.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInstructionBaseData.RollbackOnFailure">
            <summary>
            Gets or sets a value indicating whether to rollback when there is a failure during deployment.
            </summary>
            <value><c>true</c> if the publish transaction should rollback on failure; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInstructionBaseData.StartAt">
            <summary>
            Gets or sets the date time when the publishing should be started. Set <see cref="F:System.DateTime.MinValue" /> value to start immediately.
            </summary>
            <value>The date/time at which publishing should be started.</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.DeployerAction">
            <summary>
            Represents the action the deployer needs to take.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeployerAction.Commit">
            <summary>
            The deployer should commit the tranport package.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeployerAction.Wait">
            <summary>
            The deployer should wait to commit the transport package.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeployerAction.Abort">
            <summary>
            The deployer should abort the transport package.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeployerAction.UndoCommit">
            <summary>
            The deployer should undo the publish transaction.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeployerAction.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishContextData">
            <summary>
            Represents the data of a Publish Context, which is a combination of a <see cref="T:PublicationData" /> and a <see cref="T:PublicationTargetData" /> and collection of <see cref="T:ProcessedItemData" /> and <see cref="T:ResolvedItemData" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishContextData.ProcessedItems">
            <summary>
            Gets a collection of processed items.
            </summary>
            <value>The list of processed items.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishContextData.Publication">
            <summary>
            Gets the Publication which this Publish Context belongs to.
            </summary>
            <value>The publication.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishContextData.PublicationTarget">
            <summary>
            Gets the Publication Target which this Publish Context belongs to.
            </summary>
            <value>The publication target.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishContextData.ResolvedItems">
            <summary>
            Gets a collection of Resolved Items in this Publish Context.
            </summary>
            <value>The list of Resolved Items.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishContextData.TargetType">
            <summary>
            Gets the Target Type which this Publish Context belongs to.
            </summary>
            <value>The target type.</value>
            <remarks>
            This value is only set when Publish Context is received directly from resolving process.
            If the Publish Context is read as part of Publish Transaction, this value is null (instead, it is available directly on the Publish Transaction).
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishTransactionState">
            <summary>
            Represents the states a Publish Transaction can have.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.ScheduledForPublish">
            <summary>
            The PublishTransaction is scheduled to start at the specified date time.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.WaitingForPublish">
            <summary>
            The PublishTransaction is waiting to be processed.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.InProgress">
            <summary>
            The PublishTransaction is currently in progess.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.ScheduledForDeployment">
            <summary>
            The PublishTransaction is scheduled to be deployed at the specified date time.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.WaitingForDeployment">
            <summary>
            The PublishTransaction is waiting to be deployed at the specified date time.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Failed">
            <summary>
            The PublishTransaction failed.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Success">
            <summary>
            The PublishTransaction succeeded.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Warning">
            <summary>
            The PublishTransaction succeeded but contains warnings.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Resolving">
            <summary>
            The PublishTransaction is currently resolving.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Rendering">
            <summary>
            The PublishTransaction is currently rendering.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Throttled">
            <summary>
            The PublishTransaction is currently throttled by the TransportService.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.ReadyForTransport">
            <summary>
            The PublishTransaction is currently is ready for transport.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Transporting">
            <summary>
            The PublishTransaction is currently being transported to the destinations.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Deploying">
            <summary>
            The PublishTransaction is currently being deployed.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.PreparingDeployment">
            <summary>
            The PublishTransaction is currently begin prepared for deployment.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.PreCommittingDeployment">
            <summary>
            The PublishTransaction is pre committing the deployment.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.CommittingDeployment">
            <summary>
            The PublishTransaction is committing the deployment.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.WaitingForUndo">
            <summary>
            The PublishTransaction Undo process is waiting to be processed.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Undoing">
            <summary>
            The PublishTransaction Undo process is currently in progess.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.Undone">
            <summary>
            The PublishTransaction Undo successfully completed.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.UndoFailed">
            <summary>
            Failed to undo the PublishTransaction.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.WaitingForCdEnvironment">
            <summary>
            The PublishTransaction is waiting for Content Delivery Environment to be online.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PublishTransactionState.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ResolveInstructionData">
            <summary>
            Represents the data object of a <c>ResolveInstruction</c>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveInstructionData.ExtensionXml">
            <summary>
            Gets or sets the XML that represents the custom properties in derived classes.
            </summary>
            <value>The XML representing custom properties.</value>
            <remarks>
            The extension XML contains values of all custom properties added in a derived class. Each property value is stored as a separate XML element.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveInstructionData.IncludeChildPublications">
            <summary>
            Gets or sets a value indicating whether to resolve items also from child publications.
            </summary>
            <value>
            <c>true</c> if items from child publications should also be resolved; otherwise, <c>false</c>. Default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveInstructionData.IncludeComponentLinks">
            <summary>
            Gets or sets a value indicating whether component links should also be resolved.
            </summary>
            <remarks>
            If the value is <c>true</c>, component links in fields of components are checked and if a component holds
            a component link towards a component that is being resolved, that component gets resolved also, but only if it is published.
            </remarks>
            <example>
            Schema S has a Component Link field.
            Component B is based on schema S and has a component link that links to component A. Component B is published.
            Component A is based on another schema that has only a text field.
            If we resolve component A with <see cref="P:IncludeComponentLinks" /> set to <c>true</c>, then the result is that both A and B will be included in the resolved items, because B holds a component link to A and B is published.
            However, if we resolve component B with <see cref="P:IncludeComponentLinks" /> set to <c>false</c>, then the result is that only B will be included in the resolved items, because there are no components
            having a component link towards B.
            </example>
            <value>
            <c>true</c> if component links should also be resolved; otherwise, <c>false</c>. Default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveInstructionData.IncludeWorkflow">
            <summary>
            Gets or sets a value indicating whether the item is published from the user's work list.
            </summary>
            <value>
            If <c>true</c>, the current dynamic version (regardless of the value of <see cref="P:IncludeDynamicVersion" />) is published from the work list
            (but only if the work item has approval status equal or higher than the minimum value set on publication target);
            if <c>false</c>, the workflow is not considered and the latest checked-in version is published. Default value is <c>false</c>.
            </value>
            <remarks>
            <para>
            This option is applicable only for items which are in the workflow.
            </para>
            <para>
            If item is not in workflow, the latest checked-in version is published
            (but only if the work item has approval status equal or higher than the minimum value set on publication target).
            </para>
            <para>
            If item is published from bundle, bundle conditions (such as approval status) will be validated first.
            </para>
            </remarks>
            <seealso cref="P:IncludeDynamicVersion" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveInstructionData.Purpose">
            <summary>
            Gets or sets a value indicating the purpose of the resolving operation.
            </summary>
            <remarks>For resolving operation a <c>null</c> value is equivalent to <see cref="F:Publishing.ResolvePurpose.Publish" />.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveInstructionData.StructureResolveOption">
            <summary>
            Gets or sets a value indicating the option to include the resolved items and/or structure.
            </summary>
            <value>
            Choose <see cref="F:Publishing.StructureResolveOption.OnlyItems" /> when only items should be resolved excluding the Structure. This is the default option.
            Choose <see cref="F:Publishing.StructureResolveOption.OnlyStructure" /> when only the Structure should be resolved.
            Choose <see cref="F:Publishing.StructureResolveOption.ItemsAndStructure" /> when Structure along with items should be resolved.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveInstructionData.IncludeDynamicVersion">
            <summary>
            Gets or sets a value indicating whether dynamic version of the item will be resolved.
            </summary>
            <value>
            If <c>true</c>, dynamic version (if item is checked out or new) will be resolved.
            Otherwise, new items will not be resolved (but new items in Workflow will be resolved in case <see cref="P:IncludeWorkflow" /> is set to <c>true</c>)
            and only checked in versions will be published. Default value is <c>false</c>.
            </value>
            <remarks>
            <para>
            This option is not applicable for items which are in the workflow.
            </para>
            </remarks>
            <seealso cref="P:IncludeWorkflow" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInstructionData.DeployAt">
            <summary>
            Gets or sets the date/time when the content should be deployed at the content delivery side. Set current time value to deploy immediately.
            </summary>
            <value>The date/time when to deploy.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInstructionData.MaximumNumberOfRenderFailures">
            <summary>
            Gets or sets the maximum number of render failures before the "PublishTransaction" is considered to be failed. Use 0 to fail on first failure.
            </summary>
            <value>The maximum number of render failures.</value>
            <remarks>Publish Transaction will fail if the number of render failures exceeds the MaximumNumberOfRenderFailures, default = 0.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishInstructionData.RenderInstruction">
            <summary>
            Gets or sets the render instruction.
            </summary>
            <value>The render instruction.</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ResolvePurpose">
            <summary>
            Defines the purpose of a resolving operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ResolvePurpose.Publish">
            <summary>
            The purpose of Resolving is to publish items, regardless of whether they're already published or not.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ResolvePurpose.UnPublish">
            <summary>
            The purpose of Resolving is to unpublish previously published items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ResolvePurpose.RePublish">
            <summary>
            The purpose of Resolving is to publish again items that were published previously.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ResolvePurpose.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.StructureResolveOption">
            <summary>
            Represents the option to include the resolved items and/or structure.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.StructureResolveOption.OnlyItems">
            <summary>
            Only item(s) will be resolved. This is the default value.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.StructureResolveOption.OnlyStructure">
            <summary>
            Only Structure Group(s) will be resolved.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.StructureResolveOption.ItemsAndStructure">
            <summary>
            Structure Group(s) along with item(s) will be resolved.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.StructureResolveOption.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RenderInstructionData">
            <summary>
            Represents the data object of a RenderInstruction.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderInstructionData.BinaryStoragePath">
            <summary>
            Gets or sets the path where the binaries are stored during rendering.
            </summary>
            <value>The path where the binaries are stored during rendering.</value>
            <remarks>
            While rendering through Core Service this property will be ignored.
            Core Service uses the path configured in Tridion Configuration (General settings\Preview Path) to store the Binaries.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderInstructionData.ExtensionXml">
            <summary>
            Gets or sets the XML that represents the custom properties in derived classes.
            </summary>
            <value>The XML representing custom properties.</value>
            <remarks>
            The extension XML contains values of all custom properties added in a derived class. Each property value is stored as a separate XML element.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderInstructionData.RenderMode">
            <summary>
            Gets or sets the <see cref="P:RenderMode" /> used when rendering.
            </summary>
            <value>The render mode.</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RenderMode">
            <summary>
            Identifies the type of render mode to be used during rendering.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.RenderMode.Publish">
            <summary>
            Use the publish mode when publishing an identifiable object.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.RenderMode.PreviewStatic">
            <summary>
            Use the preview static mode when previewing the latest checked in version of an identifiable object.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.RenderMode.PreviewDynamic">
            <summary>
            Use the preview dynamic mode when previewing the current version of an identifiable object.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.RenderMode.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessedItemData">
            <summary>
            Represents the data of a Processed Item, which contains rendering info for a Resolved Item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessedItemData.HasRenderFailure">
            <summary>
            Gets a value indicating whether the item failed rendering.
            </summary>
            <value>
            <c>true</c> if the item has failed rendering; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessedItemData.IsRendered">
            <summary>
            Gets a value indicating whether the item has been fully rendered.
            </summary>
            <value>
            <c>true</c> if the item has been fully rendered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessedItemData.ReasonOfRenderFailure">
            <summary>
            Gets the reason of failure of the rendering process.
            </summary>
            <value>The reason of render failure.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessedItemData.RenderTime">
            <summary>
            Gets the duration of the rendering process for the processed item.
            </summary>
            <value>The render time formatted as a string: HH:MM:SS</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessedItemData.ResolvedItem">
            <summary>
            Gets the <see cref="T:ResolvedItemData" /> for which this instance stores additional rendering information.
            </summary>
            <value>The resolved item.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessedItemData.UndoState">
            <summary>
            Gets the state of the undo action performed.
            </summary>
            <value>The state of the undo action.</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ResolvedItemData">
            <summary>
            Represents the data object of a Resolved Item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolvedItemData.Item">
            <summary>
            Gets a link to the resolved <see cref="T:IdentifiableObjectData" />.
            </summary>
            <value>An item's link that is resolved.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolvedItemData.ItemPath">
            <summary>
            Gets the resolved item's path. The value is set only after successful resolving.
            </summary>
            <remarks>
            This property will be <c>null</c> for <see cref="T:StructureGroupData" />s.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolvedItemData.PublicationTarget">
            <summary>
            Gets the Publication Target for which this item was Resolved.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolvedItemData.Template">
            <summary>
            Gets the template to render the item with.
            </summary>
            <value>The template to render the item with. This value is optional and can be a <see cref="P:Link`1.NullLink" /> TcmUri</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.UndoState">
            <summary>
            Defines possible results of an undo action.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.UndoState.NotApplicable">
            <summary>
            Undo is not applicable for the current state.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.UndoState.NoActionRequired">
            <summary>
            No action was needed to achieve undone state for the published items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.UndoState.Removed">
            <summary>
            The published items were removed (deleted).
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.UndoState.Reverted">
            <summary>
            The published items were reverted to their previous versions.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.UndoState.RevertFailed">
            <summary>
            The item was not reverted due to insufficient data.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.UndoState.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ConditionData.Negate">
            <summary>
            Get or set whether the condition should be negated.
            </summary>
            <remarks>
            If a condition is negated, it means that it matches if the condition is NOT met.
            For example, a negated TargetGroupCondition matched on people that are NOT in the Target Group.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TargetGroupConditionData">
            <summary>
            Represents the data of a Condition on "membership" of a Target Group.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetGroupConditionData.TargetGroup">
            <summary>
            Get or set the Target Group to check "membership" against.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CustomerCharacteristicConditionData.Name">
            <summary>
            Get or set the name of the Customer Characteristic.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CustomerCharacteristicConditionData.Operator">
            <summary>
            Get or set the operator used for comparing the Customer Characteristic's value against the <see cref="P:Value" /> specified in the condition.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CustomerCharacteristicConditionData.Value">
            <summary>
            Get or set the value to compare the Customer Characteristic's value against.
            </summary>
            <remarks>
            The type of comparison depends on the <see cref="P:Operator" />.
            </remarks>
            <seealso cref="P:Operator" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrackingKeyConditionData.Keyword">
            <summary>
            Get or set the Keyword on which the Tracking Key is based.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrackingKeyConditionData.Operator">
            <summary>
            Get or set the operator used for comparing the Tracking Key's value against the <see cref="P:Value" /> specified in the condition.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrackingKeyConditionData.Value">
            <summary>
            Get or set the value to compare the Tracking Key's value against.
            </summary>
            <remarks>
            The type of comparison depends on the <see cref="P:Operator" />.
            </remarks>
            <seealso cref="P:Operator" />
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ConditionOperator">
            <summary>
            Defines an operator used for comparison.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.Equals">
            <summary>Compares if a numerical operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.GreaterThan">
            <summary>Compares if a numerical operand is greater than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.LessThan">
            <summary>Compares if a numerical operand is less than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.NotEqual">
            <summary>Compares if a numerical operand is not equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.StringEquals">
            <summary>Compares if a string operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.Contains">
            <summary>Compares if a string operand contains the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.StartsWith">
            <summary>Compares if a string operand starts with the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.EndsWith">
            <summary>Compares if a string operand ends with the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ConditionOperator.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.NumericalConditionOperator">
            <summary>
            Defines the operator used for comparison of numerical operands.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.NumericalConditionOperator.Equals">
            <summary>Compares if a numerical operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.NumericalConditionOperator.GreaterThan">
            <summary>Compares if a numerical operand is greater than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.NumericalConditionOperator.LessThan">
            <summary>Compares if a numerical operand is less than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.NumericalConditionOperator.NotEqual">
            <summary>Compares if a numerical operand is not equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.NumericalConditionOperator.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BinaryContentData">
            <summary>
            Represents the binary content of a Multimedia Component or a Template.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.BinaryId">
            <summary>
            Gets the ID of the binary in the binaries table.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.FileSize">
            <summary>
            Gets the size of the binary data.
            </summary>
            <value>If the size is more than 2GB it will return -1.</value>
            <seealso cref="P:Size" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.Filename">
            <summary>
            Gets or sets the file name of the binary content.
            </summary>
            <value>
            If the binary content is stored externally, the value reflects the logical file name of the binary data (determined by the CM system).
            If the binary content is stored internally, the value should be set to the original file name (not the full path).
            </value>
            <remarks>
            For backward compatibility purposes, it is allowed to set this property to the external binary URI.
            This will effectively set the <see cref="P:ExternalBinaryUri" /> property instead.
            When reading this property through an Core Service endpoint older than 2012, it will still reflect the external binary URI,
            but on a 2012 or later version endpoint, it will not contain the URI, but the logical file name of the binary data.
            </remarks>
            <seealso cref="P:IsExternal" />
            <seealso cref="P:ExternalBinaryUri" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.IsExternal">
            <summary>
            Gets or sets whether the binary content is stored internally or externally.
            </summary>
            <remarks>
            If the binary content is stored externally, the <see cref="P:Filename" /> property
            should contain the URL where the binary content can be retrieved.
            </remarks>
            <seealso cref="P:Filename" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.MultimediaType">
            <summary>
            Gets or sets the Multimedia Type of the binary content.
            </summary>
            <remarks>
            This only applies to the binary content of Multimedia Components;
            for templates with binary content, this property is always <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.UploadFromFile">
            <summary>
            Gets or sets the uploaded filename of the binary content.
            </summary>
            <remarks>
            If the binary content is stored externally, should not have value.
            If the binary content is stored internally, should contain filepath.
            </remarks>
            <seealso cref="P:IsExternal" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.MimeType">
            <summary>
            Gets a value indicating the MimeType of the binary content.
            </summary>
            <remarks>
            Getting the MimeType from the MultiMediaType property requires an extra call.
            For getting the XML list of RepositoryLocalObjects the MimeType is needed.
            This property is only set when requesting a list using <see cref="T:RepositoryLocalObjectsFilterData" /> and the <see cref="P:ItemIds" /> property is set.
            Supported CoreService Endpoint : CoreService 2011
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.ExternalBinaryUri">
            <summary>
            Gets or sets the URI for external binary content.
            </summary>
            <value>
            This property should only be set if <see cref="P:IsExternal" /> is <c>true</c>.
            </value>
            <remarks>This property is introduced in version 7.0.</remarks>
            <seealso cref="P:IsExternal" />
            <seealso cref="P:Filename" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryContentData.Size">
            <summary>
            Gets the size of the binary data.
            </summary>
            <remarks>This property is introduced in version 7.0.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ComponentType">
            <summary>
            Defines the sub-type of a Component.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ComponentType.Normal">
            <summary>A normal Component containing XML content.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ComponentType.Multimedia">
            <summary>A Multimedia Component containing binary content.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ComponentType.Widget">
            <summary>A widget Component - a dedicated variant of the normal Component.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ComponentType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ComponentPresentationData">
            <summary>
            Represents the data of a Component Presentation: essentially a combination of a Component and a Component Template.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentPresentationData.Component">
            <summary>
            Gets or sets the Component.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentPresentationData.ComponentTemplate">
            <summary>
            Gets or sets the Component Template.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentPresentationData.Conditions">
            <summary>
            Gets or sets the (Target Group) conditions.
            </summary>
            <remarks>
            If conditions are specified for a Component Presentation, these are published as TCDL code.
            This TCDL code results in Content Delivery code that only renders the Component Presentation
            if the user falls in the given Target Groups.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RegionDictionary">
            <summary>
            Represents a collection of RegionData objects keyed by region names.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RegionData">
            <summary>
            Represents the data object of a Region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RegionData.ComponentPresentations">
            <summary>
            Gets or sets the collection of Component Presentations.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RegionData.Metadata">
            <summary>
            Gets or sets the Metadata.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RegionData.RegionSchema">
            <summary>
            Gets the Region Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RegionData.Regions">
            <summary>
            Gets or sets the collection of nested Regions.
            </summary>
            <remarks>
            This is a keyed collection where keys are the region names. The collection can be modified according to the following rules.
            If the <see cref="P:RegionSchema" /> is set, the structure of regions must adhere to the definition specified by that schema.
            If the schema is not set, there is no restrictions and the regions can be added or changed in any fashion.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ComponentPresentationConstraintData">
            <summary>
            Base class for Component Presentation Constraints (specified in a Region Schema).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RegionSchemaDictionary">
            <summary>
            Represents a dictionary of Region Schema's by Name.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationConstraintData.AllowDescendantKeywords">
            <summary>
            Gets or sets if components classified with keywords nested to the keyword set in <see cref="P:ComponentClassifiedWith" /> can be put in the region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationConstraintData.ComponentClassifiedWith">
            <summary>
            Gets or sets the Keyword with which Component(s) should be classified to be placed in the Region.
            </summary>
            <remarks>
            This property restricts any Components not classified with the Keyword to be placed in the Region.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LocationConstraintData.AllowSubFolders">
            <summary>
            Gets or sets if the components from nested folders in folder set in <see cref="P:ComponentInFolder" /> should be allowed.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.LocationConstraintData.ComponentInFolder">
            <summary>
            Gets or sets the Folder from which Component(s) can be placed in the Region.
            </summary>
            <remarks>
            This property restricts any Components not from the specified folder to be placed in the Region.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OccurenceConstraintData.MaxOccurs">
            <summary>
            Gets or sets the maximum number of Component Presentation(s) in the Region.
            </summary>
            <remarks>
            The maximum occurrence specifies the maximum number of Component Presentation(s) that the Region may have.
            Typical occurrence values are 1 (single valued field) and -1 (unbounded). Default value is -1.
            </remarks>
            <seealso cref="P:MinOccurs" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OccurenceConstraintData.MinOccurs">
            <summary>
            Gets or sets the minimum number of Component Presentation(s) in the Region.
            </summary>
            <remarks>
            The minimum occurrence specifies the minimum number of Component Presentation(s) that the Region must have.
            Typical occurrence values are 0 (optional field) and 1 (required field). Default Value is 0.
            </remarks>
            <seealso cref="P:MaxOccurs" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TypeConstraintData.BasedOnComponentTemplate">
            <summary>
            Gets or sets the Component Template restricting the Component Presentation(s) in the Region.
            </summary>
            <remarks>
            This property restricts any Component Presentation not based using this Template to be placed in the Region.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TypeConstraintData.BasedOnSchema">
            <summary>
            Gets or sets the Schema restricting the Component Presentation(s) in the Region.
            </summary>
            <remarks>
            This property restricts any Components not based on this Schema to be placed in the Region.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TridionEnumValue">
            <summary>
            Represents dependency between Tridion Enum value and its localized display name.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionEnumValue.Id">
            <summary>
            Gets the int representation of enum value.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionEnumValue.Name">
            <summary>
            Gets the symbolic name of enum value.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionEnumValue.Title">
            <summary>
            Gets the localized display name of enum value.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ReadOptions">
            <summary>
            Specifies how an <see cref="T:IdentifiableObjectData" /> object should be loaded.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ReadOptions.LoadFlags">
            <summary>
            Gets or sets the loading flags for reading an <see cref="T:Data.IdentifiableObjectData" /> object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ReadOptions.UseDynamicVersion">
            <summary>
            Gets or sets the conditions based on which the system will determine if it should return dynamic version (version 0).
            </summary>
            <remarks>This property only works if the id specified is versionless.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SynchronizeOptions.SynchronizeFlags">
            <summary>
            Gets or sets the flags which determines how the item will be synchronized.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.LoadFlags">
            <summary>
            Specifies how the XML representation of an Identifiable Object should be loaded.
            </summary>
            <remarks>
            The <see cref="F:IncludeAllowedActions" /> flag is used to include allowed actions information when reading an object through the Core Service.
            It is not needed when using TOM.NET properties <c>IdentifiableObject.AllowedActions</c> or <c>IdentifiableObject.DeniedActions</c>
            since these properties will implicitly load the allowed actions information.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.DynamicVersionResolvingConditions">
            <summary>
            Specifies how the dynamic version should be resolved.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SynchronizeFlags">
            <summary>
            Specifies how the Repository Local Object should/can be synchronized with its Schema.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TridionLanguageInfo">
            <summary>
            Represents information about Tridion languages.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionLanguageInfo.LanguageId">
            <summary>
            Gets the language ID (LCID).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionLanguageInfo.Name">
            <summary>
            Gets the language name.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TridionLanguageInfo.NativeName">
            <summary>
            Gets the language name in native localization.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData">
            <summary>
            Represents data for StartWorkflowInstruction.
            </summary>
            <remarks>
            <para>This class is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData.ActivityTitle">
            <summary>
            Gets or sets the initial value for title of the first Activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData.Assignee">
            <summary>
            Gets or sets the initial value for assignee of the first Activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData.DueDate">
            <summary>
            Gets or sets the initial value for <see cref="P:ActivityData.DueDate" /> property of the first Activity.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData.ProcessDefinition">
            <summary>
            Gets or sets the processDefinition for creating process instance.
            </summary>
            <remarks>This property cannot be modified using event system by subscribing to StartWorkflowEventArgs.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData.ProcessInstanceTitle">
            <summary>
            Gets or sets the initial value for title of Process instance.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData.Subjects">
            <summary>
            Gets or sets the items which participate in the Process.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData.WorkflowType">
            <summary>
            Gets or sets the workflow type of the Process.
            </summary>
            <remarks>
            <para>Different workflows are intended for different purposes (such as workflow process started automatically on editing item, project workflow
            where multiple items involved or task workflow process. The Workflow Type allows to distinguish workflow processes by their purpose. Predefined
            Workflow Types are: <c>Unspecified (tcm:0-1-67584)</c> (default), <c>SystemStarted  (tcm:0-2-67584)</c> (set internally on saving of Component,
            Page, Component Template or Page Template if they have associated Process Definition) and <c>Task (tcm:0-3-67584)</c>.</para>
            <para>If property is not set and process is being created using <c>Repository.TaskProcess</c> process definition, the <c>Task (tcm:0-3-67584)</c>
            workflow type will be set; otherwise, <c>Unspecified (tcm:0-1-67584)</c> will be used.</para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.QueueMessagePriority">
            <summary>
            Defines possible priorities that a queue message can have.
            </summary>
            <remarks>
            <para>Using <see cref="F:Low" />, this message is retrieved if there aren't any messages with <see cref="F:Normal" /> or <see cref="F:High" /> priority in the queue.</para>
            <para>Using <see cref="F:Normal" />, this message is retrieved if there aren't any messages with <see cref="F:High" /> priority.</para>
            <para>Using <see cref="F:High" />, this message is retrieved before the messages with <see cref="F:Low" /> or <see cref="F:Normal" /> priority in the queue.</para>
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessagePriority.Low">
            <summary>
            Give the queue messages a low priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessagePriority.Normal">
            <summary>
            Give the queue messages a normal priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessagePriority.High">
            <summary>
            Give the queue messages a high priority.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessagePriority.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessDefinitionType">
            <summary>
            Determines whether a Process Definition is for Bundle or other Workflowable Items.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessDefinitionType.Editing">
            <summary>
            Editing Process Definition Type.
            </summary>
            <remarks>
            An Editing Process starts when a workflow item is changed.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessDefinitionType.Bundle">
            <summary>
            Bundle Process Definition Type
            </summary>
            <remarks>A Bundle Process starts when workflow is started on a Bundle.</remarks>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessDefinitionType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationDictionary">
            <summary>
            Represents mapping between item Ids and Links to Process Definitions associated with that items.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SynchronizationResult">
            <summary>
            Represents the result of a synchronize operation of a Repository Local Object against its Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SynchronizationResult.SynchronizationActions">
            <summary>
            Gets the list of actions performed on the Repository Local Object along with on which Field.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SynchronizationResult.SynchronizedItem">
            <summary>
            Gets the Synchronized Repository Local Object.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SynchronizationActionData">
            <summary>
            Represents the data of a synchronization action of a Repository Local Object against its Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SynchronizationActionData.FieldDescription">
            <summary>
            Gets the description/label of the field on which the synchronization operation was applied.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SynchronizationActionData.FieldIndex">
            <summary>
            Gets the index of a multivalued field in which the synchronization operation was applied.
            </summary>
            <remarks>
            For the following operation the value of this property is <c>null</c>, as it is not applicable as these
            operations are done on fields not individual field value or the the collection of fields.
            <list type="bullet">
            <item><description><see cref="F:ContentManagement.SynchronizeFlags.Basic" /></description></item>
            <item><description><see cref="F:ContentManagement.SynchronizeFlags.FixNamespace" /></description></item>
            <item><description><see cref="F:ContentManagement.SynchronizeFlags.RemoveUnknownFields" /></description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SynchronizationActionData.FieldName">
            <summary>
            Gets the XML name of the field on which the synchronization operation was applied.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SynchronizationActionData.SynchronizationActionApplied">
            <summary>
            Gets the synchronization operation applied.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SchemaFieldsData">
            <summary>
            Represents the set of content/metadata field definitions in a Schema.
            </summary>
            <remarks>
            Two subsets of fields are distinguished: <see cref="P:Fields" /> and <see cref="P:MetadataFields" />.
            It depends on the <see cref="T:ContentManagement.SchemaPurpose" /> which of these subsets are present:
            <list type="table">
            <item>
            <term><see cref="F:ContentManagement.SchemaPurpose.Component" /></term>
            <description>Both subsets are present, unless the content is complex (in which case only the MetadataFields subset is present).</description>
            </item>
            <item>
            <term><see cref="F:ContentManagement.SchemaPurpose.Multimedia" /></term>
            <description>Only the MetadataFields subset is present.</description>
            </item>
            <item>
            <term><see cref="F:ContentManagement.SchemaPurpose.Metadata" /></term>
            <description>Only the MetadataFields subset is present.</description>
            </item>
            <item>
            <term><see cref="F:ContentManagement.SchemaPurpose.Embedded" /></term>
            <description>Only the Fields subset is present.</description>
            </item>
            <item>
            <term><see cref="F:ContentManagement.SchemaPurpose.Protocol" /></term>
            <description>Only the Fields subset is present.</description>
            </item>
            <item>
            <term><see cref="F:VirtualFolderType" /></term>
            <description>Only the Fields subset is present.</description>
            </item>
            <item>
            <term><see cref="F:TemplateParameters" /></term>
            <description>Only the Fields subset is present.</description>
            </item>
            <item>
            <term><see cref="F:ContentManagement.SchemaPurpose.Bundle" /></term>
            <description>Only the MetadataFields subset is present.</description>
            </item>
            <item>
            <term><see cref="F:ContentManagement.SchemaPurpose.Region" /></term>
            <description>Only the MetadataFields subset is present.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaFieldsData.Fields">
            <summary>
            Gets or sets the (content) field definitions.
            </summary>
            <value>
            A list of ItemFieldDefinitionData objects.
            This is a connected collection: changes to the collection are reflected in the state of the SchemaFields object.
            May be <c>null</c> if not applicable for the Schema (see remarks on the <see cref="T:SchemaFieldsData" /> class).
            </value>
            <remarks>
            Note: On the client side, the type of the value is an array of <see cref="T:ItemFieldDefinitionData" /> objects.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaFieldsData.MetadataFields">
            <summary>
            Gets or sets the metadata field definitions.
            </summary>
            <value>
            A list of ItemFieldDefinitionData objects.
            This is a connected collection: changes to the collection are reflected in the state of the SchemaFields object.
            May be <c>null</c> if not applicable for the Schema (see remarks on the <see cref="T:SchemaFieldsData" /> class).
            </value>
            <remarks>
            Note: On the client side, the type of the value is an array of <see cref="T:ItemFieldDefinitionData" /> objects.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaFieldsData.NamespaceUri">
            <summary>
            Gets or sets the namespace URI for the Schema
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SchemaFieldsData.RootElementName">
            <summary>
            Gets or sets the root element/type name for the content fields
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ItemFieldDefinitionData">
            <summary>
            Abstract base class for Item Field Definitions (specified in a Schema)
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemFieldDefinitionData.CustomUrl">
            <summary>
            Gets or sets the custom URL of the field.
            </summary>
            <remarks>
            If a custom URL is defined, the CME hyperlinks the label using this URL as hyperlink.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemFieldDefinitionData.Description">
            <summary>
            Gets or sets the description/label of the field.
            </summary>
            <remarks>
            The description is used as labels in the Content Manager Explorer form-based editor.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemFieldDefinitionData.MaxOccurs">
            <summary>
            Gets or sets the maximum occurrence of the field.
            </summary>
            <remarks>
            The maximum occurrence specifies the maximum number of values that field may have.
            Typical occurrence values are 1 (single valued field) and -1 (multi valued field).
            </remarks>
            <seealso cref="P:MinOccurs" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemFieldDefinitionData.MinOccurs">
            <summary>
            Gets or sets the minimum occurrence of the field.
            </summary>
            <remarks>
            The minimum occurrence specifies the minimum number of values that the field must have.
            Typical occurrence values are 0 (optional field) and 1 (required field).
            </remarks>
            <seealso cref="P:MaxOccurs" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemFieldDefinitionData.Name">
            <summary>
            Gets or sets the XML name of the field.
            </summary>
            <remarks>
            A field's values are contained in XML elements with this name as (local) name.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemFieldDefinitionData.ExtensionXml">
            <summary>
            Gets or sets the extension XML element which can contain any custom data.
            </summary>
            <value>
            The extension XML element (the root element name is (must be) always tcm:ExtensionXml).
            </value>
            <remarks>
            This property is new in the 2011 SP1 version.
            The recommended way of storing the extension data is to create an element inside the tcm:ExtensionXml element and then store all the specific information below that element.
            To access the extension data, first try to select the application's parent element - if it doesn't exist, create one by adding a child element to the ExtensionXml root element.
            The content of this property is shared between all add-on applications, so every application must take that into account and do not accidentally delete or overwrite information not belonging to it.
            Supported CoreService Endpoint : CoreService 2011
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentLinkFieldDefinitionData.AllowMultimediaLinks">
            <summary>
            Gets or sets whether links to Multimedia Components are allowed.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentLinkFieldDefinitionData.AllowedTargetSchemas">
            <summary>
            Gets access to the allowed Schemas for the linked Components.
            </summary>
            <value>
            A list of Link objects to the SchemaData representing the allowed Schemas.
            This is a connected collection: changes to the collection are reflected in the state of the field definition.
            </value>
            <remarks>
            An empty list means that the target Schema is not constrained.
            Note: On the client side, the type of the value is an array of <see cref="T:Link" /> objects.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentLinkFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets a Link to the ComponentData used as default field's value.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DateFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A nullable DateTime value. If null, no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DateFieldDefinitionData.IsMaxValueExclusive">
            <summary>
            Gets or sets whether the specified maximum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:MaxValue" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DateFieldDefinitionData.IsMinValueExclusive">
            <summary>
            Gets or sets whether the specified minimum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:MinValue" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DateFieldDefinitionData.List">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A DateListDefinitionData object representing the list of allowed values.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DateFieldDefinitionData.MaxValue">
            <summary>
            Gets or sets the maximum value constraint.
            </summary>
            <value>
            A nullable DateTime value. If null, no maximum value constraint is defined.
            </value>
            <seealso cref="P:IsMaxValueExclusive" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DateFieldDefinitionData.MinValue">
            <summary>
            Gets or sets the minimum value constraint.
            </summary>
            <value>
            A nullable DateTime value. If null, the no minimum value constraint is defined.
            </value>
            <seealso cref="P:IsMinValueExclusive" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DateFieldDefinitionData.Pattern">
            <summary>
            Gets or sets a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.EmbeddedSchemaFieldDefinitionData.EmbeddedFields">
            <summary>
            Gets the embedded field definitions.
            </summary>
            <remarks>
            <para>
            If an Embedded Schema exists and the Schema Fields are read in expanded mode, this property will be set and it will contain
            the embedded schema field definitions. This property offers then a read-only view of the embedded field definitions.
            If the user needs to modify the embedded schema field definitions, he will have to load that schema separately.
            </para>
            <para>
            Note: On the client side, the type of the value is an array of <see cref="T:ItemFieldDefinitionData" /> objects.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.EmbeddedSchemaFieldDefinitionData.EmbeddedSchema">
            <summary>
            Gets or sets the Link to SchemaData that defines the embedded fields.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ExternalLinkFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A string containing the default URL link or <c>null</c> if no default value is defined.
            </value>
            <remarks>
            Setting this property is currently not supported and will have no effect.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordFieldDefinitionData.Category">
            <summary>
            Gets or sets the Category in which the Keywords must reside.
            </summary>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A Link object to KeywordData or <c>null</c> if no default value is defined.
            </value>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordFieldDefinitionData.List">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A ListDefinitionData object representing the list of allowed values.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.MultiLineTextFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.MultiLineTextFieldDefinitionData.Height">
            <summary>
            Gets or sets the height of the text area in the form-based User Interface.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.MultimediaLinkFieldDefinitionData.AllowedTargetSchemas">
            <summary>
            Gets access to the allowed Schemas for the linked Multimedia Components.
            </summary>
            <value>
            A list of Link objects to SchemaData (purpose must be SchemaPurpose.Multimedia) representing the allowed Schemas.
            This is a connected collection: changes to the collection are reflected in the state of the field definition.
            </value>
            <remarks>
            An empty list means that the target Schema is not constrained.
            Note: On the client side, the type of the value is an array of <see cref="T:Link" /> objects.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.MultimediaLinkFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A Link to ComponentData object (must be of type ComponentType.Multimedia) representing the default value
            or <c>null</c> if no default value is defined.
            </value>
            <remarks>
            Note: On the client side, the type of the value is <see cref="T:Link" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A nullable floating-point value. If null, no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.FractionDigits">
            <summary>
            Gets or sets the constraints on the number of fraction digits.
            </summary>
            <value>
            A nullable integer value. If null, a constraint on the number of fraction digits is not defined.
            </value>
            <remarks>
            If only integer values are allowed, this constraint should be set to <c>0</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.IsMaxValueExclusive">
            <summary>
            Gets or sets whether the specified maximum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:MaxValue" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.IsMinValueExclusive">
            <summary>
            Gets or sets whether the specified minimum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:MinValue" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.List">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A NumberListDefinitionData object representing the list of allowed values.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.MaxValue">
            <summary>
            Gets or sets the maximum value constraint.
            </summary>
            <value>
            A nullable floating-point value. If null, no maximum value constraint is defined.
            </value>
            <seealso cref="P:IsMaxValueExclusive" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.MinValue">
            <summary>
            Gets or sets the minimum value constraint.
            </summary>
            <value>
            A nullable floating-point value. If null, the no minimum value constraint is defined.
            </value>
            <seealso cref="P:IsMinValueExclusive" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.Pattern">
            <summary>
            Gets or sets a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberFieldDefinitionData.TotalDigits">
            <summary>
            Gets or sets the constraint on the total number of digits.
            </summary>
            <value>
            A nullable integer value. If null, a constraint on the total number of digits is not defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SingleLineTextFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SingleLineTextFieldDefinitionData.List">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A SingleLineTextListDefinitionData object representing the list of allowed values.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SingleLineTextFieldDefinitionData.MaxLength">
            <summary>
            Gets or sets the maximum length constraint.
            </summary>
            <value>
            A nullable integer value. If null, no maximum length constraint is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SingleLineTextFieldDefinitionData.MinLength">
            <summary>
            Gets or sets the minimum length constraint.
            </summary>
            <value>
            A nullable integer value. If null, no minimum length constraint is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SingleLineTextFieldDefinitionData.Pattern">
            <summary>
            Gets or sets a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.XhtmlFieldDefinitionData.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.XhtmlFieldDefinitionData.FilterXslt">
            <summary>
            Gets or sets the Filter XSLT used by the CME.
            </summary>
            <value>
            The XSLT root element or <c>null</c> if no Filter XSLT is defined.
            </value>
            <remarks>
            Note: On the client side, the type of the value is XElement.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.XhtmlFieldDefinitionData.Height">
            <summary>
            Gets or sets the height of the text area in the form-based User Interface.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.DateListDefinitionData">
            <summary>
            Provides information about whether/how to present a list of allowed date field values.
            </summary>
            <seealso cref="T:DateFieldDefinitionData" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DateListDefinitionData.Entries">
            <summary>
            Gets access to the allowed values.
            </summary>
            <value>
            A list of DateTime values representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
            <remarks>
            Note: On the client side, the type of the value is an array of <see cref="T:System.DateTime" /> objects.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ListDefinitionData">
            <summary>
            Provides information about how a list of values should be represented to the user.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ListDefinitionData.Height">
            <summary>
            Gets or sets the height of the list (if applicable).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ListDefinitionData.Type">
            <summary>
            Gets or sets the list type (drop-down, checkboxes, radio buttons, etc.)
            </summary>
            <remarks>
            If the value is <see cref="F:ContentManagement.Fields.ListType.None" />, no allowed values are presented.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.NumberListDefinitionData">
            <summary>
            Provides information about whether/how to present a list of allowed number field values.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NumberListDefinitionData.Entries">
            <summary>
            Gets access to the list of allowed values.
            </summary>
            <value>
            A list of floating-point values representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
            <remarks>
            Note: On the client side, the type of the value is an array of <c>double</c> values.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SingleLineTextListDefinitionData">
            <summary>
            Provides information about whether/how to present a list of allowed single-line text field values.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SingleLineTextListDefinitionData.Entries">
            <summary>
            Gets access to the allowed values.
            </summary>
            <value>
            A list of strings representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
            <remarks>
            Note: On the client side, the type of the value is an array of strings.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ListType">
            <summary>
            Specifies the type of list used to present allowed values for a field.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListType.None">
            <summary>Don't present a list of allowed values.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListType.Select">
            <summary>Present a select list (or drop-down list if Height=1)</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListType.Edit">
            <summary>Not used.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListType.Radio">
            <summary>Present radio buttons.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListType.Checkbox">
            <summary>Present check boxes.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListType.Tree">
            <summary>Present a tree (Taxonomy).</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ListType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishSourceData">
            <summary>
            Represents information about source from which content was published.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishSourceData.ContextPublication">
            <summary>
            Gets a Link to the Publication from which content was published.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishSourceData.TargetType">
            <summary>
            Gets a Link to the Target Type to which content was published.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ResolveContainingPagesInstructionData">
            <summary>
            An instruction data that configures containing pages resolving.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveContainingPagesInstructionData.IncludeComponentMetadataLinks">
            <summary>
            Gets or sets a value indicating whether component links in component's metadata will be taken into account during resolving.
            </summary>
            <remarks>
            <para>
            The default value is <c>false</c>.
            </para>
            <para>
            This setting is applied to intermediate components that contain links (direct or indirect) to provided component in metadata.
            </para>
            </remarks>
            <seealso cref="P:IncludePageMetadataLinks" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveContainingPagesInstructionData.IncludeDynamicVersion">
            <summary>
            Gets or sets a value indicating whether to resolve dynamic version for items that are not in workflow.
            </summary>
            <value>
            If <c>true</c>, dynamic version (if item is checked out or new) will be taken into account during resolving.
            Otherwise, dynamic versions will not be taken into account (but dynamic versions of items in Workflow
            will be used in resolving in case <see cref="P:IncludeWorkflow" /> is set to <c>true</c>).
            </value>
            <remarks>
            <para>
            The default value is <c>false</c>.
            </para>
            <para>
            This setting is applied to pages, page templates and intermediate components that contain links (direct or indirect) to provided component that are not in workflow.
            </para>
            </remarks>
            <seealso cref="P:IncludeWorkflow" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveContainingPagesInstructionData.IncludePageMetadataLinks">
            <summary>
            Gets or sets a value indicating whether component links in page's metadata will be taken into account during resolving.
            </summary>
            <remarks>
            <para>
            The default value is <c>false</c>.
            </para>
            <para>
            This setting is applied to pages that contain links (direct or indirect) to provided component in metadata.
            </para>
            </remarks>
            <seealso cref="P:IncludeComponentMetadataLinks" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveContainingPagesInstructionData.IncludeWorkflow">
            <summary>
            Gets or sets a value indicating whether to include current versions of items in workflow.
            </summary>
            <value>
            If <c>true</c>, the current dynamic version of an item in workflow (regardless of the value of <see cref="P:IncludeDynamicVersion" />) is
            taken into account during resolving.
            If <c>false</c>, changes made in running workflow is not considered and the latest checked in version is used for resolving.
            </value>
            <remarks>
            <para>
            The default value is <c>false</c>.
            </para>
            <para>
            This setting is applied to pages, page templates and intermediate components that contain links (direct or indirect) to provided component that are in workflow.
            </para>
            </remarks>
            <seealso cref="P:IncludeDynamicVersion" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ResolveContainingPagesInstructionData.ResolvePublishedPagesOnly">
            <summary>
            Gets or sets a value indicating whether to resolve only published pages.
            </summary>
            <value>
            If set to <c>true</c>, only published pages will be resolved.
            If not set or set to <c>false</c>, all pages will be resolved.
            </value>
            <remarks>
            <para>
            The default value is <c>false</c>.
            </para>
            <para>
            This setting is only applied to pages.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ContainingPagesDictionary">
            <summary>
            Set of pages where component is directly or indirectly used as well as publish info of these pages. If page is not published, publish info list will be empty.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PurgeWorkflowHistoryInstructionData">
            <summary>
            Represents the instruction for purging <see cref="T:ProcessHistoryData" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PurgeWorkflowHistoryInstructionData.DeleteHistoryBefore">
            <summary>
            Gets or sets date to remove <see cref="T:ProcessHistoryData" /> which were finished before this date.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PurgeWorkflowHistoryInstructionData.Publication">
            <summary>
            Gets or sets the <see cref="T:CommunicationManagement.PublicationData" /> where purging will be processed.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.NotificationMessage">
            <summary>
            Represents a notification message.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NotificationMessage.Action">
            <summary>
            Gets or sets the action name which triggered this notification.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NotificationMessage.Details">
            <summary>
            Gets or sets additional information or parameters for the notification.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.NotificationMessage.SubjectIds">
            <summary>
            Gets or sets identifiers of items related to this notification.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ItemReadResultDictionary">
            <summary>
            Dictionary of <see cref="T:ItemReadResult" /> with string id as the key and a <see cref="T:ItemReadResult" /> as value.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ItemReadResult">
            <summary>
            This class contains <see cref="T:IdentifiableObjectData" /> object or error details, if item can not be read.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemReadResult.Error">
            <summary>
            Error details (if item can not be read).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemReadResult.Item">
            <summary>
            Fully loaded object (null if item can not be read).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.DeleteTaxonomyNodeMode">
            <summary>
            Specifies what will happen to the child nodes of a Taxonomy node after that node's deletion.
            </summary>
            <remarks>
            <para>
            Using <see cref="F:DeleteBranch" />, nodes in child Publications that are part of the branch will not be deleted. If a child node has other
            parents that are not part of the branch, the child node and its children will not be deleted.
            <seealso cref="F:DeleteBranchIncludeChildPublications" />.
            </para>
            <para>
            Using <see cref="F:DeleteBranchIncludeChildPublications" />, if a child node has other parents that are not part of the branch, the child node and its children will not be deleted.
            <seealso cref="F:DeleteBranch" />.
            </para>
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeleteTaxonomyNodeMode.DeleteBranch">
            <summary>
            Specifies that the entire branch of descendant nodes will be deleted, excluding nodes in child Publications.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeleteTaxonomyNodeMode.DeleteBranchIncludeChildPublications">
            <summary>
            Specifies that the entire branch of descendants will be deleted, including nodes in child Publications.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeleteTaxonomyNodeMode.RemoveParentFromChildren">
            <summary>
            Specifies that the deleted node will be removed from the children's parents.
            Children will become root if they have no other parents.
            If the children have other parents, those parents are preserved.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.DeleteTaxonomyNodeMode.AssignChildrenToGrandparents">
            <summary>
            Specifies that the parents of the deleted node adopt the deleted node's children.
            If the children have other parents, those parents are preserved.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.CoreServiceFault">
            <summary>
            A generic fault detail used by the Tridion.ContentManager.CoreService that contains
            details about the exception that was thrown and its inner exception(s).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CoreServiceFault.ValidationErrors">
            <summary>
            Gets the list of <see cref="T:Data.ValidationErrorData" /> which were raised during operation performing.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CoreServiceFault.ValidationWarnings">
            <summary>
            Gets the list of <see cref="T:Data.ValidationWarningData" /> which were raised during operation performing.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ServiceFault.Category">
            <summary>
            Gets or sets the category of the exception.
            </summary>
            <remarks>The category is internally used for logging.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ServiceFault.ErrorCode">
            <summary>
            Gets or sets the error code of the exception.
            </summary>
            <remarks>The error code can be used to programmatically distinguish between exceptions.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ServiceFault.ExceptionName">
            <summary>
            Gets or sets the type name of the original Exception that was thrown.
            </summary>
            <remarks>The name of the Exception can be used to programmatically distinguish between exceptions.
            When using SOAP 1.2 it is recommended to use the <see cref="P:System.ServiceModel.FaultCode.SubCode" />.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ServiceFault.Messages">
            <summary>
            Gets or sets the messages of the inner exceptions.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.MessageList">
            <summary>
            A collection of exception messages.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.OperationInstruction">
            <summary>
            Optional instructions that control how operation will be executed.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OperationInstruction.Mode">
            <summary>
            Controls how to react on validation errors and warnings.
            </summary>
            <remarks>
            <para>In <see cref="F:Mode.FailOnError" />  mode operation will be stopped before doing actual changes in DB if any error will be found.</para>
            <para>In <see cref="F:FailOnWarning" /> mode operation will be stopped before doing actual changes in DB if any error or warning will be found.</para>
            <para>Note that in case of preliminary stopping of the operation, processed event handlers are not executed.</para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.OperationMode">
            <summary>
            Specifies type of behavior when validation errors occur.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.OperationMode.FailOnError">
            <summary>
            Fails the operation in case of any validation error found (warnings are returned in the operation result, but do not break operation).
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.OperationMode.FailOnWarning">
            <summary>
            Fails the operation in case of any validation error or warning found.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.InstanceData">
            <summary>
            Represents the instance data of a schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.InstanceData.ContainerItem">
            <summary>
            Gets the container of the item for which this instance data is going to be used.
            </summary>
            <value>
            The possible values are of type <see cref="T:RepositoryData" /> or <see cref="T:OrganizationalItemData" />.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.InstanceData.Content">
            <summary>
            Gets or sets the XML content.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.InstanceData.Metadata">
            <summary>
            Gets or sets the (custom) metadata as XML.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.InstanceData.Schema">
            <summary>
            Gets the associated schema for this Instance Data.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.InstanceData.Region">
            <summary>
            (Not supported in this release)
            Gets or sets the root Region.
            </summary>
            <remarks>
            This property is not supported, will throw exception if used.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FilterData.BaseColumns">
            <summary>
            Gets or sets which base columns to include in the list. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>
            The available columns depend on the list method for which the Filter is used.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.FilterData.SortExpression">
            <summary>
            Gets or sets the sort expression.
            </summary>
            <value>A string containing the sort expression or <c>null</c> for default sorting.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StronglyTypedFilterData.IncludeAllowedActionsColumns">
            <summary>
            Gets or sets a value indicating whether the allowed actions columns should be included in the list data.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.StronglyTypedFilterData.ExtensionProperties">
            <summary>
            Gets or sets the extension properties dictionary which may be used by extensions to alter the result or filter.
            </summary>
            <remarks>
            <para>This property is introduced in version 8.0.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WhereUsedFilterData.InRepository">
            <summary>
            Gets or sets a condition on the InRepository property. When <c>null</c> is specified the condition is not applied
            </summary>
            <remarks>When specified, the results are constrained by the specified <see cref="P:InRepository" /> value in the filter. For example,
            if the value is set to a <see cref="T:TcmUri" /> of a <c>Repository</c>, only items in that <c>Repository</c> will be included in the result.
            When using the CoreService, the <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.WhereUsedFilterData.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:ItemType" /> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:ItemType" /> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.UsingItemsFilterData">
            <summary>
            Represents the data of a Filter for list of items using specific item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UsingItemsFilterData.ExcludeTaxonomyRelations">
            <summary>
            Gets or sets a value indicating whether taxonomy relations are excluded from the result.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            <para>
            When specified, the results are constrained by the specified <see cref="P:ExcludeTaxonomyRelations" /> value in the filter. For example,
            if the value is set to <c>true</c>, all Taxonomy relations will be excluded from the result.
            </para>
            Taxonomy relations are parent, child and related Keywords of a <see cref="T:ContentManagement.KeywordData" /> and allowed parent Categories of a <see cref="T:ContentManagement.CategoryData" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UsingItemsFilterData.IncludeLocalCopies">
            <summary>
            Gets or sets a value indicating whether local copies are included.
            </summary>
            <remarks>The default value is <c>false</c>.
            <para>
            When specified, the results are constrained by the specified <see cref="P:IncludeLocalCopies" /> value in the filter. For example,
            if the value is set to <c>true</c>, items that are local copies will be included in the result.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UsingItemsFilterData.IncludeVersionsColumn">
            <summary>
            Gets or sets a value indicating whether the item's version is included in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UsingItemsFilterData.IncludedVersions">
            <summary>
            Gets or sets a condition that specifies which versions to include in the result.
            </summary>
            <value>The default value is <c>VersionCondition.AllVersions</c>.</value>
            <remarks>
            <para>
            The results are constrained by the specified <see cref="T:VersionCondition" /> value in the filter. For example,
            if the value is set to <c>VersionCondition.OnlyLatestVersions</c>, only the items' latests version will be included in the result.
            </para>
            </remarks>
            <example>
            <code>
            UsingItemsFilterData filter = new UsingItemsFilterData();
            filter.IncludedVersions = VersionCondition.AllVersions | VersionCondition.OnlyLatestVersions
            </code>
            </example>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.UsedItemsFilterData">
            <summary>
            Represents the data of a Filter for a list of used items.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UsedItemsFilterData.IncludeBlueprintParentItem">
            <summary>
            Indicates whether to include the parent item of this item (if any). If this item is a
            local copy, then the parent item is the item overridden by this item
            (as a local copy). The parent item is labeled as such in the Comment attribute.
            </summary>
            <value>A boolean indicating whether Blueprint parent should be
            included in the results or not.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UsedItemsFilterData.IncludeExternalLinks">
            <summary>
            Indicates whether to include external links in the results. External links are extracted
            from the Component's content/metadata. Applied only for Components.
            </summary>
            <value>A boolean indicating whether external links should be
            included in the results or not.</value>
            <remarks>This property must not be used. It is only applicable when retrieving XML list. To extract external links from the item use <c>RepositoryLocalObject.GetListExternalLinks()</c>.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.VersionsFilterData">
            <summary>
            Represents the data class of a Filter for a list of versions.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.VersionsFilterData.IncludeRevisorDescriptionColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:FullVersionInfo.Revisor" /> is set in the returned list including Description.
            </summary>
            <value>The value is <c>null</c> means <c>false</c>.</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.DeletedReferencesFilterData">
            <summary>
            Represents the data class of a Filter for a list of deleted references.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.ComponentTypes">
            <summary>
            Gets or sets the <see cref="T:ContentManagement.ComponentType" /> conditions to constrain the items returned by the list to this value.
            </summary>
            <value>A collection of <see cref="T:ContentManagement.ComponentType" /> values or <c>null</c> if the condition is not specified.</value>
            <remarks>Setting this value sets the TemplateTypeIds to <c>null</c> in case of a <see cref="T:OrganizationalItemItemsFilterData" /> filter.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.IncludeRelativeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the XML attribute <c>URL</c> is included in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            When the property IncludeRelativeWebDavUrlColumn is set to <c>true</c>, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:ItemType" /> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:ItemType" /> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.LockFilter">
            <summary>
            Gets or sets a bit mask to apply to the versioned items' <see cref="T:ContentManagement.LockType" />. Must be used in combination with <see cref="P:LockResult" />.
            </summary>
            <value>Value or combination of values from <see cref="T:ContentManagement.LockType" /> or <c>null</c> if the condition is not specified.</value>
            <remarks>
            This property does not filter out organizational items which also can be locked.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.LockResult">
            <summary>
            Gets or sets a value indication whether to return only versioned items with the given <see cref="T:ContentManagement.LockType" /> (after the <see cref="P:LockFilter" /> bit mask has been applied).
            </summary>
            <value>Value or combination of values from <see cref="T:ContentManagement.LockType" /> or <c>null</c> if the condition is not specified.</value>
            <remarks>
            This property does not filter out organizational items which also can be locked.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.Recursive">
            <summary>
            Gets or sets whether to include items in sub-organizational items (recursively).
            </summary>
            <remarks> Set <c>true</c> to enumerate current and all child
            organizational items, <c>false</c> otherwise. Default is
            <c>false</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.SchemaPurposes">
            <summary>
            Gets or sets the <see cref="T:ContentManagement.SchemaPurpose" /> conditions to constrain the items returned by the list to this value.
            </summary>
            <value>A collection of <see cref="T:ContentManagement.SchemaPurpose" /> values or <c>null</c> if the condition is not specified.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.IncludeDescriptionColumn">
            <summary>
            Gets or sets a value indicating whether to include the item's description in the list.
            </summary>
            <value><c>true</c> to include the Description column; otherwise, <c>false</c>.</value>
            <remarks>This property is introduced in version 7.0</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ItemsFilterData.ShowDynamicVersionIfReadableByUser">
            <summary>
            Gets or sets a value indicating whether to include dynamic version of an item.
            </summary>
            <value>If value is set to <c>true</c>, show a dynamic version of an item if readable by user. Otherwise, always show latest major version
            of an item (if available). Default value is <c>false</c>.</value>
            <remarks>This property is introduced in version 8.3</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.OrganizationalItemItemsFilterData">
            <summary>
            Represents the data class of a Filter for a list of items in Organizational Item.
            There is a legacy issue related to the fact that <see cref="T:ContentManagement.SchemaPurpose" />, <see cref="T:ContentManagement.ComponentType" /> and <see cref="T:TemplateTypes.TemplateType" /> conditions map together to the same, one legacy filter condition called SubType.
            This means if any of those conditions is set and later read as one of the others, you may get a value which is out of range of the enumeration. However, this is not normal use case.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemItemsFilterData.BasedOnSchemas">
            <summary>
            Gets or sets a condition to return only items that are using the given schemas.
            </summary>
            <remarks>If the list of schemas is <c>null</c>, the condition is not applied.
            This condition should be used in conjunction with <see cref="P:ItemsFilterData.ItemTypes" />.
            Setting the condition to an empty list of schemas will return an empty list.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemItemsFilterData.NotBasedOnSchema">
            <summary>
            Gets or sets a condition  to limit the returned list to only include components that are not based on the specified schema..
            </summary>
            <value>When <c>null</c> is specified, the condition is not applied.</value>
            <remarks>
            Used internally to assert if the folder with mandatory linked schema has components based on other schema.
            When specified, the only components based on OTHER schema's will be included in the result.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemItemsFilterData.ShowNewItems">
            <summary>
            Gets or sets a condition on the whether the show new items in the list.
            </summary>
            <value>If <c>null</c>, the constraint is not applied.</value>
            <remarks>
            Specifies whether to include new items (items that have not been checked-in yet).
            By default newly created items are not included in the result list.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemItemsFilterData.TemplateTypeIds">
            <summary>
            Gets or sets the <see cref="P:TemplateTypeIds" /> condition to limit the list to items with given template type IDs.
            </summary>
            <value>A collection of template types IDs or <c>null</c> if the condition is not specified.</value>
            <remarks>Setting this value sets the ComponentTypes to <c>null</c>.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemItemsFilterData.FailIfNoAccessToItems">
            <summary>
            Gets or sets a value indicating whether the operation should fail if there are items in the list to which the user does not have access.
            </summary>
            <remarks>
            Setting this property to <c>true</c> will result in exceptions if the user does not have access to the items returned by the operation or to the subject of the operation.
            <para>This property is introduced in version 7.0</para></remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemItemsFilterData.IncludePathColumn">
            <summary>
            Gets or sets a value indicating whether to include the Path in the list.
            </summary>
            <value><c>true</c> to include Path column; otherwise, <c>false</c>.</value>
            <remarks>This property is introduced in version 7.0</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RepositoryItemsFilterData">
            <summary>
            Represents the data class of a Filter for a list of items in the repository.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryItemsFilterData.ShowNewItems">
            <summary>
            Gets or sets a condition on whether to show new items in the list.
            </summary>
            <value>If <c>null</c>, the constraint is not applied.</value>
            <remarks>
            Specifies whether to include new items (items that have not been checked-in for the first time yet).
            By default newly created items are not included in the result list.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.KeywordsFilterData">
            <summary>
            Represents the data of a Filter for a list of Keywords.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordsFilterData.IsAbstract">
            <summary>
            Gets or sets a condition on the IsAbstract property. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <value>
            When specified, the results are constraint by the specified <see cref="P:IsAbstract" /> value in the filter.
            For example, if the value is set to <c>true</c>, only the abstract keywords will be included in the result.
            If the value is set to <c>false</c>, only non-abstract keywords will be included in the result.
            If the value is not set, both abstract and non-abstract keywords will be included in the result.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordsFilterData.IsRoot">
            <summary>
            Gets or sets a condition on the IsRoot property. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>
            When specified, the results are constraint by the specified <see cref="P:IsRoot" /> value in the filter.
            For example, if the value is set to <c>true</c>, only the root keywords will be included in the result.
            If the value is set to <c>false</c>, only non-root keywords will be included in the result.
            If the value is not set, both root and non-root keywords will be included in the result.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.KeywordsFilterData.ResultLimit">
            <summary>
            Gets or sets a value limiting the number of items returned in the list.
            </summary>
            <value>
            Positive value or <c>null</c> if the condition is not specified.
            </value>
            <remarks>
            Setting the value to zero will return an empty list.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ChildKeywordsFilterData">
            <summary>
            Represents the data of a Filter for a list of Child Keywords.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ChildKeywordsFilterData.InCategory">
            <summary>
            Gets or sets a condition to include only keywords that have the specified Category as their Organizational Item.
            </summary>
            <value>
            When specified, the results are constraint by the specified category <see cref="P:InCategory" />. For example,
            When specified, the results are constraint by the specified <see cref="P:InCategory" /> value in the filter. For example,
            if the value is set to a <seealso cref="T:CategoryData" />, only items in that Category will be included in the result.
            This condition maps to the <c>FromCategory</c> condition in the <c>FilterData.Conditions</c> collection.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ChildKeywordsFilterData.IsAbstract">
            <summary>
            Gets or sets a condition on the IsAbstract property.
            </summary>
            <remarks>
            When specified, the results are constraint by the specified <see cref="P:IsAbstract" /> value in the filter.
            If the value is set to <c>true</c>, only the abstract keywords will be included in the result.
            If the value is set to <c>false</c>, only the concrete keywords will be included in the result.
            If the value is <c>null</c>, both abstract and concrete keywords will be included.
            This condition maps to the <c>Abstract</c> condition in the <c>FilterData.Conditions</c> collection.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.OrphanKeywordsFilterData">
            <summary>
            Represents the data of a Filter for a list of orphaned keywords.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrphanKeywordsFilterData.RootCategory">
            <summary>
            Gets or sets a condition on the RootCategory property. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>
            When specified, the result contains only orphan Keywords below the specified <see cref="T:CategoryData" />.
            This condition maps to the <c>RootCategory</c> condition in the <c>FilterData.Conditions</c> collection.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ChildCategoriesFilterData">
            <summary>
            Represents the data of a Filter for a list of Child Categories.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.CategoriesFilterData">
            <summary>
            Represents the data of a Filter for a list of Categories.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.CategoriesFilterData.IsRoot">
            <summary>
            Gets or sets a condition on the <see cref="P:yData.IsTaxonomyRoot" /> property.
            </summary>
            <value>
            When specified, the results are constraint by the specified <see cref="P:IsRoot" /> value in the filter.
            For example, if the value is set to <c>true</c>, only the root categories will be included in the result.
            If set to <c>false</c>, only non-root categories will be included in the result.
            When not set, all categories will be included in the result.
            </value>
            <remarks>
            This property maps to the <c>Root</c> condition in the <c>FilterData.Conditions</c> collection.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ClassifiedItemsFilterData">
            <summary>
            Represents the data class of a Filter for a list of classified items.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassifiedItemsFilterData.BasedOnSchemas">
            <summary>
            Gets or sets the <see cref="P:BasedOnSchemas" /> condition to return only items that are using the given schemas.
            </summary>
            <value>If the list of schemas is <c>null</c>, the condition is not applied.</value>
            <remarks>Setting the condition to an empty list of schemas will return an empty list.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassifiedItemsFilterData.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:ItemType" /> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:ItemType" /> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassifiedItemsFilterData.ResolveDescendantKeywords">
            <summary>
            Gets or sets a value indicating if descendant keywords are included in the result.
            </summary>
            <remarks>By default descendant keywords are not included into the result.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassifiedItemsFilterData.ResultLimit">
            <summary>
            Gets or sets a value limiting the number of items returned in the list.
            </summary>
            <value>
            Positive value or <c>null</c> if the condition is not specified.
            </value>
            <remarks>
            Setting the value to zero will return an empty list.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.OrganizationalItemsFilterData">
            <summary>
            Represents the data class of a Filter for a recursive list of organizational items in subject repository.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemsFilterData.ExcludeTrustees">
            <summary>
            Gets or sets the <see cref="P:ExcludeTrustees" /> condition to return
            only organizational items that do not use ANY of the specified
            trustees in their permissions.
            </summary>
            <remarks>Collection of Users or Groups. If specified, only returns
            Organizational Items that do not use ANY of the specified trustees
            in their permissions. If the list of trustees is empty or
            <c>null</c>, the condition is not applied.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemsFilterData.IncludePathColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:LocationInfo.Path" />  or XML attribute <c>Path</c> is set in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemsFilterData.IncludeRelativeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:LocationInfo.WebDavUrl" />  or XML attribute <c>URL</c> is set in the returned list
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            When the property IncludeRelativeWebDavUrlColumn is set to <c>true</c>, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemsFilterData.IncludeTrustees">
            <summary>
            Gets or sets the <see cref="P:IncludeTrustees" /> condition to return only
            organizational items that use ALL the specified trustees in their
            permissions.
            </summary>
            <remarks>Collection of Users or Groups. If specified, only returns
            Organizational Items that use ALL the specified trustees in their
            permissions.  If the list of trustees is empty or <c>null</c>, the
            condition is not applied.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemsFilterData.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:ItemType" /> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:ItemType" /> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TaxonomiesFilterData">
            <summary>
            Represents the data class of a Filter for a list of taxonomies.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TaxonomiesFilterData.ForItems">
            <summary>
            Gets or sets a condition to return taxonomies which can be used to classify the given items.
            </summary>
            <value>A collection of Repository Local Objects or <c>null</c> if the condition is not specified.</value>
            <remarks>It is not possible to classify a schema.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TaxonomiesFilterData.UseForNavigation">
            <summary>
            Gets or sets a condition on the <see cref="P:CategoryData.UseForNavigation" /> property.
            </summary>
            <value>
            If this condition is <c>null</c> (e.g. not applied), all categories
            regardless to the <c>UseForNavigation</c> property are included into result.
            </value>
            <remarks>
            This condition maps to the <c>UseForNavigation</c> condition in the <c>FilterData.Conditions</c> collection.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TaxonomiesOwlFilterData">
            <summary>
            Represents the data class of a Filter for a list of classified items in OWL format.
            </summary>
            <remarks>
            This filter can't be used in <c>ICoreService2012.GetList()</c> method.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TaxonomiesOwlFilterData.RootCategories">
            <summary>
            Gets or sets a value indicating whether to limit the result to the given Categories which are defined as a root of a taxonomy.
            </summary>
            <value>A collection of Repository Local Objects or <c>null</c> if the condition is not specified.</value>
            <remarks>It is not possible to classify a schema.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PathToCategoryFilterData">
            <summary>
            Represents the data class of a Filter for "GetListPathToCategory" list.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.GroupMembersFilterData">
            <summary>
            Represents the data class of a Filter for a list of trustees in a Group.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupMembersFilterData.ContextRepository">
            <summary>
            Gets or sets the <see cref="T:ContentManagement.RepositoryData" /> to filter on. Only trustees which are in the scope of this repository will be returned.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupMembersFilterData.ExcludeDisabledTrustees">
            <summary>
            Gets or sets a value indicating whether disabled <see cref="T:TrusteeData" /> should be exluded from the result list.
            </summary>
            <remarks>
            Default value is <c>false</c> (all trustees will be returned).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupMembersFilterData.Recursive">
            <summary>
            Gets or sets whether to include trustees from child groups (recursively).
            </summary>
            <remarks>
            <para>
            Default value is <c>false</c>. In this case only direct members of the group will be returned. The <see cref="P:TrusteeData.GroupMemberships" /> and <see cref="P:Data.Scope" /> of the group members will be loaded.
            </para>
            <para>
            If set to <c>true</c>, following items will be returned:
            <list type="bullet">
            <item>Subject group.</item>
            <item>Nested groups sorted by nesting level (direct members first, groups that are members of direct members, etc.) Secondary sorting (of groups on one level) will be alphabetical.</item>
            <item>Users from all groups, sorted alphabetically.</item>
            </list>
            </para>
            <para>
            If set to <c>true</c> then <see cref="P:TrusteeData.GroupMemberships" /> and <see cref="P:Data.Scope" /> will not be loaded.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.OrganizationalItemAncestorsFilterData">
            <summary>
            Represents the data of a Filter for a list of Organizational Items which are the ancestors of a specified Repository Local Object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.OrganizationalItemAncestorsFilterData.IncludePublishLocationColumns">
            <summary>
            Gets or sets a value indicating whether PublishLocation Info columns are included in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            This property determines the inclusion of the <see cref="T:mmunicationManagement.PublishLocationInfo" /> or the following XML attribute
            <c>PublishLocationPath</c> and <c>PublishLocationUrl</c> while getting the XML list
            or preloads <c>PublishLocationPath</c>, <c>PublishLocationUrl</c> and <c>PublishPath</c> of the Data Object while getting the Data Object list.
            Supported CoreService Endpoint : CoreService 2011
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BluePrintChainFilterData">
            <summary>
            Represents the data of a BluePrint Chain Filter.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintChainFilterData.Direction">
            <summary>
            Gets or sets the direction of the BluePrint item chain (i.e. up to the top-level parent item, or down to the bottom-level child item).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintChainFilterData.IncludeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:LocationInfo.WebDavUrl" /> or XML attribute <c>URL</c> is set in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            When the property IncludeWebDavUrlColumn is set to <c>true</c>, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ContainingBundlesFilterData">
            <summary>
            Represents the data of a filter that can be used to get a list of bundles that are using specific item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ContainingBundlesFilterData.IncludeBundleTypeColumns">
            <summary>
            Gets or sets a value indicating whether information about Bundle Type (Bundle Type Id and Title, Bundle Process Definition Id and Title) should be included into result list.
            </summary>
            <value>The default value is <c>false</c>. When the property <c>IncludeBundleTypeColumns</c> is set to <c>true</c>, list will contain Bundle Type Id and Title, Bundle Process Definition Id and Title. </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ContainingBundlesFilterData.IncludeDescriptionColumn">
            <summary>
            Gets or sets a value indicating whether the property <c>Description</c> or XML attribute <c>Description</c> is set in the returned list.
            </summary>
            <value>The default value is <c>false</c>. When the property <c>IncludeDescriptionColumn</c> is set to <c>true</c>, lists to which this filter is applied will return the Description of the bundles containing referenced item.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ContainingBundlesFilterData.OnlySpecifiedBluePrintVariant">
            <summary>
            Gets or sets a value indicating whether bundles from any publication will be returned or only those where current BluePrint variant of an item exists.
            </summary>
            <value>The default value is <c>false</c>. When the property <c>OnlySpecifiedBluePrintVariant</c> is set to <c>true</c>, list will contain only Bundles from Publications where current BluePrint variant
            of an item exists. E.g. BluePrint subtree starting from items Owning Publication and down all publications where that item variant is shared.
            Otherwise (by default), any Bundles in BluePrint with any BluePrint variant of an item will be returned.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ContainingBundlesFilterData.SuppressLocalCopies">
            <summary>
            Gets or sets a value indicating whether local copies of bundles containing referenced item should be included into result list.
            </summary>
            <value>The default value is <c>false</c>. When the property <c>SuppressLocalCopies</c> is set to <c>true</c>, list will contain only one instance of each bundle from the Publication where bundle was created.
            Otherwise (by default), local items and local copies of containing bundles will be included.</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ComponentTemplatesFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of Component Templates.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplatesFilterData.AllowedOnPage">
            <summary>
            Gets or sets condition of component template is allowed on page.
            </summary>
            <value>
            <c>bool</c> value indicating whether component template may be allowed on a page.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ComponentTemplatesFilterData.RelatedTo">
            <summary>
            Gets or sets the related to list of repository local objects.
            </summary>
            <value>
            The list of related repository local objects.
            </value>
            <remarks>Only <see cref="T:ntentManagement.ComponentData" /> and <see cref="T:ntentManagement.SchemaData" /> are supported items.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BundleSchemasFilterData">
            <summary>
            Represents the data class of a Filter for a list of bundle schemas for the given repository.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BundleSchemasFilterData.OnlyApplicableBundles">
            <summary>
            Gets or sets a value indicating which bundle schemas will be returned.
            </summary>
            <remarks>
            If <c>false</c> or input Repository has no associated <see cref="T:mmunicationManagement.BusinessProcessTypeData" />, all Bundle Schemas in Repository will be returned.
            Otherwise, Bundle Schemas applicable for Business Process Type associated with input Repository and Bundle Schemas which are not used in any Business Process Types will be returned.
            Only Bundle Schemas on which the user has read permissions are available.
            </remarks>
            <value>
            The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrusteesFilterData.IsPredefined">
            <summary>
            Gets or sets a value filtering predefined trustees. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>
            If the value is set to <c>true</c>, only predefined trustees will be included in the result.
            If the value is set to <c>false</c>, all trustees except predefined are returned.
            If the value is not specified, all trustees are returned.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrusteesFilterData.ItemType">
            <summary>
            Gets or sets the <see cref="P:ItemType" /> to filter on.
            </summary>
            <value>The value of the condition named <see cref="P:ItemType" /> or <c>null</c> if this condition is not specified in the filter.</value>
            <remarks>This property has been deprecated. Filter will determine the <see cref="P:ItemType" /> base on its type.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrusteesFilterData.Name">
            <summary>
            Gets or sets name of trustee to search for. When <c>null</c> or empty string is specified, the condition is not applied.
            </summary>
            <remarks><see cref="P:NameSearchMode" /> can be used to set the search mode.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TrusteesFilterData.NameSearchMode">
            <summary>
            Gets or sets search mode for trustee name. When <see cref="P:Name" /> is not specified setting this property has no effect.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.UsersFilterData">
            <summary>
            Represents the data of a Filter that can be used for a list of Users.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UsersFilterData.ExcludeDisabledUsers">
            <summary>
            Gets or sets a value indicating whether disabled users should be exluded from the list.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.GroupsFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of Groups.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.GroupsFilterData.ForRepository">
            <summary>
            Gets or sets the <see cref="P:ForRepository" /> condition to constrain the items returned by the list to this value.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoriesFilterData.IncludeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:LocationInfo.WebDavUrl" /> or XML attribute <c>URL</c> is set in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            When the property IncludeWebDavUrlColumn is set to <c>true</c>, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoriesFilterData.IncludeRootOrganizationalItemsColumns">
            <summary>
            Gets or sets a value indicating whether to include the repository root organizational items (root folder and structure group) in the list.
            </summary>
            <value><c>true</c> to include root item links; otherwise, <c>false</c>.</value>
            <remarks>This property is introduced in version 7.0</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoriesFilterData.IncludeAllPublicationsForGroupManagement">
            <summary>
            Gets or sets mode that defines how to resolve result list of the publications for user with GroupManagement Privilege.
            </summary>
            <remarks>
            <para>
            When property value is set to <c>true</c> all publications for user with GroupManagement Privilege will be included to result list;
            otherwise, only repositories user has access to will be returned.
            </para>
            <para>
            Default value is <c>false</c>
            </para>
            <para>
            This property is introduced in version 8.5
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublicationsFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of Repositories.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationsFilterData.PublicationTypeName">
            <summary>
            Only get publications with the specified type. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>When specified, the results are constrained by the specified publication type.
            For example if the value is set to "Web", only publications with such type will be included in the result.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.MultimediaTypesFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of Multimedia Types.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TargetTypesFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of Target Types.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.TargetTypesFilterData.ForRepository">
            <summary>
            Gets or sets the <see cref="P:ForRepository" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            <para>
            For old-style target types result will be restricted by target types which are allowed in specified repository.
            </para>
            <para>
            For new-style target types result will be restricted by target types which are created in the context of the associated
            <see cref="P:ntentManagement.RepositoryData.BusinessProcessType" /> within specified repository.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublicationTargetsFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of Publication Targets.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublicationTargetsFilterData.IncludeEmulated">
            <summary>
            Gets or sets a value indicating whether emulated <see cref="T:PublicationTargetData" /> must be returned.
            </summary>
            <remarks>
            <para>
            By default, emulated <see cref="T:PublicationTargetData" /> are not returned.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ApprovalStatusesFilterData">
            <summary>
            Represents the data of a Filter for a list of Approval Status items.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessDefinitionsFilterData">
            <summary>
            Represents the data of a Filter for a list of Process Definition items.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionsFilterData.ContextRepository">
            <summary>
            Gets or sets the <see cref="P:ContextRepository" /> to filter on.
            </summary>
            <remarks>Limits the returned result to ProcessDefinitions from specified Publication.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.UserWorkItemsFilterData">
            <summary>
            Represents the data of a Filter for a list of Work Items for current user.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserWorkItemsFilterData.ActivityState">
            <summary>
            Gets or sets the <see cref="P:ActivityState" /> condition that will constrain Work Items to those that are in Activity State being set.
            </summary>
            <value>A value from the <see cref="T:Workflow.ActivityState" /> enumeration or <c>null</c> if the condition is not specified.</value>
            <remarks>
            When specified, the results are constrained to Activity Instances either assigned to or performed by the current user.
            If set to <see cref="F:Workflow.ActivityState.Assigned" /> then returns Work Items assigned to current user.
            If set to <see cref="F:Workflow.ActivityState.Started" /> then returns Work Items that are in-progress by the current user.
            If set to <see cref="F:Workflow.ActivityState.Suspended" /> then returns Work Items suspended during execution
            and the current user is the last performer of those Work Items.
            If set to <see cref="F:Workflow.ActivityState.Failed" /> then returns failed Work Items that were performed by the current user.
            If set to <see cref="F:Workflow.ActivityState.Finished" /> then returns Work Items that are finished by the current user or were assigned to current user.
            If set to <see cref="F:Workflow.ActivityState.WaitingForWorkflowAgent" /> then returns Work Items waiting for execution by Workflow Agent.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserWorkItemsFilterData.ContextRepository">
            <summary>
            Gets or sets a condition on the owning Repository.
            </summary>
            <value>A link to the owning Repository or <c>null</c> if the condition is not specified.</value>
            <remarks>
            When specified, the results are constraint by the specified <see cref="P:ContextRepository" /> value, so only items in that <c>Repository</c> will be included in the result.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.UserWorkItemsFilterData.Subject">
            <summary>
            Gets or sets a condition on the Workflow Item.
            </summary>
            <value>The TCM URIs of the workflow item or <c>null</c> if the condition is not specified.</value>
            <remarks>
            When specified, the result will include only Work Items representing specific workflow item.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationsFilterData">
            <summary>
            Represents the data of a Filter for a list of Process Definition Associations.
            </summary>
            <remarks>
            An unfiltered list can only be obtained by users with System Administration privileges.
            If the list is filtered on Context Repository, it can also be obtained by users that have Workflow Management rights on that Repository.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationsFilterData.ContextRepository">
            <summary>
            Gets or sets a condition on the Context Repository; only associations that exist in this Repository will be returned.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessDefinitionAssociationsFilterData.ProcessDefinition">
            <summary>
            Gets or sets a condition on the Process Definition; only associations with this Process Definition will be returned.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessesFilterData">
            <summary>
            Represents the data of a Filter for a list of Processes.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.ForPerformer">
            <summary>
            Gets or sets the <see cref="P:ForPerformer" /> condition to constrain the items returned by the list to this value.
            </summary>
            <value>The value constrains the items returned by the list to only processes which are assigned to the specified user.</value>
            <remarks>
            <para>
            For a System Administrator, this property allows to filter results based on a specific performer or return unfiltered results.
            For a user with Workflow Management Rights in one or more Publications - only the Processes from those Publications are returned,
            filtered based on a specific performer being set. For a user that is not a System Administrator and does not have Workflow Management
            Rights in any Publication, this property can be set only to that user.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.ForProcessDefinition">
            <summary>
            Gets or sets the <see cref="P:ForProcessDefinition" /> condition to constrain the items returned by the list to this value.
            </summary>
            <value>The value constrains the items returned by the list to only processes with the specified Process Definition.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.ForRepository">
            <summary>
            Gets or sets the <see cref="P:ForRepository" /> condition to constrain the items returned by the list to this value.
            </summary>
            <value>The value constrains the items returned by the list to only processes from the specified Repository.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.ProcessType">
            <summary>
            Gets or sets the <see cref="P:ProcessType" /> condition to constrain the items returned by the list to this value.
            Using this condition it is possible to return only Process Instance objects, only Process History objects, or both, which is the default.
            </summary>
            <value>The value constrains the items returned by the list to only processes of the specified type.</value>
            <remarks>
            <para>
            ProcessType currently can affect how results are filtered based on security when the calling user
            is not a System Administrator and does not have Workflow Management Rights in any Publication:
            <ul>
            <li>When the calling user is a System Administrator, no security filtering is applied.</li>
            <li>When the calling user has Workflow Management Rights in one or more Publications, only the Processes that belong
            to those Publications are returned.</li>
            <li>When the calling user doesn't have Workflow Management Rights in any Publication, only the Processes that assigned to that user will be returned.</li>
            </ul>
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.ForSubject">
            <summary>
            Gets or sets condition to constrain the items returned by the list to this subject.
            </summary>
            <value>The value constrains the items returned by the list to only processes based on this subject.</value>
            <remarks>
            Any version in subject will be ignored. If any version of the item is in any Process Instance/History it will be included in the result.
            The subject context publication is ignored, any processes (depending on other filter criteria) having shared/localized version of the subject are returned.
            The <see cref="P:Data.Subjects" /> might not contain this subject, as the <see cref="P:Data.Subjects" /> returns the work items from the last (active) activity.
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.IncludeWorkflowTypeColumns">
            <summary>
            Gets or sets a value indicating whether information about Workflow Type (Workflow Type Id and Title) should be included into result list.
            </summary>
            <value>The default value is <c>false</c>. When the property <c>IncludeWorkflowTypeColumns</c> is set to <c>true</c>, list will contain Workflow Type Id and Title. </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.LegacyMode">
            <summary>
            Gets or sets a value indicating whether returned list in the new format (supporting multi-item workflows) or in the legacy format (single-item workflow).
            </summary>
            <value>
            If set to <c>true</c> returns list in the new format (supporting multi-item workflows).
            If set to <c>false</c> returns list in the legacy format (single-item workflow).</value>
            <remarks>If set to <c>true</c> Processes without any Subject will not be returned. Legacy format list does not support Multi-Item Workflow or Workflow without any subject.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.WorkflowType">
            <summary>
            Gets or sets the condition to constrain the items returned by the list to specific Workflow Type.
            Using this condition it is possible to return only Process objects of specific type (such as Task). Filter is not applied by default.
            </summary>
            <value>The value constrains the items returned by the list to only processes of the specified workflow type.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ProcessesFilterData.IncludeSubjectsColumn">
            <summary>
            Gets or sets a value indicating whether subjects should be included into result list.
            </summary>
            <value>The default value is <c>false</c>. When the property <c>IncludeSubjectsColumn</c> is set to <c>true</c>, list will contain <see cref="P:Data.Subjects" />  list. </value>
            <remarks>This property is introduced in version 7.1</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ActivityInstancesFilterData">
            <summary>
            Represents the data of a Filter for a list of Activity Instances.
            </summary>
            <remarks>
            The following properties/attribute will be loaded/set on the data object list or Xml List depending on <see cref="T:ListBaseColumns" /> and other filters:
            <list type="bullet">
            <item>Id</item>
            <item>Title</item>
            <item>ContextRepository</item>
            <item>Process</item>
            <item>ActivityDefinition</item>
            <item>Assignee</item>
            <item>Owner</item>
            <item>StartDate</item>
            <item>ActivityState</item>
            <item>CreationDate</item>
            <item>SuspendDate</item>
            <item>FinishDate</item>
            <item>AllowedActions</item>
            <item>WorkItem.Id</item>
            <item>WorkItem.Subject</item>
            <item>WorkItem.Owner</item>
            <item>WorkItem.SubjectOwningRepository</item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstancesFilterData.ActivityState">
            <summary>
            Gets or sets the Activity State to filter on.
            Multiple Activity State can be combined.
            </summary>
            <remarks>Limits the returned result to <see cref="P:Data.ActivityState" />.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstancesFilterData.ContextRepository">
            <summary>
            Gets or sets the Context Repository to filter on.
            </summary>
            <remarks>Limits the returned result to specified Context Repository.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstancesFilterData.ForAllUsers">
            <summary>
            Gets or sets a value indicating whether to return Activity Instances for Current User or All User
            </summary>
            <remarks>
            When the ForAllUsers filter property is set to false (the default value), the results will be filtered on Assignee or Owner depending on the activity instance state:
            Activity Instance(s) in Assigned State are returned if they are assigned to the Current User or any groups of the Current User.
            Activity Instances in other Activity State(s) are returned if they are owned by the Current User
            <para>
            When the ForAllUsers filter property is set to true, the results are filtered by security instead. Only the Activity Instances on which the current user has Workflow Management rights (or system administration privileges) are returned.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstancesFilterData.IncludeAdditionalDateColumns">
            <summary>
            Gets or sets a value indicating whether the SuspendDate, FinishDate, DueDate properties or XML attributes is set in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            When the property IncludeAdditionalDateColumns is set to <c>true</c>, lists to which this filter is applied will return the SuspendDate, FinishDate and DueDate of the Activity Instances.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstancesFilterData.IncludeWorkItems">
            <summary>
            Gets or sets a value indicating whether the WorkItems property or XML element of the Activity Instance is set in the returned list.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstancesFilterData.ProcessDefinition">
            <summary>
            Gets or sets the Process Definition to filter on.
            </summary>
            <remarks>Limits the returned result to ProcessDefinitions.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityInstancesFilterData.WorkflowType">
            <summary>
            Gets or sets the Workflow Type to filter on.
            </summary>
            <remarks>Limits the returned result to Process Instance Workflow Type.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BatchesFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of Batches.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.WorkflowTypesFilterData">
            <summary>
            A Filter that can be used to constrain a list of configured Workflow Types.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of repository-local objects (e.g. get items for the given set of item ids, all checked-out items).
            </summary>
            <remarks>
            As per current implementation if <see cref="P:ItemIds" /> is set then it returns those items constrained by the filter.
            Otherwise it returns items that are checked out, either by the current user if <see cref="P:LockUser" /> is not set, or
            by the user specified in <see cref="P:LockUser" /> condition, constrained by the rest of the filter condition.
            <para>
            There is a legacy issue related to the fact that SchemaPurpose, ComponentType and TemplateType conditions map together to the same, one legacy filter condition called SubType.
            Use these 3 conditions separately from each other so do not restrict by SchemaPurposes, ComponentTypes and TemplateTypeIds conditions together.
            Also always restrict by ItemType in additon to each of these conditions. Otherwise, the results can contain unexpected items types.
            When setting the SchemaPurposes condition, also set the ItemTypes to <see cref="F:ItemType.Schema" />.
            When setting the ComponentTypes condition, also set the ItemTypes to <see cref="F:ItemType.Component" />.
            When setting the TemplateTypeIds condition, also set the ItemTypes to one or more templates (for example <see cref="F:ItemType.ComponentTemplate" /> and <see cref="F:ItemType.PageTemplate" />).
            </para>
            <para>
            If the <see cref="P:IncludeAllowedActionsColumns" /> condition is set and the requested items are in workflow,
            the allowed actions of the associated activity instance will also be returned (allowed to start, finish, suspend and restart).
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.ComponentTypes">
            <summary>
            Gets or sets a condition on the ComponentTypes.
            </summary>
            <value>A collection of component type values or <c>null</c> if the condition is not specified.</value>
            <remarks>
            Setting this value sets the <see cref="P:TemplateTypeIds" /> to <c>null</c>.
            When setting this condition, do not set SchemaPurposes and TemplateTypeIds conditions.
            Also always restrict by ItemType in additon: set the ItemTypes to <see cref="F:ItemType.Component" />. Otherwise, the results can contain unexpected items types.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.IncludeLockUserColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:LockUser" /> or XML attributes <c>CheckOutUser</c> and <c>Trustee</c> are set in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            This property does not have any effect when <c>ItemIds</c> condition is set.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.IncludeRelativeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:LocationInfo.WebDavUrl" />  or XML attribute <c>URL</c> is set in the returned list
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            When the property IncludeRelativeWebDavUrlColumn is set to <c>true</c>, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.ItemTypes">
            <summary>
            Gets or sets the item types to filter on.
            </summary>
            <value>
            <para>A set of values from the <see cref="T:ItemType" /> enumeration or <c>null</c> if no filtering on item type should occur.</para>
            <para>Do not combine <see cref="T:ItemType" /> values using a bitwise or operator, use multiple separate values instead.</para>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.LockFilter">
            <summary>
            Gets or sets a bitmask to apply to the versioned items' <see cref="T:ContentManagement.LockType" />. Must be used in combination with <see cref="P:LockResult" />.
            </summary>
            <value>Value or combination of values from <see cref="T:ContentManagement.LockType" /> or
            <c>null</c> if the condition is not specified.</value>
            <remarks>
            VersionedItems can have a combination of <seealso cref="T:ContentManagement.LockType" /> for example InWorkflow and CheckedOut.
            The <see cref="P:LockFilter" /> will do a bit mask on the <see cref="T:ContentManagement.LockType" /> of the <see cref="T:VersionedItemData" /> and will compare the result with the <see cref="P:LockResult" />.
            This property does not filter out organizational items which also can be locked.
            </remarks>
            <example>
            To search for all CheckedOut items that are not in Workflow set the <see cref="P:LockFilter" /> to CheckedOut and InWorkflow and the <see cref="P:LockResult" /> to CheckedOut.
            </example>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.LockResult">
            <summary>
            Gets or sets a value specifying if versioned items with the given <see cref="T:ContentManagement.LockType" /> should be returned.
            </summary>
            <value>Value or combination of values from <see cref="T:ContentManagement.LockType" /> or
            <c>null</c> if the condition is not specified.</value>
            <remarks>
            VersionedItems can have a combination of <seealso cref="T:ContentManagement.LockType" /> for example InWorkflow and CheckedOut.
            The <see cref="P:LockFilter" /> will do a bitmask on the <see cref="T:ContentManagement.LockType" /> of the <see cref="T:VersionedItemData" /> and will compare the result with the <see cref="P:LockResult" /> property.
            This property does not filter out organizational items which also can be locked.
            </remarks>
            <example>
            To search for all CheckedOut items that are not in Workflow set the <see cref="P:LockFilter" /> to CheckedOut and InWorkflow and the <see cref="P:LockResult" /> to CheckedOut.
            </example>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.LockUser">
            <summary>
            Gets or sets a condition on the User who checked-out the versioned item.
            </summary>
            <value>
            A link to a <c>User</c> object to select all items checked-out by this user, if specified. If not specified or NullLink is used, current session's user will be used to determine accessibility to an item.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.SchemaPurposes">
            <summary>
            Gets or sets a condition on the SchemaPurposes.
            </summary>
            <value>A collection of schema purpose values or <c>null</c> if the
            condition is not specified.</value>
            <remarks>
            When setting this condition, do not set ComponentTypes and TemplateTypeIds conditions.
            Also always restrict by ItemType in additon: set the ItemTypes to <see cref="F:ItemType.Schema" />. Otherwise, the results can contain unexpected items types.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.TemplateTypeIds">
            <summary>
            Gets or sets the <see cref="P:TemplateTypeIds" /> condition to limit the
            list to items with given template type IDs.
            </summary>
            <value>A collection of template types IDs or <c>null</c> if the condition is not specified.</value>
            <remarks>
            Setting this value sets the <see cref="P:ComponentTypes" /> to <c>null</c>.
            When setting this condition, do not set SchemaPurposes and ComponentTypes conditions together.
            Also always restrict by ItemType in additon: set the ItemTypes to one or more templates (for example <see cref="F:ItemType.ComponentTemplate" /> and <see cref="F:ItemType.PageTemplate" />). Otherwise, the results can contain unexpected items types.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.BasedOnSchemas">
            <summary>
            Gets or sets a condition to return only items that are using the given schemas.
            </summary>
            <remarks>
            <para>
            If the list of schemas is <c>null</c>, the condition is not applied.
            This condition should be used in conjunction with <see cref="P:ItemTypes" />.
            Setting the condition to an empty list of schemas will return an empty list.
            </para>
            <para>
            This property does not have any effect when <c>ItemIds</c> condition is not set.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.IncludeLocationInfoColumns">
            <summary>
            Gets or sets a value indicating whether Location Info columns is included in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            This property is only valid in combination with <see cref="P:ItemIds" /> property.
            This property determines the inclusion of the <see cref="T:LocationInfo" /> or the following XML attribute
            <c>OrgItemId</c>, <c>OrgItemTitle</c>, <c>Path</c> and <c>URL</c> while getting the XML list.
            Supported CoreService Endpoint : CoreService 2011
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.ItemIds">
            <summary>
            Gets or sets the <see cref="P:ItemIds" /> condition to limit the result to given IDs.
            </summary>
            <value>A collection of TcmUri and/or WebDavUrls or <c>null</c> if the condition is not specified.</value>
            <remarks>
            <para>
            If the specified TcmUri are versionless, the result will contain the latest versions of the requested items.
            It is possible to request specific versions of items (even multiple versions of the same item), if the TcmUri contains version part.
            To get currently checked-out/locked version, the version 0 must be explicitly requested.
            </para>
            <para>
            Supported CoreService Endpoint : CoreService 2011
            </para>
            </remarks>
            <seealso cref="P:UseDynamicVersion" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.UseDynamicVersion">
            <summary>
            Gets or sets a value indicating whether to include dynamic version of an item if accessible.
            </summary>
            <value>A boolean value to indicate whether to use latest dynamic version or not.</value>
            <remarks>
            This property is used to enable the user to see the dynamic version (v0) of an item provided some conditions are satisfied.
            <para>
            When UseDynamicVersion is set to <c>True</c> and item is checked-out, the result will contain dynamic version if
            user has rights to read this version (for example, this item is checked-out by this user, or assigned to user, or user is a member of the System Administration group or
            AllowReadDynamicContent option is set to <c>True</c> in security configuration).
            </para>
            <para>
            This option is only applied to versionless <see cref="T:TcmUri" /> in <see cref="P:ItemIds" /> list.
            </para>
            <para>
            Default value is false.
            </para>
            </remarks>
            <seealso cref="P:ItemIds" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.IncludeDescriptionColumn">
            <summary>
            Gets or sets a value indicating whether to include the item's description in the list.
            </summary>
            <value><c>true</c> to include the Description column; otherwise, <c>false</c>.</value>
            <remarks>
            <para>
            This property is introduced in version 7.0
            </para>
            <para>
            This property does not have any effect when <c>ItemIds</c> condition is not set.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectsFilterData.IncludeDynamicVersionInfoColumns">
            <summary>
            Gets or sets a value indicating whether to include dynamic version info of the item in the list.
            </summary>
            <value><c>true</c> to include the dynamic version info; otherwise, <c>false</c>.</value>
            <remarks>
            This property is introduced in version 7.0.
            <para>
            This property determines the pre-loading of the dynamic version properties or the following XML attributes
            <c>DynamicVersionRevisorID</c>, <c>DynamicVersionRevisorTitle</c>, <c>DynamicVersionRevisorDescription</c>, <c>DynamicVersionRevision</c> and <c>DynamicVersionRevisionDate</c> while getting the XML list.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BluePrintParentsFilterData">
            <summary>
            Represents the data object of a filter that can be used for a list of valid BluePrint parents.
            </summary>
            <remarks>
            The BluePrint parents list will always contain only those parent repositories where the user has publication management rights.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintParentsFilterData.CurrentParents">
            <summary>
            Gets or sets the <see cref="P:CurrentParents" /> condition to skip specific parents in the result.
            </summary>
            <remarks>
            If set, all Publications in this collection must belong to the same BluePrint tree.
            The returned list will contain only Publications which belong to that BluePrint tree, and exclude Publications from this collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintParentsFilterData.ForRepository">
            <summary>
            Gets or sets the <see cref="P:ForRepository" /> condition to get the list of valid BluePrint parent Publications of that Publication.
            </summary>
            <remarks>
            The returned list will contain Publications which are possible to be used as new parents for existing Publication.
            Publications from outside of the current BluePrint tree and current parent Publications will be flitered out.
            To get a list of valid BluePrint parent Publications for a new Publication, set this value to <c>null</c>.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BluePrintNodesFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of BluePrint nodes.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintNodesFilterData.ForItem">
            <summary>
            Gets or sets a condition that specifies for which Item to retrieve all BluePrint nodes.
            </summary>
            <remarks>
            If specified, the result contains all BluePrint nodes for the item. A BluePrint node represents the specified
            Item in the context of a Repository in the BluePrint hierarchy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintNodesFilterData.ForRepository">
            <summary>
            Gets or sets a condition that specifies for which Repository to retrieve all BluePrint nodes. When <c>null</c> is specified, the condition is not applied.
            </summary>
            <remarks>
            When specified, the result contains all BluePrint nodes for the repository. A BluePrint node represents a specific
            Repository in the hierarchy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BluePrintNodesFilterData.IncludeWebDavUrlColumn">
            <summary>
            Gets or sets a value indicating whether the property <see cref="P:LocationInfo.WebDavUrl" /> or XML attribute <c>URL</c> is set in the returned list.
            </summary>
            <value>The default value is <c>false</c>.</value>
            <remarks>
            When the property IncludeWebDavUrlColumn is set to <c>true</c>, lists to which this filter is applied will return the WebDAV URL relative to its container.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BluePrintFilterData">
            <summary>
            Represents the data of a filter that can be used for a list of BluePrint nodes (obsolete).
            </summary>
            <remarks>
            This is the old filter class name, which is not consistent with the list method name. It is kept for backward compatibility only.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData">
            <summary>
            Represents the data of a Filter that can be used for a list of PublishTransactions.
            </summary>
            <remarks>
            <para>
            User that has <see cref="F:Security.Rights.PublishManagement" /> right in any publication or user with Publish Transaction Management Privilege
            or System Administrator Privilege can see publish transactions from all publications.
            </para>
            </remarks>
            <exception cref="T:PermissionDeniedException">If user does not have System Administrator Privilege or Publish Transaction Management Privilege
            and does not have <see cref="F:Security.Rights.PublishManagement" /> rights in any publication.</exception>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.EndDate">
            <summary>
            Gets or sets the <see cref="P:EndDate" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            If set, the filtered list will only contain Publish Transactions that were initiated or deployed or changed state before the specified date.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.ForRepository">
            <summary>
            Gets or sets the <see cref="P:ForRepository" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            When specified gets Publish Transactions that have the specified Repository in <see cref="P:ContextData.Publication" /> property of <see cref="T:PublishContextData" />.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.Priority">
            <summary>
            Gets or sets a condition to include only Publish Transactions that have only the specified Priority.
            </summary>
            <remarks>
            To get Publish Transactions in any priority set this property value to <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.PublicationTarget">
            <summary>
            Gets or sets the <see cref="P:PublicationTarget" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            When specified gets only those Publish Transactions published to specified Publication Target.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.PublishTransactionState">
            <summary>
            Gets or sets a condition to include only Publish Transactions that have the specified PublishTransactionState.
            </summary>
            <remarks>
            To get Publish Transactions in any state set this property value to <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.PublishedBy">
            <summary>
            Gets or sets the <see cref="P:PublishedBy" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            If set, the filtered list will only contain Publish Transactions that were initiated by the specified user.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.StartDate">
            <summary>
            Gets or sets the <see cref="P:StartDate" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            If set, the filtered list will only contain Publish Transactions that were initiated or deployed or changed state on or after the specified date.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.IsCompleted">
            <summary>
            Gets or sets the IsCompleted condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            <para>
            This property is introduced in version 8.0.
            </para>
            <para>
            When specified, gets only those Publish Transactions which are in one of the final states: <see cref="F:Publishing.PublishTransactionState.Success" />, <see cref="F:Publishing.PublishTransactionState.Failed" />,
            <see cref="F:Publishing.PublishTransactionState.Warning" />, <see cref="F:Publishing.PublishTransactionState.Undone" />, <see cref="F:Publishing.PublishTransactionState.UndoFailed" />.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.PublisherHost">
            <summary>
            Gets or sets the Publisher Host condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            <para>
            This property is introduced in version 8.0.
            </para>
            <para>
            When specified, gets only those Publish Transactions whose handling host name exactly matches this value and must be an unqualified (domainless) server name.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishTransactionsFilterData.TargetType">
            <summary>
            Gets or sets the <see cref="P:TargetType" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            When specified gets only those Publish Transactions published to specified Target Type.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PublishedItemsFilterData">
            <summary>
            Represents the data of a Filter that can be used for a list of published items.
            </summary>
            <remarks>
            List column Filter Default and Extended have no impact.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishedItemsFilterData.ForPublication">
            <summary>
            Gets or sets the <see cref="P:ForPublication" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            When specified, the returned items are only published from the specified Publication.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishedItemsFilterData.IncludePathColumn">
            <summary>
            Gets or sets a value indicating whether to include the Path in the list.
            </summary>
            <value><c>true</c> to include Path column; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishedItemsFilterData.IncludeTemplates">
            <summary>
            Gets or sets a value indicating whether to include the Templates in the list.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishedItemsFilterData.PublicationTarget">
            <summary>
            Gets or sets the <see cref="P:PublicationTarget" /> condition to constrain the items returned by the list to this value.
            </summary>
            <remarks>
            When specified, the returned items are only published to the specified Publication Target. In case when Publication Target has
            multiple Target Types, results may further be restricted using <see cref="P:TargetType" /> property.
            </remarks>
            <seealso cref="P:TargetType" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishedItemsFilterData.ResultLimit">
            <summary>
            Gets or sets a value limiting the number of items returned in the list.
            </summary>
            <value>
            Positive value or <c>null</c> if the condition is not specified.
            </value>
            <remarks>
            Setting the value to zero will return an empty list.
            If not set or set to null the result limit will be 100000.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishedItemsFilterData.TargetType">
            <summary>
            Gets or sets the <see cref="P:TargetType" /> condition to constrain items returned by the list to this value.
            </summary>
            <remarks>
            <para>
            When specified, the result list will contain only items which are published to the specified <see cref="T:CommunicationManagement.TargetTypeData" />.
            </para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PublishedItemsFilterData.Purpose">
            <summary>
            Gets or sets the <see cref="P:Purpose" /> condition to constrain items returned by the list to this value.
            </summary>
            <remarks>
            <para>
            When specified, the result list will contain only items which are published to the <see cref="T:CommunicationManagement.TargetTypeData" /> with specified purpose.
            </para>
            <para>
            The same purpose might be associated with multiple <see cref="T:CommunicationManagement.TargetTypeData" /> in context of different <see cref="T:BusinessProcessTypeData" />.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.VersionCondition">
            <summary>
            Specifies which versions to include in the search filter.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.VersionCondition.AllVersions">
            <summary>
            Include all versions in the search filter.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.VersionCondition.OnlyLatestVersions">
            <summary>
            Include only the latest version in the search filter.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.VersionCondition.OnlyLatestAndCheckedOutVersions">
            <summary>
            Include only latest versions and checked out version in the search filter.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BluePrintChainDirection">
            <summary>
            Defines the direction of a to-be-retrieved blueprint item chain.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.BluePrintChainDirection.Up">
            <summary>Blueprint chain goes up to the top-level parent item.</summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.BluePrintChainDirection.Down">
            <summary>Blueprint chain goes down to the bottom-level child item.</summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.StringSearchMode">
            <summary>
            Specifies search mode of a string.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.StringSearchMode.Contains">
            <summary>
            Matches the given substring in any location.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.StringSearchMode.StartsWith">
            <summary>
            Matches the given string at the start.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.StringSearchMode.EndsWith">
            <summary>
            Matches the given string at the end.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.StringSearchMode.ExactMatch">
            <summary>
            Matches the given string exactly.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ProcessType">
            <summary>
            Defines the type of a Process
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessType.Any">
            <summary>
            Includes both ProcessInstance and ProcessHistory.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessType.Active">
            <summary>
            Includes ProcessInstance only.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessType.Historical">
            <summary>
            Includes ProcessHistory only.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.ProcessType.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ClassificationInfoData">
            <summary>
            Contains the result of a Classification operation (classify, unclassify, reclassify) and the Item that was involved in it.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationInfoData.Details">
            <summary>
            Gets a collection containing the details of the result of a Classification operation.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationInfoData.Item">
            <summary>
            Gets the Repository Local Object that was involved in the Classification operation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ClassificationDetailData">
            <summary>
            Represents the data of a ClassificationDetail object: an item used to specify the classification operation result.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationDetailData.Category">
            <summary>
            Gets or sets the <see cref="T:CategoryData" /> of the <see cref="P:Keywords" />.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationDetailData.FieldName">
            <summary>
            Gets or sets the name of the field in <see cref="P:omponentData.Content" /> or <see cref="P:RepositoryLocalObjectData.Metadata" /> where the <see cref="P:XPath" /> expression refers to.
            </summary>
            <value>The name of the Category field.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationDetailData.IsMetadataField">
            <summary>
            Gets or sets a value indicating whether the Classfication is performed on <see cref="P:omponentData.Content" /> or <see cref="P:RepositoryLocalObjectData.Metadata" />.
            </summary>
            <value>
            <c>true</c> if the Classification is performed on <see cref="P:RepositoryLocalObjectData.Metadata" />; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationDetailData.Keywords">
            <summary>
            Gets or sets the <see cref="P:Keywords" /> that are used for Classification.
            </summary>
            <value>This value cannot be null. It will be an empty list if none of the supplied Keywords for the Classification action was used Classify the item.</value>
            <remarks>
            <para>This value will contain Keywords which were added to the field during Classify action.</para>
            <para>This value will contain Keywords which were removed from the field during UnClassify action.</para>
            <para>This value will contain only Keywords which were removed from the field during ReClassify action.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ClassificationDetailData.XPath">
            <summary>
            Gets or sets the XPath expression that resolves the position in <see cref="P:omponentData.Content" /> or <see cref="P:Metadata" /> where the <see cref="P:Keywords" /> are applied for the Classification action.
            </summary>
            <value>The XPath expression.</value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ActivityFinishData">
            <summary>
            Represents the data required for finishing an Activity.
            </summary>
            <remarks>
            For finishing a decision Activity additional data is required; <see cref="T:DecisionActivityFinishData" /> should be used for decision Activities.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityFinishData.Message">
            <summary>
            Gets or sets the finish message for the current Activity.
            </summary>
            <seealso cref="P:Data.FinishMessage" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityFinishData.NextAssignee">
            <summary>
            Gets or sets the assignee (override) for the next Activity.
            </summary>
            <remarks>
            Typically, the assignee is specified on the Activity Definition and hence it is not required to set this property.
            This property can be used to override the assignee as specified in the Process/Activity Definition.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityFinishData.NextActivityDueDate">
            <summary>
            Gets or sets the due date to be used for the next Activity Instance.
            </summary>
            <remarks>
            <para>This property is introduced in version 7.0</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActivityFinishData.NextActivityTitle">
            <summary>
            Gets or sets the title to be used for the next Activity Instance.
            </summary>
            <remarks>
            <para>
            By default, Activity Instances get an auto-generated title consisting of their position and the title of their Activity Definition.
            However, it is also possible to let Activity Instance have a custom title.
            Such a custom title can be specified when finishing the previous Activity using this property.
            </para>
            <para>
            Note that this property is not used to specify what the next Activity should be in case of a decision Activity.
            For that purpose, <see cref="P:NextActivity" /> should be used.
            </para>
            <para>This property is introduced in version 7.0.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.DecisionActivityFinishData.NextActivity">
            <summary>
            Gets or sets which Activity Definition should be used for the next Activity.
            </summary>
            <remarks>
            The Activity Definition for a decision Activity specifies multiple candidate next Activities.
            When an decision Activity is finished, the user must select the appropriate Activity Definition (i.e. make the decision).
            </remarks>
            <seealso cref="P:ActivityFinishData.NextActivityTitle" />
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.QueueMessageData">
            <summary>
            Represents the data of a QueueMessage.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.Action">
            <summary>
            Gets or sets the action of the QueueMessage
            </summary>
            <remarks>
            Only set for Search Messages.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.CreationDate">
            <summary>
            Gets the date and time when the message was put into the queue.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.CreationHostName">
            <summary>
            Gets the title of the computer that put the message in the Queue.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.Item">
            <summary>
            Gets or sets the Item on which a QueueConsumer can perform an action on.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.Priority">
            <summary>
            Gets or sets the priority of the QueueMessage.
            </summary>
            <remarks>
            Only used for Publishing Messages.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.ProcessingConsumerId">
            <summary>
            Gets the identifier of the QueueConsumer who is processing this QueueMessage.
            </summary>
            <remarks>
            To un-set the consumer id the zero value must be set.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.PublicationTarget">
            <summary>
            Gets or sets the PublicationTarget.
            </summary>
            <remarks>
            This property is used for outscaling PublishTransactions.
            Each dedicated Publisher can only listen to a list of specified PublicationTargets defined in the QueueFilter.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.QueueId">
            <summary>
            Gets the identifier of the Queue where the message is located.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueMessageData.ScheduleDateTime">
            <summary>
            Gets or sets the date and time when the message should be retrieved from the queue.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.QueueMessageAction">
            <summary>
            Defines possible actions on a queue message; used by search.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessageAction.None">
            <summary>
            No action.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessageAction.Insert">
            <summary>
            Inserts an <c>IdentifiableObject</c> in the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessageAction.Update">
            <summary>
            Updates an <c>IdentifiableObject</c> in the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessageAction.Delete">
            <summary>
            Deletes an <c>IdentifiableObject</c> in the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessageAction.Reset">
            <summary>
            Purges the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessageAction.ExpirationActivity">
            <summary>
            Defines an Acitivity Expiration Action.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.QueueMessageAction.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.QueueData">
            <summary>
            Represents the data of a Queue.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueData.Id">
            <summary>
            Get the identifier of the Queue.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueData.NumberOfMessages">
            <summary>
            Get or set the number of queued messages in this Queue.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.QueueData.Title">
            <summary>
            Get or set the title (display name) of the Queue.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ApplicationData">
            <summary>
            Represents application-specific data which can be stored system-wide (global) or associated with any identifiable object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApplicationData.ApplicationId">
            <summary>
            Gets or sets the application identifier.
            </summary>
            <remarks>
            This identifier must be unique across all applications. Consider using a GUID or URI.
            <para>This value might be case-sensitive or case-insensitive depending upon system and database configuration. Hence, it is wise to consider this value as case-sensitive, and not create two different Ids differing only in their case.</para>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApplicationData.Data">
            <summary>
            Gets or sets the binary data.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApplicationData.ManagedLinks">
            <summary>
            Gets or sets managed links (reserved for future use).
            </summary>
            <remarks>
            The <see cref="P:Data" /> property is simply binary data of which the CM Kernel doesn't have any knowledge.
            Hence, the CM Kernel cannot automatically provide link management functionality on links to TCM items contained in some way in the data.
            Link management will be provided in future versions of the CM Kernel by means of this property.
            This property is currently exposed merely to prevent a change to the data contract in the future when link management is provided.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApplicationData.TypeId">
            <summary>
            Gets or sets the type identifier which can be used to deserialize the binary <see cref="P:Data" /> into a structured data type.
            </summary>
            <remarks>
            The type identifier can be any string. It doesn't have meaning to the Content Manager system; it's merely intended to help applications
            store and retrieve application-specific data using structured types.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApplicationData.IsInherited">
            <summary>
            Gets the status informing whether this application data is inherited from parent item.
            </summary>
            <remarks>
            The value of this property will be <c>false</c> for <see cref="T:ApplicationData" /> attached to all Non Repository Local Objects and Global Application Data.
            Supported CoreService Endpoint : CoreService 2011
            </remarks>
            <seealso cref="P:OwningRepositoryId" />
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ApplicationData.OwningRepositoryId">
            <summary>
            Gets the Id of the repository which owns this application data.
            </summary>
            <remarks>
            The owning publication of an application data is either the context publication in which it is being read, or the owning publication of the subject item to which it is attached.
            <para>The value of this property will be <c>tcm:0-0-0</c> for <see cref="T:ApplicationData" /> attached to all Non Repository Local Objects and Global Application Data.</para>
            Supported CoreService Endpoint : CoreService 2011
            </remarks>
            <seealso cref="P:IsInherited" />
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation">
            <summary>
            Predefined operation names.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.CheckIn">
            <summary>
            Check-in operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.CheckOut">
            <summary>
            Check-out operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.Classify">
            <summary>
            Classify operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.Copy">
            <summary>
            Copy operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.Delete">
            <summary>
            Delete operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.FinishActivity">
            <summary>
            Finish activity operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.ForceFinishProcess">
            <summary>
            Finish process operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.Localize">
            <summary>
            Localize operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.Move">
            <summary>
            Move operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.Publish">
            <summary>
            Publish operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.ReClassify">
            <summary>
            ReClassify operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.StartActivity">
            <summary>
            Start activity operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.UnClassify">
            <summary>
            UnClassify operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.UnLocalize">
            <summary>
            UnLocalize operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.UnPublish">
            <summary>
            UnPublish operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.UndoCheckOut">
            <summary>
            Undo check-out operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.DeleteTaxonomyNode">
            <summary>
            Delete keyword branch operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.SwitchUserEnabledState">
            <summary>
            Channging user enabled state.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.CopyToKeyword">
            <summary>
            Copy to keyword operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.MoveToKeyword">
            <summary>
            Move to keyword operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.ReAssignActivity">
            <summary>
            ReAssign Activity operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.RestartActivity">
            <summary>
            Restart Activity operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.SuspendActivity">
            <summary>
            Suspend Activity operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.ResumeActivity">
            <summary>
            Resume Activity operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.SynchronizeWithSchemaAndUpdate">
            <summary>
            Synchronize with Schema operation.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.Promote">
            <summary>
            Promote item to the specified repository.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.Demote">
            <summary>
            Demote item to the specified repository.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.RenderedItemData">
            <summary>
            Represents the data object of a Rendered Item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.Binaries">
            <summary>
            Gets a list of <see cref="T:BinaryData" /> instances that have been added to the <see cref="T:RenderedItemData" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.ChildRenderedItems">
            <summary>
            Gets a list of <see cref="T:RenderedItemData" /> for the nested items of the item being rendered.
            For example a rendered Page can contain rendered Component Presentations from that Page.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.CodePage">
            <summary>
            Gets or sets the code page identifier of the current <see cref="T:RenderedItemData" />
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.Content">
            <summary>
            Gets the content of the current <see cref="T:RenderedItemData" />
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.ExecutionTime">
            <summary>
            Gets the time took to render this <see cref="T:RenderedItemData" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.Instructions">
            <summary>
            Gets or sets the instructions to the <see cref="T:RenderedItemData" /> which can be processed at the Content Delivery side.
            </summary>
            <remarks>
            The property can contain any valid XML structure which can be processed at the Content Delivery side.
            Adding the same instruction multiple times will show up multiple times at the Content Delivery side.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.IsRenderedCompletely">
            <summary>
            Gets a value indicating whether item has finished rendering.
            Returns <c>true</c> if this <see cref="T:RenderedItemData" /> is finished rendering.
            In case of a dynamic component presentation during publishing in the context of rendering a page it returns <c>false</c>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.Metadata">
            <summary>
            Gets the metadata of the <see cref="T:RenderedItemData" />.
            </summary>
            <value>A <see cref="T:SerializableXmlDocument" /> that contains the metadata elements.</value>
            <remarks>
            Represents a custom metadata added to the Rendered Item by a template during rendering.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.RenderInstruction">
            <summary>
            Gets the <see cref="T:RenderInstructionData" /> of this <see cref="T:RenderedItemData" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.RenderedItemData.ResolvedItem">
            <summary>
            Gets the <see cref="T:ResolvedItemData" /> of this <see cref="T:RenderedItemData" />.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.BinaryData">
            <summary>
            Represents the data object of a Binary.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.ComponentId">
            <summary>
            Gets the identifier of the <see cref="T:ContentManagement.ComponentData" /> of type <see cref="F:ContentManagement.ComponentType.Multimedia" />.
            </summary>
            <value>An identifier of the <see cref="T:ContentManagement.ComponentData" />.</value>
            <remarks>
            This property can be "tcm:0-0-0" which indicates there is no associated <see cref="T:ContentManagement.ComponentData" />.
            When this value is set, the <see cref="T:BinaryData" /> object represents the binary content of this multimedia <see cref="T:ContentManagement.ComponentData" />.
            When using the CoreService, the <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.FilePath">
            <summary>
            Gets the filename including its path.
            </summary>
            <remarks>
            In case binary content is generated during rendering - the file path for that binary content is stored in the <see cref="P:FilePath" /> property.
            Use this file path as an argument to DownloadRenderedBinary method of Core Service to retrieve the binary content.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.Filename">
            <summary>
            Gets the file name of the binary.
            </summary>
            <value>A <see cref="T:System.String" /> holding the file name of the <see cref="T:BinaryData" /> excluding its path.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.LocationId">
            <summary>
            Gets the location identifier where this <see cref="T:BinaryData" /> is stored.
            </summary>
            <remarks>
            When using the CoreService, the <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.MimeType">
            <summary>
            Gets the MIME type of the binary.
            </summary>
            <value>A <see cref="T:System.String" /> holding the MIME type of the <see cref="T:BinaryData" />.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.Path">
            <summary>
            Gets the publish path of the <see cref="T:BinaryData" /> that starts with a backslash
            and includes the filename.
            </summary>
            <value>A <see cref="T:System.String" /> holding the publish path of the <see cref="T:BinaryData" />.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.RelatedComponentId">
            <summary>
            Gets the identifier of the related <see cref="T:ContentManagement.ComponentData" />.
            </summary>
            <value>An identifier of the related <see cref="T:ContentManagement.ComponentData" />.</value>
            <remarks>
            This property can be "tcm:0-0-0" which indicates there is no related <see cref="T:ContentManagement.ComponentData" />.
            When this value is set, the <see cref="T:BinaryData" /> object represents a binary content which is related to this <see cref="T:ContentManagement.ComponentData" />.
            For example the <see cref="T:BinaryData" /> is a thumbnail that was generated from this <see cref="T:ContentManagement.ComponentData" />.
            When using the CoreService, the <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.Url">
            <summary>
            Gets the publish URL of the <see cref="T:BinaryData" />.
            </summary>
            <value>A <see cref="T:System.String" /> holding the publish URL of the <see cref="T:BinaryData" />.</value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.BinaryData.VariantId">
            <summary>
            Gets the variant identifier that identifies this <see cref="T:BinaryData" />.
            </summary>
            <value>A <see cref="T:System.String" /> holding the variant identifier.</value>
            <remarks>
            This is the value used when a binary content is added with variant identifier.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ActionFlags">
            <summary>
            Specifies allowed or denied actions for an item - see <see cref="T:Actions" />.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.ActionFlags.Actions">
            <summary>
            Gets the <see cref="T:Actions" /> for item.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Actions">
            <summary>
            Defines allowed actions for an item.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ApplicationDataDictionary">
            <summary>
            Represents multiple sets of <see cref="T:Data.ApplicationData" /> grouped by Subject Id.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SecurityDescriptorDataDictionary">
            <summary>
            Represents multiple sets of <see cref="T:Data.Security.SecurityDescriptorData" /> grouped by Subject Id.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.SecurityDescriptorData">
            <summary>
            The SecurityDescriptorData is a grouping of all the Rights and Permissions (allow and denies) for the trustees.
            A SecurityDescriptorData is specific to a user and a context (<c>IdentifiableObject</c>).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SecurityDescriptorData.Permissions">
            <summary>
            Gets the Permissions of an Identifiable object for a trustee.
            </summary>
            <remarks>
            For root Organizational Items the value of the <see cref="P:Permissions" /> is always <see cref="F:Security.Permissions.None" />.
            Use the <see cref="P:Rights" /> to check if the user can read, write, localize or delete the item.
            Reading the item requires Publication access.
            Writing, deleting, localizing and un-localizing of root Organizational items requires the following rights.
            <list type="table">
            <item><term>Folder</term><description>Publication and Folder management</description></item>
            <item><term>Structure Group</term><description>Publication and Structure Group management</description></item>
            <item><term>Category</term><description>Category management</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.SecurityDescriptorData.Rights">
            <summary>
            Gets the Rights of an Identifiable object for a trustee.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PredefinedQueue">
            <summary>
            Defines kinds of available predefined queues.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedQueue.PublishQueue">
            <summary>
            Used to send QueueMessages to the publisher service for (Un-)Publishing.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedQueue.DeployQueue">
            <summary>
            Used to send the commit or cancel command to the publisher service for scheduled deployment.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedQueue.SearchQueue">
            <summary>
            Used to send QueueMessages to the search service for modifying the search collection.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedQueue.WorkflowAgentQueue">
            <summary>
            Used to send QueueMessages to the workflow agent service for running automated activities.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedQueue.BatchQueue">
            <summary>
            Used to send QueueMessages to the batch service for running batches.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.CoreService.Client.PredefinedQueue.UnknownByClient">
            <summary>
            Special reserved value used to notify a legacy client about receiving an enumeration value added in a newer version of the service.
            Explicitly setting this value by a client is not allowed (it can only be set internally by the service), but client code should check it and be able to handle such cases.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData">
            <summary>
            Represents data for PurgeOldVersionsInstruction.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData.Containers">
            <summary>
            Gets or sets publications and organizational items in which we must process purging process
            </summary>
            <value>
            Containers in which purging process will occur
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData.KeepVersionsModifiedAfter">
            <summary>
            Gets or sets date and keep versions which are going after this date.
            </summary>
            <value>
            Keep versions which are going after this date
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData.KeepVersionsWithinDaysBeforeLastCheckIn">
            <summary>
            Gets or sets days within last modification to keep versions.
            </summary>
            <value>
            Days within last modification to keep versions.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData.MaxResolvedVersionedItemsCount">
            <summary>
            Gets or sets the max number of versioned items which we can select for purging during one iteration.
            </summary>
            <value>
            The max number of versioned items which we can select for purging.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData.Recursive">
            <summary>
            Gets or sets mode of search in organizational items. If set to <c>true</c> the search will occur in nested organizational items.
            </summary>
            <value>
            Mode of search for organizational items.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData.VersionsToKeep">
            <summary>
            Gets or sets the number of versions which we must keep.
            </summary>
            <value>
            The versions count to keep.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Privileges">
            <summary>
            Specifies privileges which can be set/elevated for specific user.
            </summary>
            <remarks>
            <para>
            <see cref="F:IsElevated" /> can be used only in combination with other members of this enum (except <see cref="F:None" />).
            This means that user privileges were elevated to specific enum value.
            </para>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService">
            <summary>
            This interface provides session functionality to dispose and get the id;
            and get a impersonated user object for CoreService201603 EndPoints to provide Versioning of Core Service Interface.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListExternalLinks(System.String)">
            <summary>
            Gets the list external links from content/metadata of the item.
            </summary>
            <param name="id">TCM URI or WebDAV URL of item to get list on.</param>
            <returns>A list of external links from content/metadata of the item.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ConvertXmlToSearchQuery(System.Xml.Linq.XElement)">
            <summary>
            Gets the search query from the Search Query XML representation.
            </summary>
            <param name="searchQueryXml">The XML which should be converted to the search query.</param>
            <returns>A <see cref="T:Data.ContentManagement.SearchQueryData" /> object representing the configuration for Search Folder.</returns>
            <remarks>
            The XML representation should be in format of Search Folder: see SearchFolder element in cm_searchfolder.xsd.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ConvertSearchQueryToXml(Tridion.ContentManager.CoreService.Client.SearchQueryData)">
            <summary>
            Gets an XML representation of the search query.
            </summary>
            <param name="searchQueryData">The search query which should be converted to XML.</param>
            <returns>The root element of the XML.</returns>
            <remarks>
            The XML representation can be used to set a Search Folder's <see cref="P:Data.ContentManagement.VirtualFolderData.Configuration" /> property.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetVirtualFolderTypeSchema(System.String)">
            <summary>
            Gets the type schema of a Virtual Folder for the Namespace URI specified.
            </summary>
            <param name="namespaceUri">The Namespace URI of the Virtual Folder type schema.</param>
            <returns>The Virtual Folder Type Schema or <c>null</c> if no Virtual Folder Type Schema is found with the given namespace URI.</returns>
            <remarks>
            To get Virtual Folder Type Schema for Bundle pass "http://www.sdltridion.com/ContentManager/Bundle" as <paramref name="namespaceUri" />.
            To get Virtual Folder Type Schema for Search Folder pass "http://www.tridion.com/ContentManager/5.1/SearchFolder" as <paramref name="namespaceUri" />.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetEnumValues(System.String)">
            <summary>
            Gets the list of dependencies between Tridion enum values and theirs localized display name.
            </summary>
            <param name="type">String name of tridion enum.</param>
            <returns>The list of dependencies between Tridion enum values and theirs localized display name.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ResolveBundleTypes(System.String[],System.Boolean)">
            <summary>
            Resolves the Bundle Schemas and associated Bundles for the given set of Workflow Items.
            </summary>
            <param name="itemIds">Collection of identifiers of the workflowable items to resolve bundle type (TCM URI or WebDav URL).</param>
            <param name="pruneTree">
            When set to <c>true</c> returned value should only contain Bundle Type and Resolved Bundle which were mapped to the given Item IDs.
            When set to <c>false</c> returns all Bundle Schemas associated with bundle process and all Bundles of those types.
            </param>
            <returns>A list of Bundle Types and associate bundles and item mappings.</returns>
            <remarks>
            All items should belong to the same publication.
            If a Bundle Process is specified for a given item, then it must be added to a Bundle before it can be checked in.
            The Bundle has to be of an appropriate type, that is, the Bundle's Schema must be associated with a Process Definition.
            The specified Bundle Process results in preferred Bundle types.
            This method can be used to determine the preferred bundle types and bundles of these types for given set of items.
            If an item already added in a Bundle then that Bundle and its associated Bundle Type will be returned regardless of <paramref name="pruneTree" />.
            If there is Business Process Type associated with the Repository, only Bundle Schemas applicable for this Business Process Type and Bundle Schemas which are not used in any Business Process Type will be returned. Otherwise, all Bundle Schemas will be returned.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.CopyToKeyword(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Copies the keyword to a given location in the taxonomy.
            </summary>
            <remarks>
            If <paramref name="sourceKeywordId" /> or <paramref name="destinationId" /> is not refer to <see cref="T:Data.ContentManagement.KeywordData" /> exception will be raised.
            The whole taxonomy branch is copied into the destination keyword.
            Always new unique title is generated, because actually copied keyword is created at the same Category.
            </remarks>
            <param name="sourceKeywordId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:Data.ContentManagement.KeywordData" /> to copy.</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:Data.ContentManagement.KeywordData" /> where the copy should be created.</param>
            <param name="readBackOptions">Specifies how the item's copy is read back after copying. If the parameter is <c>null</c>, the copy is not read back.</param>
            <returns>A <see cref="T:Data.ContentManagement.KeywordData" /> representing the <see cref="T:Data.ContentManagement.KeywordData" /> copy or <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.MoveToKeyword(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Moves the Keyword to a given location in the taxonomy.
            </summary>
            <remarks>
            If <paramref name="sourceKeywordId" /> or <paramref name="destinationId" /> is not refer to <see cref="T:Data.ContentManagement.KeywordData" /> exception will be raised.
            The whole taxonomy branch is moved into the destination keyword.
            </remarks>
            <param name="sourceKeywordId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:Data.ContentManagement.KeywordData" /> to move.</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:Data.ContentManagement.KeywordData" /> where item must be moved.</param>
            <param name="readBackOptions">Specifies how the item's copy is read back after copying. If the parameter is <c>null</c>, the copy is not read back.</param>
            <returns>A <see cref="T:Data.ContentManagement.KeywordData" /> that is read back after moving or <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetTridionLanguages">
            <summary>
            Gets the list of supported Tridion languages.
            </summary>
            <returns>List of <see cref="T:TridionLanguageInfo" />, which contains information about supported Tridion language.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListWorkflowScriptTypes">
            <summary>
            Returns the list of configured <see cref="T:TypeRegistration.WorkflowScriptType" />s.
            </summary>
            <returns>The list of <see cref="T:TypeRegistration.WorkflowScriptType" />s.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.AddToWorkflow(System.String[],System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Adds the subject(s) to the workflow in the specified Activity Instance.
            </summary>
            <param name="subjectIds">The ids of subject(s) those should be added to workflow.</param>
            <param name="activityInstanceId">The activity instance id where the subjects should be added.</param>
            <param name="readBackOptions">The read back options.</param>
            <remarks>
            If subject is a bundle, the bundle and all items in it will be added to workflow. In case of nested bundles, all nested items will be added to workflow as well (recursively).
            </remarks>
            <returns>A collection of Work Items which were added to the specified activity.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.RemoveFromWorkflow(System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Removes the subject(s) from workflow.
            </summary>
            <param name="subjectIds">The ids of subject(s) those should be removed from workflow.</param>
            <param name="readBackOptions">The read back options.</param>
            <returns>A collection of Work Items which were removed from workflow.</returns>
            <remarks>
            If subject is a bundle, the bundle and all items in it will be removed from workflow. In case of nested bundles, all nested items will be removed from workflow as well (recursively),
            unless item is contained in another bundle that will remain in workflow.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Lock(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Locks the organizational item. This means that item cannot be edited by other users.
            </summary>
            <remarks>
            Organizational item can only have following lock types: None, Permanent or InWorkflow.
            Organizational item is versionless. It means that changes made on locked item will be visible to other users.
            </remarks>
            <seealso cref="M:Unlock()" />
            <param name="organizationalItemId">The identifier of the organizational item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:OrganizationalItemData" /> is read back after locking. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:OrganizationalItemData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is locked,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Unlock(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Unlocks the item so other users could edit it as well.
            </summary>
            <seealso cref="M:Lock()" />
            <param name="organizationalItemId">The identifier of the organizational item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:OrganizationalItemData" /> is read back after unlocking. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:OrganizationalItemData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is unlocked,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.StartWorkflow(System.String,Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Creates <see cref="T:Data.Workflow.ProcessInstanceData" /> with first <see cref="T:Data.Workflow.ActivityInstanceData" />.
            </summary>
            <param name="repositoryId">The identifier (TCM URI or WebDAV URL) of the repository on which workflow must be started.</param>
            <param name="instruction">Contains parameters, which will be used for starting workflow and creating first activity instance.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.Workflow.ProcessInstanceData" /> is read back after starting workflow. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>
            Created <see cref="T:Data.Workflow.ProcessInstanceData" /> object.
            </returns>
            <remarks>
            <para>
            <see cref="T:Data.Workflow.ProcessInstanceData" /> and first <see cref="T:Data.Workflow.ActivityInstanceData" /> will be created with values, which specified in  <paramref name="instruction" />.
            </para>
            <para>
            The <see cref="P:ProcessDefinition" /> optional and might not be specified in <paramref name="instruction" />. In that case,
            if there is only one subject specified and it's a Bundle, then Process Definition associated with Bundle Metadata Schema will be used (if any).
            Otherwise, <see cref="P:TaskProcess" /> process will be taken.
            </para>
            <para>The <see cref="P:ShareProcessAssociations" /> property doesn't affect getting process definition for shared items. Bundle Process Definition is always shared from parent.</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.UndoPublishTransaction(System.String,System.Nullable{Tridion.ContentManager.CoreService.Client.QueueMessagePriority},Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Undoes the Publish Transaction.
            </summary>
            <param name="publishTransactionId">The Id of the Publish Transaction which should be Undone.</param>
            <param name="priority">The priority used for queuing the undo request.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.Publishing.PublishTransactionData" /> is read back after undoing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>The Publish Transaction.</returns>
            <remarks>
            <para>
            Undoing a Publish transaction will result in the system trying to pretend that this publish transaction did not happen. If items were overwritten by subsequent Publish Transactions
            then they will not be modified.
            </para>
            <para>
            This is an asynchronous operation, and the method will return as soon as the Undo request is queued. The Publish Transaction can be read again to determine if the Undo was successful
            or not, by looking at the <see cref="P:Data.Publishing.PublishTransactionData.State" />. Further details about the individual items can be found in <see cref="P:Data.Publishing.ProcessedItemData.UndoState" />.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetProcessDefinitionsForItems(System.String[],Tridion.ContentManager.CoreService.Client.ProcessDefinitionType)">
            <summary>
            Gets Process Definitions associated with the specified list of items that can go to workflow.
            </summary>
            <param name="itemIds">Ids of items for which Process Definitions should be resolved.</param>
            <param name="processDefinitionType">The type of Process Definition association to get. Expected values are <see cref="F:Workflow.ProcessDefinitionType.Editing" />
            or <see cref="F:Workflow.ProcessDefinitionType.Bundle" />.</param>
            <returns>Pairs of specified ids and links to associated Process Definitions.</returns>
            <remarks>
            If there is no Process Definition associated with an item, association link will be <c>Link.NullLink</c>.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSystemXsd(System.String)">
            <summary>
            Gets the string representation of System schema xsd by it's name.
            </summary>
            <param name="filename">Name of system schema.</param>
            <returns>
            System schema xsd in string representation.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSchemasByNamespaceUri(System.String,System.String,System.String)">
            <summary>
            Gets a list of <c>Link&lt;SchemaData&gt;</c> objects from specified Repository with specified namespace Uri and root element name.
            </summary>
            <param name="repositoryId">The identifier (TCM URI or WebDAV URL) of the repository from which items will be retrieved.</param>
            <param name="namespaceUri">The namespace Uri.</param>
            <param name="rootElementName">The root element name. If empty string is passed to this parameter then result will be retrieved regardless of root element.</param>
            <returns>
            The list of <c>Link&lt;SchemaData&gt;</c> objects.
            </returns>
            <remarks>
            If item is checked out by current user then editable version will be returned, otherwise last major version.
            If <c>null</c>, empty or <c>tcm:0-0-0</c> value is passed to the <paramref name="repositoryId" /> then items will be retrieved from system repository.
            If it is passed empty or <c>null</c> string to <paramref name="namespaceUri" /> then retrieved schemas without namespace Uri.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Validate(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData)">
            <summary>
            Validates the state of <paramref name="deltaData" />.
            </summary>
            <param name="deltaData">An <see cref="T:Data.IdentifiableObjectData" /> which contains the properties to be validated.</param>
            <returns>
            A list of <see cref="T:Data.ValidationErrorData" /> if any.
            </returns>
            <remarks>
            The operation is possible on a valid delta. In order to validate a saved item, a data object with only the Id property set can be passed.
            Any property set along with the Id property will be merged with the saved state and then validated. If the item is not saved, then defaults
            will be used for properties which are not set.
            <para>The operation is currently only allowed on Page. Trying to pass any other items will result in an exception.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetExternalBinaryContentData(System.String)">
            <summary>
            Retrieves the <c>BinaryContentData</c> for a given external URI.
            </summary>
            <param name="uri">The URI of the external binary.</param>
            <returns>The Binary Content Data for the external URI.</returns>
            <remarks>
            This method can be used to retrieve <c>BinaryContentData</c> for all protocols available in the system.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.SynchronizeWithSchema(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData,Tridion.ContentManager.CoreService.Client.SynchronizeOptions)">
            <summary>
            Synchronizes content and/or metadata of an item with current schema.
            </summary>
            <param name="dataObject">A <see cref="T:Data.ContentManagement.RepositoryLocalObjectData" /> or <see cref="T:Data.ContentManagement.RepositoryData" /> which contains content or metadata to synchronize</param>
            <param name="synchronizeOptions">Specifies what synchronization operations should be applied</param>
            <returns>A <see cref="T:SynchronizationResult" /> object which contains the synchronized item data and the operations applied</returns>
            <remarks>
            Synchronizes metadata in <see cref="T:Data.ContentManagement.RepositoryLocalObjectData" /> or <see cref="T:Data.ContentManagement.RepositoryData" /> with its metadata schema, or content in <see cref="T:Data.ContentManagement.ComponentData" /> with the component's schema.
            All changes are applied and returned, but nothing is persisted.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.SynchronizeWithSchemaAndUpdate(System.String,Tridion.ContentManager.CoreService.Client.SynchronizeOptions)">
            <summary>
            Synchronizes content and/or metadata of an item with current schema, and persists the changes.
            </summary>
            <param name="itemId">The identifier of the item to synchronize (TCM URI or WebDAV URL)</param>
            <param name="synchronizeOptions">Specifies what synchronization operations should be applied</param>
            <returns>A <see cref="T:SynchronizationResult" /> object which contains the synchronized item data and the operations applied</returns>
            <remarks>
            Synchronizes metadata in <see cref="T:Data.ContentManagement.RepositoryLocalObjectData" /> or <see cref="T:Data.ContentManagement.RepositoryData" /> with its metadata schema, or content in <see cref="T:Data.ContentManagement.ComponentData" /> with the component's schema.
            All changes are applied on the item and saved.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.DecommissionPublicationTarget(System.String)">
            <summary>
            Decommissions (takes out of service) a Publication Target, so it can be deleted afterwards.
            </summary>
            <param name="publicationTargetId">The identifier of a Publication Target to be decommissioned</param>
            <remarks>
            Only System Administrator can perform this operation.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ConvertXsdToSchemaFields(System.Xml.Linq.XElement,Tridion.ContentManager.CoreService.Client.SchemaPurpose,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Converts schema XSD to schema fields.
            </summary>
            <param name="xsd">The XSD of the schema.</param>
            <param name="purpose">The purpose of the Schema.</param>
            <param name="rootElementName">The Root Element name of the Schema. Root element names is optional. Can be derived from <paramref name="purpose" /> or <paramref name="xsd" />.</param>
            <param name="readOptions">
            Specifies how the <see cref="T:Data.ContentManagement.Fields.SchemaFieldsData" /> is loaded. Valid <see cref="T:LoadFlags" /> are <see cref="F:LoadFlags.WebDavUrls" /> and <see cref="F:LoadFlags.Expanded" />.
            Use <see cref="F:LoadFlags.Expanded" /> to get expand the embedded fields.
            Use <see cref="F:LoadFlags.WebDavUrls" /> to load the WebDAVUrls.
            </param>
            <returns>Returns <see cref="T:Data.ContentManagement.Fields.SchemaFieldsData" /> from given <paramref name="xsd" />.</returns>
            <remarks>This method does not assert Item existence unless <see cref="F:LoadFlags.WebDavUrls" /> is used.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetPublishUrl(System.String,System.String)">
            <summary>
            Gets the publish URL of an item for specific Target Type ID or purpose.
            </summary>
            <param name="id">The identifier of the item (TCM URI) or its WebDAV URL.</param>
            <param name="targetTypeIdOrPurpose">The id of the <see cref="T:Data.CommunicationManagement.TargetTypeData" /> or the purpose for which publish URL must be calculated.</param>
            <remarks>
            <para>
            The <paramref name="id" /> must refer to Publication, Structure Group or Page.
            </para>
            <para>
            The <paramref name="targetTypeIdOrPurpose" /> must be used in the <see cref="P:BusinessProcessType" /> of the context publication.
            The purpose value is case-sensitive.
            </para>
            </remarks>
            <returns>
            Absolute publish URL.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetBusinessProcessTypes(System.String)">
            <summary>
            Gets the list links to <see cref="T:Data.CommunicationManagement.BusinessProcessTypeData" /> objects which are associated with <paramref name="cdTopologyTypeId" />.
            </summary>
            <param name="cdTopologyTypeId">The CD Topology Type identifier for which the links to <see cref="T:Data.CommunicationManagement.BusinessProcessTypeData" /> objects should be retrieved.</param>
            <returns>The list of links to <see cref="T:Data.CommunicationManagement.BusinessProcessTypeData" /> objects which are associated with <paramref name="cdTopologyTypeId" /></returns>
            <remarks>
            The list returns all Business Process Types associated with <paramref name="cdTopologyTypeId" />, regardless the user has rights to read them or not,
            however, the items which the user does not have permission does not have any content, only the Id is available and the Title has a localized message
            mentioning the user does not have permission.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetPublishSourceByUrl(System.String)">
            <summary>
            Gets the <see cref="T:Data.Publishing.PublishSourceData" /> object which contains information about source from which content was published by URL.
            </summary>
            <param name="url">The URL to which item was published.</param>
            <returns><see cref="T:Data.Publishing.PublishSourceData" /> object which contains information about source from which content was published.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.RemovePublishStates(System.String,System.String)">
            <summary>
            Removes the publish states of the items published to specific <see cref="T:Data.CommunicationManagement.TargetTypeData" /> in the scope of the specific <see cref="T:Data.CommunicationManagement.PublicationData" />.
            </summary>
            <param name="publicationId">The identifier (TCM URI or WebDAV URL) of the context <see cref="T:Data.CommunicationManagement.PublicationData" /> of the items which were published.</param>
            <param name="targetTypeIdOrPurpose">The identifier (TCM URI or WebDAV URL) or purpose of the <see cref="T:Data.CommunicationManagement.TargetTypeData" /> to which items were published.</param>
            <remarks>
            <para>
            Only System Administrator can perform this operation.
            </para>
            <para>
            The purpose value is case-sensitive.
            </para>
            <para>
            The same purpose might be associated with multiple <see cref="T:Data.CommunicationManagement.TargetTypeData" /> in context of different <see cref="T:BusinessProcessTypeData" />.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ResolveContainingPages(System.String,Tridion.ContentManager.CoreService.Client.ResolveContainingPagesInstructionData)">
            <summary>
            Resolves pages that are using directly or indirectly a given component based on <see cref="T:ResolveContainingPagesInstructionData" />.
            </summary>
            <param name="componentId">TCM URI or WebDAV URL of a component.</param>
            <param name="instruction">An instance of <see cref="T:ResolveContainingPagesInstructionData" /> with set of options that configure resolving.</param>
            <returns>Set of pages where component is directly or indirectly (via component links) used. If page is published, the associated set of publish info
            is also returned (one <see cref="T:Data.Publishing.PublishInfoData" /> instance per publish destination).</returns>
            <remarks>
            <para>
            User must have read permissions on component to call this method.
            Resolved pages might be removed from result set if user does not have read permissions on them.
            </para>
            <para>
            Resolved pages are ordered by the number of links from page to provided component. If component is directly on the resolved pages, those pages will be listed first and then
            the pages that have links to components that reference provided component and so on.
            </para>
            <para>
            Note that the <see cref="T:Data.Publishing.ResolvedItemData" /> and <see cref="T:Data.Publishing.PublishInfoData" /> data is partially set. Specifically, only following properties are returned:
            <list type="bullet">
            <item><description><see cref="P:Data.Publishing.ResolvedItemData.Item" /></description></item>
            <item><description><see cref="P:Data.Publishing.ResolvedItemData.Template" /></description></item>
            <item><description><see cref="P:Data.Publishing.ResolvedItemData.ItemPath" /></description></item>
            <item><description><see cref="P:Data.Publishing.PublishInfoData.PublicationTarget" /></description></item>
            <item><description><see cref="P:Data.Publishing.PublishInfoData.TargetType" /></description></item>
            <item><description><see cref="P:Data.Publishing.PublishInfoData.PublishedAt" /></description></item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.PurgeWorkflowHistory(Tridion.ContentManager.CoreService.Client.PurgeWorkflowHistoryInstructionData)">
            <summary>
            Purges the workflow history according to <see cref="T:Data.Workflow.PurgeWorkflowHistoryInstructionData" /> object.
            </summary>
            <param name="instruction">The instruction for purging <see cref="T:Data.Workflow.ProcessHistoryData" />.</param>
            <remarks>
            <para>
            User must be a System Administrator for executing this method.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.BroadcastNotification(Tridion.ContentManager.CoreService.Client.NotificationMessage)">
            <summary>
            Broadcasts a notification defined in the <see cref="T:Notifications.NotificationMessage" /> object.
            </summary>
            <param name="notification">The notification object to send</param>
            <remarks>
            The notification is sent to all clients currently connected and listening for notifications (including scaled-out configurations).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSystemPrivileges">
            <summary>
            Returns an IEnumerable of registered <see cref="T:Security.SystemPrivilege" />.
            </summary>
            <returns>A collection of all registered <see cref="T:Security.SystemPrivilege" />s.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetApiVersion">
            <summary>
            Gets the API version.
            </summary>
            <remarks>
            Typically, the API itself does not change for Service Packs, but system behavior
            may change (i.e. be corrected) and therefore the Service Pack number is included.
            </remarks>
            <returns>API Version. Syntax: {MajorVersion}.{MinorVersion}.{ServicePack}</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetCurrentUser">
            <summary>
            Gets the <see cref="T:Data.Security.AccessTokenData" /> for which a session was created.
            </summary>
            <returns>A <see cref="T:Data.Security.AccessTokenData" /> representing the current user.</returns>
            <remarks>
            If impersonation has been used, this will be the impersonated user.
            The Group Memberships are expanded, i.e. the collection also contains indirect Group memberships
            and also group memberships obtained from an external LDAP Directory (if any).
            <para>
            Do not use the return value of this method to save it back, as this has the group memberships expanded,
            and, you might end up with Permission Denied exception.
            </para>
            </remarks>
            <seealso cref="M:Impersonate()" />
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.IsExistingObject(System.String)">
            <summary>
            Determines whether a given URI refers to an existing object.
            </summary>
            <param name="id">The URI to test. Can be either a TCM URI or a WebDAV URL representing a TCM object.</param>
            <returns><c>true</c> if the URI refers to an existing object.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetTcmUri(System.String,System.String,System.Nullable{System.UInt32})">
            <summary>
            Constructs a TCM URI from a specified base URI, context Repository URI and version number.
            </summary>
            <param name="baseUri">The base URI. Can be either a TCM URI or a WebDAV URL.</param>
            <param name="contextRepositoryUri">
            The TCM URI or WebDAV URL of the context Repository used to override the one in the <paramref name="baseUri" /> parameter.
            Can be <c>null</c> if no context Repository override is needed.
            </param>
            <param name="version">
            The version number to override the one specified (if any) in the <paramref name="baseUri" /> parameter.
            Use <c>0</c> to address the editable version (also known as "checked-out version" or "dynamic version").
            Can be <c>null</c> if no version number override is needed.
            </param>
            <returns>The constructed TCM URI.</returns>
            <remarks>
            Note that the other web methods already accept both a TCM URI and a WebDAV URL,
            so there is no need to call this method separately only to convert a WebDAV URL into a TCM URI.
            This method should only be used to override the context Repository and/or version number.
            The <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.TryGetTcmUri(System.String,System.String,System.Nullable{System.UInt32})">
            <summary>
            Try to construct a TCM URI from a specified base URI, context Repository URI and version number.
            Returns null, if specified base URI or context Repository URI are invalid, or they are unexisting WebDAV URL.
            </summary>
            <param name="baseUri">The base URI. Can be either a TCM URI or a WebDAV URL.</param>
            <param name="contextRepositoryUri">
            The TCM URI or WebDAV URL of the context Repository used to override the one in the <paramref name="baseUri" /> parameter.
            Can be <c>null</c> if no context Repository override is needed.
            </param>
            <param name="version">
            The version number to override the one specified (if any) in the <paramref name="baseUri" /> parameter.
            Use <c>0</c> to address the editable version (also known as "checked-out version" or "dynamic version").
            Can be <c>null</c> if no version number override is needed.
            </param>
            <returns>The constructed TCM URI, if specified <paramref name="baseUri" /> and <paramref name="contextRepositoryUri" /> are exist. <c>null</c> otherwise.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Read(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Gets an <see cref="T:Data.IdentifiableObjectData" /> object for the specified <paramref name="id" />.
            </summary>
            <param name="id">The identifier of the item (TCM URI) or a WebDAV URL.</param>
            <param name="readOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is loaded.</param>
            <remarks>
            <para>
            The structure of a TCM URI is PublicationId-ItemId[-ItemType][-vVersion].
            </para>
            <para>
            Only user who checked out <see cref="T:VersionedItemData" /> is allowed to read editable (version 0) item.
            </para>
            </remarks>
            <returns>An <see cref="T:Data.IdentifiableObjectData" /> object representing the item.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <example>
            <code>
            string id = "tcm:1-21-8-v0";
            // Reads editable (current) version of schema
            IdentifiableObjectData schema = (IdentifiableObjectData)_client.Read(id, null);
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.TryRead(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Tries to get  an <see cref="T:Data.IdentifiableObjectData" /> object for the specified <paramref name="id" />.
            If object with specified id doesn't exist <c>null</c> will be returned.
            </summary>
            <param name="id">The identifier of the item (TCM URI) or a WebDAV URL.</param>
            <param name="readOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is loaded.</param>
            <returns>If item with specified <paramref name="id" /> exists returns an <see cref="T:Data.IdentifiableObjectData" /> object representing of the item. <c>Null</c> otherwise.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.BulkRead(System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Returns a dictionary of <see cref="T:ItemReadResult" /> with string id as the key and a <see cref="T:ItemReadResult" /> as value.
            </summary>
            <param name="ids">The list of identifiers (TCM URI or a WebDAV URL) of the items to return.</param>
            <param name="readOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is loaded.</param>
            <remarks>
            <para>
            The structure of a TCM URI is PublicationId-ItemId[-ItemType][-vVersion].
            </para>
            <para>
            Only user who checked out <see cref="T:VersionedItemData" /> is allowed to read editable (version 0) item.
            </para>
            <para>
            If one of the <see cref="T:Data.IdentifiableObjectData" /> is loaded by id unsuccessfully, <see cref="T:ItemReadResult" /> object
            will provide additional error details (<see cref="T:CoreServiceFault" />).
            </para>
            </remarks>
            <returns>A dictionary of <see cref="T:ItemReadResult" /> with string id as the key and a <see cref="T:ItemReadResult" /> as value,
            representing the items requested by ids or error details.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <example>
            <code>
            // Reads editable (current) version of schema, folder by WebDAV URL and user.
            string id1 = "tcm:1-21-8-v0";
            string id2 = "/WebDAV/publication/Building Blocks";
            string id3 = "tcm:0-11-65552";
            ItemReadResultDictionary items = _client.BulkRead(new List{string} {id1, id2, id3}, new ReadOptions());
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ReadSchemaFields(System.String,System.Boolean,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Gets the fields for the schema specified by the <paramref name="schemaId" />.
            </summary>
            <param name="schemaId">The schema identifier (TCM URI) from which to get the field definitions.</param>
            <param name="expandEmbeddedFields">Indicates whether embedded field definitions should be expanded.</param>
            <param name="readOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is loaded.</param>
            <returns>A <see cref="T:Data.ContentManagement.Fields.SchemaFieldsData" /> object representing the fields for the schema.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ConvertSchemaFieldsToXsd(Tridion.ContentManager.CoreService.Client.SchemaFieldsData)">
            <summary>
            Gets an XSD representation of the schema field definitions.
            </summary>
            <param name="schemaFieldsData">The schema fields which should be converted to XSD.</param>
            <returns>The root element of the XSD.</returns>
            <remarks>
            The XSD representation can be used to set a Schema's <see cref="P:Data.ContentManagement.SchemaData.Xsd" /> property.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Save(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Saves the state of the object to the database.
            </summary>
            <remarks>
            New objects (having the Id "tcm:0-0-0") will get a regular TCM URI after saving.
            Before actual saving the item to the database, business rules will be checked.
            </remarks>
            <param name="deltaData">An <see cref="T:Data.IdentifiableObjectData" /> which contains the properties to be modified.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is read back after saving. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>Object that is read back, with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is saved, if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">The only exception that is thrown.
            The information of the exceptions that are internally thrown, can be retrieved by the subCode.Name and Detail.ExceptionName.
            </exception>
            <example>
            <code>
            string id = "tcm:1-21";
            // Gets a component for editing
            IdentifiableObjectData component = (IdentifiableObjectData)_client.CheckOut(id, true, null);
            
            // Change title
            component.Title = "This is the new title";
            
            //Save and CheckIn the component
            try
            {
            _client.Save(component, null);
            }
            catch (FaultException&lt;CoreServiceFault&gt; fe)
            {
            string subCode = fe.Code.SubCode.Name;
            
            // ...
            }
            _client.CheckIn(id, null);
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Delete(System.String)">
            <summary>
            Permanently deletes the item or a specific version of the item from the
            system.
            </summary>
            <remarks>
            <para>The object should not be used anymore after this method has been called.</para>
            <para>
            For an instance of a class that derives from <see cref="T:VersionedItemData" />,
            the version that is loaded into the instance is taken into account. If the
            latest version of the item is loaded without a version specified in the
            TCM URI, the item will be fully deleted. If a specific
            version of the item is loaded, only that version will be deleted.
            </para>
            <para>
            If the object being deleted is a <see cref="T:Data.ContentManagement.KeywordData" />, the method <see cref="M:DeleteTaxonomyNode()" />
            offers more control over the handling of the keyword's descendants. The <see cref="M:Delete()" /> method
            is the equivalent of calling <see cref="M:DeleteTaxonomyNode()" /> method with an argument value of
            <see cref="F:RemoveParentFromChildren" />.
            </para>
            <para>
            If the object being deleted is a <see cref="T:Data.Workflow.ProcessInstanceData" />, then Process Instance will be deleted and
            workflow process will be terminated. The Process Instance won't exist anymore it will be archived to Process History.
            All subjects will be undone check-out after Delete operation is completed successfully.
            </para>
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.DeleteTaxonomyNode(System.String,Tridion.ContentManager.CoreService.Client.DeleteTaxonomyNodeMode)">
            <summary>
            Permanently deletes a taxonomy node from the system.
            </summary>
            <remarks>
            <para>The object should not be used anymore after this method has been called.</para>
            <para>A taxonomy node is a keyword. The parameter <paramref name="deleteTaxonomyNodeMode" />
            specifies what happens to the keyword's children.</para>
            </remarks>
            <param name="id">The identifier of the Keyword (TCM URI or WebDAV URL).</param>
            <param name="deleteTaxonomyNodeMode">Specifies how to handle the children of the deleted taxonomy node.</param>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <seealso cref="T:ntentManagement.DeleteTaxonomyNodeMode" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetDefaultData(Tridion.ContentManager.CoreService.Client.ItemType,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Get the default data for a new Item.
            </summary>
            <param name="itemType">The item type used to create the business object.</param>
            <param name="containerId">
            The identifier (TCM URI or WebDAV URL) of the organization item in which a Repository Local Object is to be created.
            Can be <c>null</c> for non Repository Local Objects.
            </param>
            <param name="readOptions">Specifies how the object should be read. If <c>null</c>, default read options are used.</param>
            <exception cref="T:System.ServiceModel.FaultException`1">
            Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.
            </exception>
            <returns>An <see cref="T:Data.IdentifiableObjectData" /> object representing the default data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Move(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Moves a Repository-Local Object to another Organizational Item.
            </summary>
            <remarks>
            Moving keyword items between different categories is not allowed.
            Moving a keyword to another keyword under the same category can not be done directly.
            It can be achieved by modifying its <see cref="P:ParentKeywords" /> property.
            Moving <see cref="T:Data.ContentManagement.CategoryData" /> and <see cref="T:BusinessProcessTypeData" /> items is currently not supported.
            </remarks>
            <param name="id">The identifier (TCM URI or WebDAV URL) of the item to move</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the destination Organizational Item</param>
            <param name="readBackOptions">Specifies how the Repository-Local Object is read back after moving. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A Repository-Local Object that is read back after moving, or <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Move2(System.String,System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Moves a Repository-Local Object to another Organizational Item.
            </summary>
            <remarks>
            Moving keyword items between different categories is not allowed.
            Moving a keyword to another keyword under the same category can not be done directly.
            It can be achieved by modifying its <see cref="P:ParentKeywords" /> property.
            Moving <see cref="T:Data.ContentManagement.CategoryData" /> and <see cref="T:BusinessProcessTypeData" /> items is currently not supported.
            </remarks>
            <param name="id">The identifier (TCM URI or WebDAV URL) of the item to move</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the destination Organizational Item</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after moving. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is moved,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Copy(System.String,System.String,System.Boolean,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Copies a Repository-Local Object into its current or another Organizational Item.
            </summary>
            <remarks>
            When copying a <see cref="T:Data.ContentManagement.KeywordData" />, the whole taxonomy branch is copied into the same or different <see cref="T:Data.ContentManagement.CategoryData" />.
            Copying a <see cref="T:Data.ContentManagement.KeywordData" /> into another <see cref="T:Data.ContentManagement.KeywordData" /> can not be done directly.
            It can be achieved by first copying it to the same <see cref="T:Data.ContentManagement.CategoryData" /> and then modifying the <see cref="P:ParentKeywords" /> property on the copied instance.
            Copying of <see cref="T:Data.ContentManagement.CategoryData" /> and <see cref="T:BusinessProcessTypeData" /> items is currently not supported.
            </remarks>
            <param name="id">The identifier (TCM URI or WebDAV URL) of the item to copy</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:OrganizationalItemData" /> where the copy should be created</param>
            <param name="makeUnique">Specifies whether a unique title should be generated if an item with the same title already exists in the destination.</param>
            <param name="readBackOptions">Specifies how the item's copy is read back after copying. If the parameter is <c>null</c>, the copy is not read back.</param>
            <returns>A <see cref="T:RepositoryLocalObjectData" /> representing the item's copy or <c>null</c></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetInstanceData(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Gets the default values of the Schema fields.
            </summary>
            <param name="schemaId">The identifier (TCM URI or WebDAV URL) of the Schema whose Instance Data is going to be returned.</param>
            <param name="containerItemId">The identifier (TCM URI or WebDAV URL) of an Organizational Item or Repository for which the Instance Data is going to be retrieved.</param>
            <param name="readOptions">Specifies how the Instance Data is returned.</param>
            <returns>Returns <see cref="T:Data.ContentManagement.InstanceData" /> which represents default values of the Schema fields.</returns>
            <remarks>
            If you do not specify <see cref="F:LoadFlags.Expanded" /> as <paramref name="readOptions" />.LoadFlags, only the mandatory
            embedded schema fields will be expanded. Specifying <see cref="F:LoadFlags.Expanded" /> will also
            expand embedded schema fields regardless if it is optional or not.
            Specifying <c>null</c> as <paramref name="readOptions" /> will behave similar as <see cref="F:LoadFlags.None" />.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.TryCheckOut(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Tries to check-out the item. If the item supports versioning and it's not checked-out to the current user yet, a check-out is attempted.
            If the item doesn't support versioning or the check-out fails, the current/latest version of the item is read.
            </summary>
            <seealso cref="M:CheckOut()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.ContentManagement.VersionedItemData" /> is read back after checking out. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.ContentManagement.VersionedItemData" /> object that is read back, with appropriate values according
            to the <see cref="P:ReadOptions.LoadFlags" /> after it is checked out,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.CheckOut(System.String,System.Boolean,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Checks-out the item. This means that a separate, editable version is created and a lock is placed on the item.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited.
            Checking-out an item locks the item so that it cannot be modified by others in the meantime.
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out.
            This method can be used to perform such a check-out.  This methods can also be used to place a permanent lock (by means of the permanentLock parameter).
            </remarks>
            <seealso cref="M:CheckIn()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="permanentLock">Indicates whether to place a permanent lock or a temporary (edit) lock.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:VersionedItemData" /> is read back after checking out. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:VersionedItemData" /> object that is read back, with appropriate values according
            to the <see cref="P:ReadOptions.LoadFlags" /> after it is checked out,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.CheckIn(System.String,System.Boolean,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Checks-in the item. This means that the editable version is turned into the new current version and the lock on the item is removed.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited.
            Checking-out an item locks the item so that it cannot be modified by others in the meantime.
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out.
            Alternatively, the <see cref="M:Update()" /> method can be used.
            </remarks>
            <seealso cref="M:CheckOut()" />
            <seealso cref="M:Update()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="removePermanentLock">If <c>true</c>, any permanent lock will be removed. If <c>false</c>, the check-in is not performed if there is a permanent lock on the item.</param>
            <param name="userComment">Set the user comment of this item. If <c>null</c> the user comment is not changed.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:VersionedItemData" /> is read back after checking in. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:VersionedItemData" /> object that is read back, with appropriate values according
            to the <see cref="P:ReadOptions.LoadFlags" /> after it is checked in,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Update(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Saves the state of the object to the database and checks in the item.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited.
            Checking-out an item locks the item so that it cannot be modified by others in the meantime.
            Furthermore, it creates a separate, editable version of the item that is only accessible to
            the user that performed the check-out.
            </remarks>
            <param name="deltaData">An <see cref="T:Data.IdentifiableObjectData">Data Object</see> which contains
            the properties to be modified.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is read back after saving. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>An <see cref="T:Data.IdentifiableObjectData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is saved and checked in,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <seealso cref="M:CheckIn()" />
            <seealso cref="M:CheckOut()" />
            <seealso cref="M:Save()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Create(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Creates an object, updates it with the given data and saves the state of the object to the database and checks in the item.
            </summary>
            <remarks>
            The check in is only performed if needed on <see cref="T:VersionedItemData" /> objects,
            and if it is not going into workflow.
            </remarks>
            <param name="data">An <see cref="T:Data.IdentifiableObjectData">Data Object</see> which contains
            the properties to be set.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:VersionedItemData" /> is read back after undoing the checkout. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>An <see cref="T:Data.IdentifiableObjectData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is saved and checked in,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <seealso cref="M:CheckIn()" />
            <seealso cref="M:Save()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.UndoCheckOut(System.String,System.Boolean,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Undoes a check-out. This means that the editable version is discarded and the lock on the item is removed.
            </summary>
            <remarks>
            A item that support versioning must be checked-out before it can be edited.
            Checking-out an item locks the item so that it cannot be modified by others in the meantime.
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out.
            This method can be used to undo the check-out and thus discard all changes made since the check-out.
            If the item was never checked-in before, this mean the item effectively gets deleted.
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="permanentLock">The type of the lock to be set on the Item.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.ContentManagement.VersionedItemData" /> is read back after undoing the checkout. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.ContentManagement.VersionedItemData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after the checkout has been undone,
            if <paramref name="readBackOptions" /> is not <c>null</c> and the object is not deleted as result of the UndoCheckOut. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Rollback(System.String,System.Boolean,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Rolls back the changes made to an item to a given version of the item.
            </summary>
            <param name="id">The identifier of the <see cref="T:VersionedItemData" /> to rollback. The identifier must be a TCM URI including the version to rollback to.</param>
            <param name="deleteVersions">Specifies whether to delete all versions after the given version or to create a new version which is a copy of the given version.</param>
            <param name="comment">Comment for the specified version. Usually used to list references to items that no longer exists.
            Maybe <c>null</c> or "".</param>
            <param name="readBackOptions">Specifies how the <see cref="T:VersionedItemData" /> is read back after rolling back. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:VersionedItemData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is rolled back,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <remarks>
            When using the CoreService, the <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Localize(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Localizes the item in the context Publication. This means that a local copy of the item is created in the context Publication.
            </summary>
            <remarks>
            Through Blueprinting, an item can be shared in multiple Publications.
            However, a shared item can only be changed in its owning Publication.
            In order to change the item in another (child) Publication, it must first be localized in that Publication.
            Localizing creates a separate version of the item in the child Publication (a so-called local copy).
            Note that some item types have restrictions on what can be changed on a local copy.
            For example, for Schemas, only the Labels (for instance Descriptions) can be changed.
            <para>
            By default, latest checked-in version of the versioned item is localized. However, dynamic version (the -v0) of checked-out item, item in workflow
            or new item can be localized if requested by user.
            </para>
            </remarks>
            <seealso cref="M:UnLocalize()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after localizing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:RepositoryLocalObjectData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is localized,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.UnLocalize(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Un-localizes the item in the context Publication. This means that the local copy is deleted and the item becomes a shared item again.
            </summary>
            <remarks>
            If there's no longer a need for a separate version of the item in a child publication, it can be un-localized.
            That way, it becomes a shared item again and therefore needn't be maintained separately.
            </remarks>
            <seealso cref="M:Localize()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after unlocalizing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:RepositoryLocalObjectData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is un-localized,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Localize2(System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Localizes the item in the context Publication. This means that a local copy of the item is created in the context Publication.
            </summary>
            <remarks>
            Through Blueprinting, an item can be shared in multiple Publications.
            However, a shared item can only be changed in its owning Publication.
            In order to change the item in another (child) Publication, it must first be localized in that Publication.
            Localizing creates a separate version of the item in the child Publication (a so-called local copy).
            Note that some item types have restrictions on what can be changed on a local copy.
            For example, for Schemas, only the Labels (for instance Descriptions) can be changed.
            <para>
            By default, latest checked-in version of the versioned item is localized. However, dynamic version (the -v0) of checked-out item, item in workflow
            or new item can be localized if requested by user.
            </para>
            </remarks>
            <seealso cref="M:UnLocalize()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after localizing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is localized,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.UnLocalize2(System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Un-localizes the item in the context Publication. This means that the local copy is deleted and the item becomes a shared item again.
            </summary>
            <remarks>
            If there's no longer a need for a separate version of the item in a child publication, it can be un-localized.
            That way, it becomes a shared item again and therefore needn't be maintained separately.
            </remarks>
            <seealso cref="M:Localize()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after unlocalizing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is un-localized,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Promote(System.String,System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Promotes the local item to one of its parent repository in the BluePrint.
            </summary>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL) to be promoted.</param>
            <param name="destinationRepositoryId">The identifier of the parent repository (TCM URI or WebDAV URL) where item should be promoted to.</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after promoting. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is promoted,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.
            <para>In case of validation errors or warnings, specific validation errors will be available
            in <see cref="P:ValidationErrors" /> colection, warnings will be available in <see cref="P:ValidationWarnings" /> colection.
            Multiple validation errors or warnings can be reported.</para></exception>
            <seealso cref="M:Demote()" />
            <remarks>Promote allows to move a repository-local object from repository where it is defined to one of its parent repositories up in the BluePrint.
            <para>Note that in order to successfully promote an item, all its dependencies must exist in the repository item will be promoted to.</para></remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Demote(System.String,System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Demotes the local item to one of the child repository in the BluePrint.
            </summary>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL) to be demoted.</param>
            <param name="destinationRepositoryId">The identifier of the child repository (TCM URI or WebDAV URL) where item should be demoted to.</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after demoting. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is demoted,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.
            <para>In case of validation errors or warnings, specific validation errors will be available
            in <see cref="P:ValidationErrors" /> colection, warnings will be available in <see cref="P:ValidationWarnings" /> colection.
            Multiple validation errors or warnings can be reported.</para></exception>
            <seealso cref="M:Promote()" />
            <remarks>Demote allows to move a repository-local object from repository where it is defined to one of the child repositories down in the BluePrint.
            <para>Note that in order to successfully demote an item, it must not be used, published or localized in any of the repositories it will be demoted from.</para></remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListTemplateTypes(System.Nullable{Tridion.ContentManager.CoreService.Client.ItemType})">
            <summary>
            Returns an IEnumerable of <see cref="T:TemplateTypes.TemplateType" /> configured in the <c>TemplateTypeRegistry</c>.
            </summary>
            <param name="itemType">Can be used to filter the template types on Item Type. If it is <c>null</c> all template types are returned. Supported <see cref="T:ItemType" />s are:
            <see cref="F:ItemType.ComponentTemplate" />, <see cref="F:ItemType.PageTemplate" /> and <see cref="F:ItemType.TemplateBuildingBlock" />.</param>
            <returns>IEnumerable  of <see cref="T:TemplateTypes.TemplateType" />.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListPublicationTypes">
            <summary>
            Returns an IEnumerable of <see cref="T:TypeRegistration.PublicationType" /> configured in the <c>TypeRegistrySection</c>.
            </summary>
            <returns>IEnumerable  of <see cref="T:TypeRegistration.PublicationType" />.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSystemWideListXml(Tridion.ContentManager.CoreService.Client.SystemWideListFilterData)">
            <summary>Gets a system-wide list of objects as XML.</summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            </param>
            <returns>The root element of the XML List (element name depends of the type of object requested).</returns>
            <seealso cref="M:GetSystemWideList()" />
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSystemWideList(Tridion.ContentManager.CoreService.Client.SystemWideListFilterData)">
            <summary>
            Gets a list of <see cref="T:Data.IdentifiableObjectData" /> objects constrained by the specified <see cref="T:Data.SystemWideListFilterData" />.
            </summary>
            <seealso cref="M:GetSystemWideListXml()" />
            <param name="filter">A <see cref="T:Data.SystemWideListFilterData" /> that constraints the list of returned <see cref="T:Data.IdentifiableObjectData" /> objects.</param>
            <returns>A list of <see cref="T:Data.IdentifiableObjectData" /> objects.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListXml(System.String,Tridion.ContentManager.CoreService.Client.SubjectRelatedListFilterData)">
            <summary>
            Gets a list of items related to specified subject as XML.
            </summary>
            <param name="id">TCM URI or WebDAV URL of item to get list on.</param>
            <param name="filter">The filterParameter which specifies which kind of
            list to retrieve. Also it can be used to filterParameter the items based on
            conditions and specify which attribute to include in the list.
            </param>
            <returns>The root element of the XML List (element name depends of
            the type of object requested).</returns>
            <remarks>
            There is no specific method (filter) for getting list of Destination Protocols or Virtual Folder type schemas. To get such lists System Repository Folder must be used (tcm:0-0-7)
            with set <see cref="P:ItemTypes" /> condition to Schema type and set <see cref="P:SchemaPurposes" /> to
            <see cref="F:ntentManagement.SchemaPurpose.Protocol" /> or <see cref="F:VirtualFolderType" />. For further details, please see examples section.
            </remarks>
            <example>
            The following example illustrates how to get a list of the protocol schemas:
            <code>
            OrganizationalItemItemsFilterData filter = new OrganizationalItemItemsFilterData();
            filter.ItemTypes = new[] { ItemType.Schema };
            filter.SchemaPurposes = new[] { SchemaPurpose.Protocol };
            XmlElement list = client.GetListXml("tcm:0-0-7", filter);
            </code>
            The following example illustrates how to get a list of the virtual folder types:
            <code>
            OrganizationalItemItemsFilterData filter = new OrganizationalItemItemsFilterData();
            filter.ItemTypes = new[] { ItemType.Schema };
            filter.SchemaPurposes = new[] { SchemaPurpose.VirtualFolderType };
            XmlElement list = client.GetListXml("tcm:0-0-7", filter);
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetList(System.String,Tridion.ContentManager.CoreService.Client.SubjectRelatedListFilterData)">
            <summary>
            Gets a list of items related to specified subject as Data Objects.
            </summary>
            <param name="id">TCM URI or WebDAV URL of item to get list on.</param>
            <param name="filter">A filter object that specifies which kind of
            list to retrieve. Also it can be used to filterParameter the items based on
            conditions and specify which attribute to include in the list.
            </param>
            <returns>A list of (partially loaded) Data Objects..</returns>
            <example>
            The following example illustrates how to get a list of an Organizational Item ancestors:
            <code>
            OrganizationalItemAncestorsFilterData filter = new OrganizationalItemAncestorsFilterData();
            IEnumerable&lt;IdentifiableObjectData&gt; list = client.GetList("tcm:1-2-64", filter);
            </code>
            The following example illustrates how to get a list of the protocol schemas:
            <code>
            OrganizationalItemItemsFilterData filter = new OrganizationalItemItemsFilterData();
            filter.ItemTypes = new[] { ItemType.Schema };
            filter.SchemaPurposes = new[] { SchemaPurpose.Protocol };
            IEnumerable&lt;IdentifiableObjectData&gt; list = client.GetList("tcm:0-0-7", filter);
            </code>
            The following example illustrates how to get a list of the virtual folder types:
            <code>
            OrganizationalItemItemsFilterData filter = new OrganizationalItemItemsFilterData();
            filter.ItemTypes = new[] { ItemType.Schema };
            filter.SchemaPurposes = new[] { SchemaPurpose.VirtualFolderType };
            IEnumerable&lt;IdentifiableObjectData&gt; list = client.GetList("tcm:0-0-7", filter);
            </code>
            </example>
            <remarks>
            <para>
            <see cref="T:TaxonomiesOwlFilterData" /> is not supported by this method.
            </para>
            <para>
            There is no specific method (filter) for getting list of Destination Protocols or Virtual Folder type schemas. To get such lists System Repository Folder must be used (tcm:0-0-7)
            with set <see cref="P:ItemTypes" /> condition to Schema type and set <see cref="P:SchemaPurposes" /> to
            <see cref="F:Protocol" /> or <see cref="F:VirtualFolderType" />. For further details, please see examples section.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListDirectoryServiceNames">
            <summary>
            Gets the names of the configured Directory Service servers.
            </summary>
            <returns>A string list containing the names of the configured Directory Services.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListWindowsDomainUsers(System.String)">
            <summary>
            Gets the list of users for the specified Windows domain
            </summary>
            <param name="domainName">The name of the Windows domain to get the user list for.</param>
            <returns>A list of <see cref="T:Security.WindowsUser" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListDirectoryServiceAllUsers(System.String)">
            <summary>
            Gets the list of users for the specified directory service name.
            </summary>
            <param name="directoryServiceName">Name of the directory service.</param>
            <returns>A list of <see cref="T:Security.DirectoryServiceUser" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListDirectoryServiceGroupMembers(System.String,System.String)">
            <summary>
            Gets list of directory service users belonging to a specific group.
            </summary>
            <param name="directoryServiceName">Name of the directory service.</param>
            <param name="groupDN">The distinguished name of the group to retrieve members of.</param>
            <returns>A list of <see cref="T:Security.DirectoryServiceUser" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListDirectoryServiceUsers(System.String,Tridion.ContentManager.CoreService.Client.DirectoryUsersFilter)">
            <summary>
            Gets a list of users found in the Directory Service using the directory users filter.
            </summary>
            <param name="directoryServiceName">Name of the directory service.</param>
            <param name="filter">The <see cref="T:Security.DirectoryUsersFilter" /> to filter with</param>
            <returns>A list of <see cref="T:Security.DirectoryServiceUser" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Classify(System.String,System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Classifies the item by adding the specified Keyword classification(s) (if valid according to Schema definition).
            </summary>
            <remarks>
            This function is intended to add one or more Keywords to all the Keyword fields of this item (content and/or metadata).
            Classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="keywordIds">A collection of Keyword identifiers to classify the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, a <see cref="T:ClassificationInfoData" /> object that contains the Item that was classified and a collection of <see cref="T:ClassificationDetailData" /> objects that contains information about all fields, where the requested keywords matched and were added.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.UnClassify(System.String,System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Unclassifies the item by removing the specified Keyword classification(s) (if valid according to Schema definition).
            </summary>
            <remarks>
            This function is intended to remove one or more Keywords from all the Keyword fields of this item (content and/or metadata).
            Classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="keywordIds">A collection of Keyword identifiers to unclassify (remove from) the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, a <see cref="T:ClassificationInfoData" /> object that contains the Item that was unclassified and a collection of <see cref="T:ClassificationDetailData" /> objects that contains information about all fields, where the requested keywords matched and were removed.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ReClassify(System.String,System.String[],System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Reclassifies the item by removing the specified Keyword classification(s) and replacing them with others specified (if valid according to Schema definition).
            </summary>
            <remarks>
            This function is intended to replace one or more Keywords in all the Keyword fields of this item (content and/or metadata).
            Classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="keywordIdsToRemove">A collection of Keyword identifiers to remove from the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="keywordIdsToAdd">A collection of Keyword identifiers to add to the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, a <see cref="T:ClassificationInfoData" /> object that contains the Item that was reclassified and a collection of <see cref="T:ClassificationDetailData" /> objects that contains information about all fields, where the requested keywords matched and were replaced.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.StartActivity(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Starts a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="readBackOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readBackOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the started Activity Instance.
            If <paramref name="readBackOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.SuspendActivity(System.String,System.String,System.Nullable{System.DateTime},System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Suspends a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="reason">The reason of the suspending activity.</param>
            <param name="resumeAt">Time, when suspending activity must be resumed.</param>
            <param name="resumeBookmark">The resume bookmark for suspending activities.</param>
            <param name="readBackOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readBackOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the suspended Activity Instance.
            If <paramref name="readBackOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
            <remarks>
            <para>This method can be called manually or by an automated Activity script. Workflow activity can continue execution after calling <see cref="M:ResumeActivity()" /> method.</para>
            <para>The current User must be the Owner or have Workflow Management Rights.</para>
            <para>An automated activity will be resumed automatically (if <paramref name="resumeAt" /> is specified).</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.RestartActivity(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Restarts a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="readBackOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter
            is <c>null</c>.</param>
            <returns>
            If <paramref name="readBackOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the restarted Activity
            Instance. If <paramref name="readBackOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
            <remarks>
            <para>
            This method can only be used for automatic Activity Instances. Activity State must be in
            <see cref="F:Workflow.ActivityState.Suspended" /> in order to restart the activity.
            </para>
            <para>
            The Workflow Agent sets the Activity Instance State to <see cref="F:Workflow.ActivityState.Suspended" /> as soon as an error occurs in an automated Activity.
            (i.e. automated activity instance with script that throws exception.)
            A user may retry the execution of the workflow activity using the Restart method after the fixing the error.
            </para>
            <para>
            If the Activity Instance is successfully restarted, it enters the <see cref="F:Workflow.ActivityState.Assigned" /> state.
            The Workflow Agent will pick it up again and set the Activity Instance state to <see cref="F:Workflow.ActivityState.Started" />.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ReAssignActivity(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Reassigns a Workflow Activity Instance to a new Trustee.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="newAssigneeId">The identifier of the new Assignee (TCM URI).</param>
            <param name="readBackOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readBackOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the reassigned Activity Instance.
            If <paramref name="readBackOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
            <remarks>
            <para>
            The Activity Instance must be in <see cref="F:Workflow.ActivityState.Assigned" /> or
            <see cref="F:Workflow.ActivityState.Started" /> state for this operation to succeed.
            Additionally, if the Activity State is Started, the provided Assignee can only be a User.
            </para>
            <para>
            The User performing the operation must have Read Permissions on every subject related to this Activity Instance
            and Workflow Management Rights on the context repository.
            </para>
            <para>
            If the Activity State is Started, only the Performers collection is updated in order to hold the new user.
            If The Activity State is Assigned, only the Assignee property is updated in order to hold the new trustee.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.FinishActivity(System.String,Tridion.ContentManager.CoreService.Client.ActivityFinishData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Finishes a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="activityFinishData">The data object that specifies some parameters for the Finish operation. Should be a <see cref="T:Data.Workflow.DecisionActivityFinishData" /> when finishing a decision Activity Instance.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the next Activity Instance that was created when finishing this Activity Instance, or <c>null</c> when there is no next Activity Instance.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ForceFinishProcess(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Forces finish of a Workflow Process Instance.
            </summary>
            <param name="processInstanceId">The identifier of the Process Instance (TCM URI).</param>
            <param name="approvalStatusId">The identifier of the Approval Status (TCM URI) which will be set to all Subjects of the related Work Items.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <remarks>
            <para>All the Subjects of the related Work Items will be checked-in after a force finish.</para>
            <para>Approval Status Id can be set <c>null</c>. In that case Approval Statuses of all the Subjects of the related Work Items will not be updated.</para>
            </remarks>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, a corresponding Process History Data object that represents archived Process Instance.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ResumeActivity(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Resumes a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the resumed Activity Instance.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
            <remarks>
            <para>
            The Activity Instance must be in <see cref="F:Workflow.ActivityState.Suspended" /> state for this operation to succeed.
            </para>
            <para>
            Operation can be performed by WFAgent, or activity owner, or by user with workflow management rights.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListQueueMessages(System.Int32)">
            <summary>
            Get a list of queue messages in the given queue.
            </summary>
            <param name="queueId">The identifier of the queue.</param>
            <returns>A set of <see cref="T:Data.Queuing.QueueMessageData" /> objects representing the messages in the queue.</returns>
            <remarks>
            The titles of queued items are not directly available in the returned <see cref="T:Data.Queuing.QueueMessageData" /> objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.PurgeQueue(System.Int32)">
            <summary>
            Purges the messages in the given Queue.
            </summary>
            <param name="queueId">The identifier of the queue.</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListQueues">
            <summary>
            Get a list of <see cref="T:Data.Queuing.QueueData" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Data.Queuing.QueueData" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ReadApplicationData(System.String,System.String)">
            <summary>
            Reads application-specific data which is either global or associated with a given subject.
            </summary>
            <param name="subjectId">
            The identifier (TCM URI or WebDAV URL) of the subject to which the application data should be associated.
            Use <c>null</c> to read global application data.</param>
            <param name="applicationId">The application identifier for which to read the application data.</param>
            <returns>An <see cref="T:Data.ApplicationData" /> instance or <c>null</c> if no such application-specific data is found.</returns>
            <seealso cref="M:ReadAllApplicationData()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ReadAllApplicationData(System.String)">
            <summary>
            Reads all application-specific data which is either global or associated with a given subject.
            </summary>
            <param name="subjectId">
            The identifier (TCM URI or WebDAV URL) of the subject to which the application data should be associated.
            Use <c>null</c> to read global application data.</param>
            <returns>A collection of <see cref="T:Data.ApplicationData" /> instances.</returns>
            <seealso cref="M:ReadApplicationData()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.SaveApplicationData(System.String,Tridion.ContentManager.CoreService.Client.ApplicationData[])">
            <summary>
            Saves application-specific data which is either global or associated with a given subject.
            </summary>
            <param name="subjectId">
            The identifier (TCM URI or WebDAV URL) of the subject to which the application data should be associated.
            Use <c>null</c> to save global application data.</param>
            <param name="applicationData">The application-specific data to save.
            Multiple <see cref="T:Data.ApplicationData" /> instances can be saved at once.</param>
            <remarks>
            If application-specific data already exists for the given application identifiers, it will be overwritten.
            </remarks>
            <seealso cref="M:DeleteApplicationData()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.DeleteApplicationData(System.String,System.String)">
            <summary>
            Deletes application-specific data which is either global or associated with a given subject.
            </summary>
            <param name="subjectId">
            The identifier (TCM URI or WebDAV URL) of the subject to which the application data should be associated.
            Use <c>null</c> to delete global application data.</param>
            <param name="applicationId">The application identifier for which to delete the application data.
            Can be <c>null</c> to delete all application data associated with the subject or all global application data.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetApplicationIds">
            <summary>
            Reads all application IDs for all application data stored in the system.
            </summary>
            <returns>
            A collection of <see cref="T:System.String" /> values representing all application IDs.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.PurgeApplicationData(System.String)">
            <summary>
            Deletes all (global and subject related) application data for a given application ID.
            </summary>
            <param name="applicationId">The application identifier for which to purge the application data.</param>
            <remarks>
            Typical usecase of this method is a clean up of all application data left by some application which was uninstalled.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ParsePredefinedBatchOperation(System.String)">
            <summary>
            Parses the predefined batch operation by string value.
            </summary>
            <param name="operation">The string representation of operation.</param>
            <returns><see cref="T:Batching.PredefinedBatchOperation" /> object if <paramref name="operation" /> can be parsed. Otherwise return <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetPredefinedBatchOperationName(Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation)">
            <summary>
            Gets the name of the predefined batch operation in string representation.
            </summary>
            <param name="operation">The <see cref="T:Batching.PredefinedBatchOperation" /> value.</param>
            <returns>String representation of <paramref name="operation" /> value.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ResolveItems(System.String[],Tridion.ContentManager.CoreService.Client.ResolveInstructionData,System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Gets a collection of Resolved Items that will be (un-/re-)published to the given targets if
            a (un-/re-)publish action is performed on the items identified by the given ids.
            </summary>
            <param name="ids">Collection of identifiers of the items to resolve (TCM URI or WebDAV URL). All items must be from the same publication.</param>
            <param name="resolveInstruction">The Resolve Instruction.</param>
            <param name="targetIdsOrPurposes">A collection of identifiers representing Publication Targets, Target Types or purposes of the <see cref="T:Data.CommunicationManagement.TargetTypeData" /> to publish to. This cannot contain a combination of them.</param>
            <param name="readOptions">Specifies how the Publish Context(s) are read back after resolving. If the parameter is <c>null</c>, the items are read with <see cref="F:LoadFlags.None" />.</param>
            <returns>A collection of Publish Contexts, containing the Resolved Items per Publish Context</returns>
            <remarks>
            <para>
            <paramref name="targetIdsOrPurposes" /> cannot contain a combination of identifiers representing Publication Targets, Target Types and purposes of the <see cref="T:Data.CommunicationManagement.TargetTypeData" />.
            </para>
            <para>
            If purposes are specified they will be resolved to a list of <see cref="T:Data.CommunicationManagement.TargetTypeData" /> based on the associated <see cref="P:BusinessProcessType" /> and <see cref="P:Purpose" />.
            </para>
            <para>
            If <see cref="P:IncludeChildPublications" /> is specified, then the set of resolved Target Types might be different per Repository due to a different associated Business Process Type.
            </para>
            <para>
            The access to Target Types are evaluated per Repository, hence they might be suppressed due to insufficient rights.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSearchResultsXml(Tridion.ContentManager.CoreService.Client.SearchQueryData)">
            <summary>
            Gets a list of items as <see cref="T:System.Xml.XmlElement" /> constrained by the specified <see cref="T:Data.ContentManagement.SearchQueryData" />.
            </summary>
            <param name="filter">A <see cref="T:Data.ContentManagement.SearchQueryData" /> that constraints the list of items.</param>
            <remarks>
            See element ListSearchResults in cm_xml.xsd for a definition of the XML list structure.
            </remarks>
            <returns>An XML element representing the root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSearchResultsXmlPaged(Tridion.ContentManager.CoreService.Client.SearchQueryData,System.Int32,System.Int32)">
            <summary>
            Gets a paged list of items as <see cref="T:System.Xml.XmlElement" /> constrained by the specified <see cref="T:Data.ContentManagement.SearchQueryData" />.
            </summary>
            <param name="filter">A <see cref="T:Data.ContentManagement.SearchQueryData" /> that constraints the list of items.</param>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <remarks>
            See element ListSearchResults in cm_xml.xsd for a definition of the XML list structure.
            </remarks>
            <returns>An XML element representing the root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSearchResults(Tridion.ContentManager.CoreService.Client.SearchQueryData)">
            <summary>
            Gets a list of <see cref="T:Data.IdentifiableObjectData" /> constrained by the specified <see cref="T:Data.ContentManagement.SearchQueryData" />.
            </summary>
            <param name="filter">A <see cref="T:Data.ContentManagement.SearchQueryData" /> that constraints the list of items.</param>
            <returns>A list of <see cref="T:Data.IdentifiableObjectData" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSearchResultsPaged(Tridion.ContentManager.CoreService.Client.SearchQueryData,System.Int32,System.Int32)">
            <summary>
            Gets a paged list of <see cref="T:Data.IdentifiableObjectData" /> constrained by the specified <see cref="T:Data.ContentManagement.SearchQueryData" />.
            </summary>
            <param name="filter">A <see cref="T:Data.ContentManagement.SearchQueryData" /> that constraints the list of items.</param>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <returns>A list of <see cref="T:Data.IdentifiableObjectData" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.RenderItem(System.String,System.String,Tridion.ContentManager.CoreService.Client.PublishInstructionData,System.String)">
            <summary>
            Renders the preview of an Item.
            </summary>
            <param name="itemId">The id or WebDAV url of the Item to render.</param>
            <param name="templateId">The optional id or WebDAV url of the Template to use in order to render the Item.</param>
            <param name="publishInstruction">The Publish Instruction to use in order to render the Item.</param>
            <param name="publicationTargetIdOrPurpose">The id of the Publication Target or purpose of the <see cref="T:TargetTypeData" /> to use. Parameter can be <c>null</c>.</param>
            <returns>An object containing the Rendered Item.</returns>
            <remarks>
            <para>
            If the rendering operation produces Binaries, the actual binary content can be downloaded by calling the <see cref="M:DownloadRenderedBinary()" /> method.
            Binaries will always be generated on a file location relative to the Content Manager temporary path. The returned <see cref="T:Data.Publishing.Rendering.BinaryData" /> objects
            will have an appropriate path in their <see cref="P:FilePath" /> property and callers of the <see cref="M:DownloadRenderedBinary()" /> method can
            use that value to retrieve the binary content as a stream.
            </para>
            <para>
            If the <paramref name="templateId" /> is <see langword="null" /> when a Page is rendered, the template of the Page is used otherwise the <paramref name="templateId" /> is used.
            </para>
            <para>
            <paramref name="publicationTargetIdOrPurpose" /> will be resolved to a <see cref="T:TargetTypeData" /> based on the associated <see cref="P:BusinessProcessType" /> and <see cref="P:Purpose" />.
            </para>
            </remarks>
            <seealso cref="M:PreviewItem()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.PreviewItem(Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectData,Tridion.ContentManager.CoreService.Client.TemplateData,Tridion.ContentManager.CoreService.Client.PublishInstructionData,System.String)">
            <summary>
            Renders the preview for a given item (and template) with optionally delta data applied. That is: this method can preview non-persisted/transient changes to the item and/or template.
            </summary>
            <param name="itemData">The delta data for the item to render. The specified delta data is merged into the persisted state of the item referred to by the <see cref="P:Data.IdentifiableObjectData.Id" /> property. If the <c>Id</c> property is <c>tcm:0-0-0</c>, the delta is merged into default data. In this case, the <see cref="P:OrganizationalItem" /> property must be set.</param>
            <param name="templateData">The delta data for the Template to render with  (can be <c>null</c>, see remarks). The specified delta data is merged into the persisted state of the template referred to by the <see cref="P:Data.IdentifiableObjectData.Id" /> property. If the <c>Id</c> property is <c>tcm:0-0-0</c>, the delta is merged into default data. In this case, the <see cref="P:OrganizationalItem" /> property must be set.</param>
            <param name="publishInstruction">The Publish Instruction to use in order to render the Item.</param>
            <param name="publicationTargetId">The id of the Publication Target to use. Can be <c>null</c>. Current implementation ignores <paramref name="publicationTargetId" /> while generating the preview.</param>
            <returns>A <see cref="T:Data.Publishing.Rendering.RenderedItemData" /> object containing the rendered content.</returns>
            <remarks>
            <para>
            <paramref name="templateData" /> can be <c>null</c>.
            In case of <c>null</c> <paramref name="templateData" />, default component template of publication will be used for rendering of components and default default page template for rendering of pages.
            Exception will be thrown if template property is not set and values of default templates can’t be obtained.
            </para>
            </remarks>
            <seealso cref="M:RenderItem()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Publish(System.String[],Tridion.ContentManager.CoreService.Client.PublishInstructionData,System.String[],System.Nullable{Tridion.ContentManager.CoreService.Client.PublishPriority},Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Publishes, re-publishes and/or deploys the <see cref="T:Data.IdentifiableObjectData" />s and related items to given target(s).
            </summary>
            <param name="ids">Collection of identifiers of the items to publish (TCM URI or WebDAV URL).</param>
            <param name="publishInstruction">The instruction for the publish action.</param>
            <param name="targetIdsOrPurposes">A collection of identifiers representing Publication Targets, Target Types or purposes of the <see cref="T:TargetTypeData" /> to publish to. This cannot contain a combination of them.</param>
            <param name="priority">The priority of the publish action. Passing <c>null</c> will use the priority from the Publication Target.</param>
            <param name="readOptions">Specifies how the Publish Transaction(s) are read back after publishing. If the parameter is <c>null</c>, the items are read with <see cref="F:LoadFlags.None" />.</param>
            <remarks>
            <para>
            <paramref name="targetIdsOrPurposes" /> cannot contain a combination of identifiers representing Publication Targets, Target Types and purposes of the <see cref="T:TargetTypeData" />.
            </para>
            <para>
            If purposes are specified they will be resolved to a list of <see cref="T:TargetTypeData" /> based on the associated <see cref="P:BusinessProcessType" /> and <see cref="P:Purpose" />.
            </para>
            <para>
            If <see cref="P:IncludeChildPublications" /> is specified, then the set of resolved Target Types might be different per Repository due to a different associated Business Process Type.
            </para>
            <para>
            The access to Target Types are evaluated per Repository, hence they might be suppressed due to insufficient rights.
            </para>
            </remarks>
            <returns>A collection of <see cref="T:Data.Publishing.PublishTransactionData" /></returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.UnPublish(System.String[],Tridion.ContentManager.CoreService.Client.UnPublishInstructionData,System.String[],System.Nullable{Tridion.ContentManager.CoreService.Client.PublishPriority},Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Un-publishes the collection of <see cref="T:Data.IdentifiableObjectData" /> instances from given target(s).
            </summary>
            <param name="ids">Collection of identifiers of the items to unpublish (TCM URI or WebDAV URL).</param>
            <param name="unPublishInstruction">The instruction for the un-publish action.</param>
            <param name="targetIdsOrPurposes">A collection of identifiers representing Publication Targets, Target Types or purposes of the <see cref="T:TargetTypeData" /> to un-publish from. This cannot contain a combination of them.</param>
            <param name="priority">The priority of the un-publish action. Passing <c>null</c> will use the priority from the Publication Target.</param>
            <param name="readOptions">Specifies how the Publish Transaction(s) are read back after un-publishing. If the parameter is <c>null</c>, the items are read with <see cref="F:LoadFlags.None" />.</param>
            <remarks>
            <para>
            <paramref name="targetIdsOrPurposes" /> cannot contain a combination of identifiers representing Publication Targets, Target Types and purposes of the <see cref="T:TargetTypeData" />.
            </para>
            <para>
            If purposes are specified they will be resolved to a list of <see cref="T:TargetTypeData" /> based on the associated <see cref="P:BusinessProcessType" /> and <see cref="P:Purpose" />.
            </para>
            <para>
            If <see cref="P:IncludeChildPublications" /> is specified, then the set of resolved Target Types might be different per Repository due to a different associated Business Process Type.
            </para>
            <para>
            The access to Target Types are evaluated per Repository, hence they might be suppressed due to insufficient rights.
            </para>
            </remarks>
            <returns>A collection of <see cref="T:Data.Publishing.PublishTransactionData" /></returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.IsPublished(System.String,System.String,System.Boolean)">
            <summary>
            Returns whether the given item is published to the specified Publishing Target.
            </summary>
            <param name="itemId">The identifier of the item (TCM URI or WebDAV URL) to get the publish state for.</param>
            <param name="publishingTargetIdOrPurpose">
            <para>The TCM URI of the Target Type or Publication Target or Target Purpose of the <see cref="T:TargetTypeData" /> to which the item should be published.</para>
            <para>If URI of the Publishing Target (Target Type or Publication Target or Target Purpose) is not specified or URI is set to "tcm:0-0-0"
            then the published state of the item will be checked against all existing Publishing Targets and if the item is published to at least
            one Publishing Target then return value will be <c>true</c>; otherwise, <c>false</c>.</para></param>
            <param name="isPublishedInContext">Indicates if state should be returned regardless of the context Publication.
            If <c>true</c> check if item is published in the context Publication only. If <c>false</c> check if the item is published in any Publication.</param>
            <returns>
            <c>true</c> if the given item is published to the specified Publishing Target or any Publishing Target when none specified.
            </returns>
            <seealso cref="P:IsPublishedInContext" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetWorkItemSnapshot(System.String)">
            <summary>
            Gets the snapshot of the Activity of the given Work Item.
            </summary>
            <param name="workItemId">The identifier of the Work Item (TCM URI).</param>
            <returns>The snapshot of the Activity of the given Work Item.</returns>
            <remarks>
            Returns <c>null</c> if there is no snapshot stored or storing snapshot is turned off or the Work Item is not finished yet.
            <para>
            If the snapshot contains Binaries, the actual binary content can be downloaded by calling the <see cref="M:DownloadRenderedBinary()" /> method.
            Binaries will always be generated on a file location relative to the Content Manager temporary path. The returned <see cref="T:Data.Publishing.Rendering.BinaryData" /> objects
            will have an appropriate path in their <see cref="P:Data.Publishing.Rendering.BinaryData.FilePath" /> property and callers of the <see cref="M:DownloadRenderedBinary()" /> method can
            use that value to retrieve the binary content as a stream.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetListPublishInfo(System.String)">
            <summary>
            Gets a list of publish information for each target the item was published to.
            </summary>
            <param name="itemId">The identifier of the item (TCM URI or WebDAV URL).</param>
            <returns>
            Returns a list of <see cref="T:Data.Publishing.PublishInfoData" />
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.CastActions(System.Int32)">
            <summary>
            Gets the actions (allowed or denied) in an enumeration format.
            </summary>
            <param name="numericActions">Actions in numeric format.</param>
            <returns>Actions in enumeration format.</returns>
            <remarks>
            If your client supports casting of deny and allowed actions please do so, it saves you a call to the web service.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ValidateXml(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData)">
            <summary>
            Validates Xml of input object.
            </summary>
            <param name="data">An <see cref="T:Data.IdentifiableObjectData" /> object which Xml must be validated.</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.IsValidTridionWebSchemaXml(Tridion.ContentManager.CoreService.Client.SchemaData)">
            <summary>
            Determines whether Schema XSD is valid Tridion Web Schema or not.
            </summary>
            <param name="data">An <see cref="T:Data.ContentManagement.SchemaData" /> object which Xml must be validated.</param>
            <returns>
            <c>true</c> if Schema XSD is valid Tridion Web Schema; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSubjectIdsWithApplicationData(System.String)">
            <summary>
            Gets a list of <see cref="T:TcmUri" /> of subjects which have application data of the specified <paramref name="applicationId" /> associated.
            </summary>
            <param name="applicationId">The application Id whose subjects needs to be retrieved.</param>
            <returns>An enumerable of <see cref="T:TcmUri" /> of subjects associated with the specified application data.</returns>
            <remarks>
            If the specified <paramref name="applicationId" /> has associated Global Application Data, then, the returned list will contain tcm:0-0-0.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ReadApplicationDataForSubjectsIds(System.String[],System.String[])">
            <summary>
            Gets a dictionary of <see cref="T:Data.ApplicationData" /> with subjectId as the key and a set of associated <see cref="T:Data.ApplicationData" /> as value.
            </summary>
            <param name="subjectIds">The subject Ids whose <see cref="T:Data.ApplicationData" /> needs to be retrieved.</param>
            <param name="applicationIds">The application Ids whose <see cref="T:Data.ApplicationData" /> needs to be retrieved.</param>
            <returns>A dictionary of <see cref="T:Data.ApplicationData" /> with subjectId as the key and a set of associated <see cref="T:Data.ApplicationData" /> as value.</returns>
            <remarks>
            <p>
            The <paramref name="subjectIds" /> can contain <c>null</c>, <c>tcm:0-0-0</c> or <c>empty string</c> to read global application data.
            However when returning, the global application data will always be associated with <c>tcm:0-0-0</c> as key even if <c>null</c> was passed in <paramref name="subjectIds" />.
            </p>
            <p>
            The <paramref name="applicationIds" /> can be <c>null</c> to read all Application Data.
            </p>
            <p>
            In case a subject does not exist or Application Data does not exist the returned dictionary will contain <c>empty collection</c>. However, it is recommended to ensure
            that <paramref name="subjectIds" /> being passed in all exists, as events will be fired for all passed in <paramref name="subjectIds" />, some event handler
            might try to load the item and fail.
            </p>
            <p>
            Keep in mind that this is a bulk retrieval method, and using this method with very small amount of <paramref name="subjectIds" /> might actually perform worse.
            Also using <c>null</c> for <paramref name="applicationIds" /> is not recommended, as it may cause significant performance impact. Ideally this method should be used
            with a set of <paramref name="subjectIds" /> and only the required <paramref name="applicationIds" />.
            </p>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSecurityDescriptorsForSubjectsIds(System.String[])">
            <summary>
            Gets a dictionary of <see cref="T:Data.Security.SecurityDescriptorData" /> with subjectId as the key and a set of associated <see cref="T:Data.Security.SecurityDescriptorData" /> of the current user as value.
            </summary>
            <param name="subjectIds">The subject Ids whose <see cref="T:Data.Security.SecurityDescriptorData" /> needs to be retrieved.</param>
            <returns>A dictionary of <see cref="T:Data.Security.SecurityDescriptorData" /> with subjectId as the key and a set of associated <see cref="T:Data.Security.SecurityDescriptorData" /> of the current user as value.</returns>
            <remarks>
            For root Organizational Items the value of the <see cref="P:Data.Security.SecurityDescriptorData.Permissions" /> is always <see cref="F:Security.Permissions.None" />.
            Use the <see cref="P:Data.Security.SecurityDescriptorData.Rights" /> to check if the user can read, write, localize or delete the item.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetContentSecurityDescriptorsForOrgItemIds(System.String[])">
            <summary>
            Gets Content Security Descriptors for a set of Organizational Items.
            </summary>
            <param name="organizationalItemIds">The Ids of the Organization Item whose Content Security Descriptor needs to be retrieved.</param>
            <returns>A dictionary with subjectId as the key and a set of associated Content Security Descriptor as value.</returns>
            <remarks>Content Security Descriptor specifies the Rights and Permissions that the current user has on the content of the Organizational Item.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ReIndex(System.String)">
            <summary>
            Rebuilds the full-text search index for a given item.
            </summary>
            <param name="id">The subject Id whose will be re-indexed.</param>
            <remarks>
            If <paramref name="id" /> is <c>null</c> then Re-index process for all repositories.
            If <paramref name="id" /> is <see cref="T:Data.ContentManagement.RepositoryData" /> object then Re-index process for specified repository.
            Otherwise exception will be thrown.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.CastPredefinedQueue(System.Int32)">
            <summary>
            Gets the predefined queue id in an enumeration format.
            </summary>
            <param name="queueId">Queue id in numeric format.</param>
            <returns>Predefined queue id in enumeration format; <c>null</c>, if <paramref name="queueId" /> is not predefined.</returns>
            <remarks>
            If your client supports casting please do so, it saves you a call to the web service.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.PurgeOldVersions(Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData)">
            <summary>
            Purges the old versions, according to <see cref="T:Data.PurgeOldVersionsInstructionData" /> object.
            </summary>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <example>
            <code>
            PurgeOldVersionsInstructionData purgeOldVersionsInstructionData = new PurgeOldVersionsInstructionData();
            purgeOldVersionsInstructionData.Containers = new LinkToIdentifiableObjectData[] { new LinkToIdentifiableObjectData() { IdRef = "tcm:0-67-1" }, new LinkToIdentifiableObjectData() { IdRef = "tcm:67-706-4" } };
            _client.PurgeOldVersions(purgeOldVersionsInstructionData);
            </code>
            </example>
            <param name="instruction">The purge instruction.</param>
            <returns>The count of purged versions.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.Impersonate(System.String)">
            <summary>
            Impersonates the user with the given user name.
            </summary>
            <remarks>
            The real (authenticated) user must be configured in TCM as an impersonation user (unless he is "impersonating" himself).
            If the real user is unknown (because anonymous access to the service is allowed), this method cannot be used.
            </remarks>
            <param name="userName">The account name of the user to impersonate.</param>
            <returns>User as an <see cref="T:Data.Security.UserData" /> object.</returns>
            <seealso cref="M:CoreService201603.GetCurrentUser" />
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ImpersonateWithToken(Tridion.ContentManager.CoreService.Client.AccessTokenData)">
            <summary>
            Impersonates the user with the given accessToken.
            </summary>
            <param name="accessToken">The accessToken of a user to impersonate.</param>
            <remarks>
            The real (authenticated) user must be configured in TCM as an impersonation user (unless he is "impersonating" himself).
            If the real user is unknown (because anonymous access to the service is allowed), this method cannot be used.
            </remarks>
            <returns>User as an <see cref="T:Data.Security.AccessTokenData" /> object.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ImpersonateWithClaims(Tridion.ContentManager.CoreService.Client.ClaimData[])">
            <summary>
            Impersonates the user with provided claims.
            </summary>
            <param name="claims">A set of claims to impersonate with.</param>
            <returns>Returns access token for provided claims. </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.TerminateSession">
            <summary>
            Disposes the current session. The communication channel can not be used anymore after this method has been called.
            </summary>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSessionId">
            <summary>
            Gets the identifier of the current session.
            </summary>
            <returns>Session identifier.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.SetSessionContextData(Tridion.ContentManager.CoreService.Client.ApplicationData)">
            <summary>
            Sets the application user-defined data.
            </summary>
            <param name="appData">The application data object to set. If its <see cref="P:Data.ApplicationData.Data" /> property is set to null, the entire object will be removed from the context.</param>
            <remarks>
            This data can be used to set some application specific information about context of the current session.
            For example, a custom data can be passed from application to event handlers.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.SetSessionTransactionTimeout(System.Int32)">
            <summary>
            Sets the session transaction timeout in seconds.
            </summary>
            <param name="transactionTimeout">The transaction timeout.</param>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.GetSessionTransactionTimeout">
            <summary>
            Gets the session transaction timeout in seconds.
            </summary>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <returns>
            Session transaction timeout in seconds.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.StartCaching">
            <summary>
            Starts caching on the session.
            </summary>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <returns>
            <c>false</c>, if cache was already enabled; otherwise, <c>true</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.StopCaching">
            <summary>
            Stops caching on the session.
            </summary>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <remarks>Always disable caching on the session. Do not call this method if <see cref="M:StartCaching" /> returned <c>false</c>.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.SetWebDavUrlPrefix(System.String)">
            <summary>
            Sets the WebDav url prefix used for current Session.
            </summary>
            <param name="prefix">The WebDav prefix.</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.EnlistInTransaction">
            <summary>
            Forces client to enlist in a pending transaction if any.
            </summary>
            <remarks>
            When a transactional Core Service method is called, WCF flows the client transaction to the server and it is stored in the Core Service's session state.
            When a non-transactional (read-only) Core Service method is called, WCF doesn't flow the client transaction to the server, so initially the server is unaware of the context transaction.
            Particularly, that is a problem in complex scenarios when client application has two or more connections to CoreService and needs to read uncommitted data that were created by one client
            using the other client connection. In order to overcome that problem, client that is reading uncommitted data should first enlist itself in the perding transaction using this method.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.ElevatePrivileges(Tridion.ContentManager.CoreService.Client.Privileges)">
            <summary>
            Elevates  priveleges of the current user to specified value.
            </summary>
            <remarks>
            The real (authenticated) user must be configured in TCM as an impersonation user.
            If the user is unknown (because anonymous access to the service is allowed), this method cannot be used.
            </remarks>
            <param name="privileges">The privileges which need to be temporary set.</param>
            <returns>User as an <see cref="T:Data.Security.UserData" /> object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService.RestorePrivileges">
            <summary>
            Restores privileges of the current user to original value which was before elevation.
            </summary>
            <returns>User as an <see cref="T:Data.Security.UserData" /> object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.SessionAwareCoreServiceClient.CheckIn(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Overload for the pre-2012 contract signature
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.SessionAwareCoreServiceClient.ConvertXsdToSchemaFields(System.Xml.Linq.XElement,Tridion.ContentManager.CoreService.Client.SchemaPurpose,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Converts schema XSD to schema fields.
            Overloaded method for ConvertXsdToSchemaFields(xsd, purpose, string.Empty, readOptions);
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.IStreamDownload">
            <summary>
            This interface provides functionality to download binary from multimedia component and templates for CoreService201603 EndPoints to provide Versioning of Core Service Interface.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.IStreamDownload.DownloadBinaryContent(System.String)">
            <summary>
            Downloads binary content from multimedia component or template that supports binary data.
            </summary>
            <param name="itemIdOrTempFileId">The identifier of the multimedia component or template (TCM URI) or uploaded temporary file id.</param>
            <returns>Stream with downloaded binary content from specified item.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.IStreamDownload.DownloadBinaryContentByUser(System.String,Tridion.ContentManager.CoreService.Client.AccessTokenData)">
            <summary>
            Downloads binary content from multimedia component or template that supports binary data by specified user.
            </summary>
            <param name="itemIdOrTempFileId">The identifier of the multimedia component or template (TCM URI) or uploaded temporary file id.</param>
            <param name="accessToken">The <see cref="T:Data.Security.AccessTokenData" /> of the user.</param>
            <returns>
            Stream with downloaded binary content from specified item.
            </returns>
            <remarks>
            <para>
            The real (authenticated) user must be configured in TCM as an impersonation user (unless he is "impersonating" himself).
            If the real user is unknown (because anonymous access to the service is allowed), this method cannot be used.
            </para>
            <para>
            <paramref name="accessToken" /> can be retrieved from <see cref="M:essionAwareCoreService201603.Impersonate()" /> or <see cref="!:ICoreService2012.GetCurrentUser" /> method call.
            </para>
            </remarks>
            <seealso cref="M:CoreService201603.GetCurrentUser" />
            <seealso cref="M:essionAwareCoreService201603.Impersonate()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.IStreamDownload.DownloadRenderedBinary(System.String)">
            <summary>
            Downloads binary content for a previously rendered item.
            </summary>
            <param name="path">The path of the binary that was generated by a render operation.</param>
            <returns>A Stream with the binary content of a rendered item.</returns>
            <remarks>
            <para>
            When rendering an Item through the Core Service and that rendering operation generates binary content,
            the file path for that binary content is stored in the <see cref="P:Data.Publishing.Rendering.BinaryData.FilePath" /> property of
            a <see cref="T:Data.Publishing.Rendering.BinaryData" /> object. Using that file path as an argument to this method will retrieve the
            binary content as a stream.
            </para>
            </remarks>
            <seealso cref="P:Data.Publishing.Rendering.BinaryData.FilePath" />
            <seealso cref="M:CoreService201603.RenderItem()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.IStreamDownload.DownloadExternalBinaryContent(System.String)">
            <summary>
            Downloads binary content for a given external URI.
            </summary>
            <param name="uri">The URI of the external binary.</param>
            <returns>Stream with downloaded binary content for the specified external URI.</returns>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.IStreamUpload">
            <summary>
            This interface provides functionality to upload binary into multimedia component or template for CoreService201603 EndPoints to provide Versioning of Core Service Interface.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.IStreamUpload.UploadBinaryByteArray(Tridion.ContentManager.CoreService.Client.AccessTokenData,System.Byte[])">
            <summary>
            Uploads binary content into temporary file, which can be passed to <see cref="T:Data.ContentManagement.BinaryContentData" /> object of multimedia component or template.
            </summary>
            <param name="accessToken">The accessToken of the user.</param>
            <param name="data">An array of bytes, which contains binary content</param>
            <remarks><para>To successfully upload a binary to the web service you should first call <see cref="M:UploadBinaryContent()" /> and then assign the returned id of the uploaded temporary file to the <see cref="P:UploadFromFile" />.</para>
            <para>This method saves the binary to the configured temporary location.</para>
            <para>The <see cref="M:UploadBinaryContent()" /> method is the preffered way for uploading binary content.
            This method is provided only for interoperability purpose with clients which don't support streaming.</para>
            </remarks>
            <returns>Id of the uploaded temporary file on the server - use it to upload binary content into multimedia component or template.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch">
            <summary>
            This interface provides functionality for creating predefined Batch operation.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.ImpersonateBatch(System.String)">
            <summary>
            Impersonates the batch with the given user name.
            </summary>
            <remarks>
            The real (authenticated) user must be configured in TCM as an impersonation user (unless he is "impersonating" himself).
            If the real user is unknown (because anonymous access to the service is allowed), this method cannot be used.
            </remarks>
            <param name="userName">The account name of the user to impersonate.</param>
            <returns>User as an <see cref="T:Data.Security.UserData" /> object.</returns>
            <seealso cref="M:201603.GetCurrentUser" />
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.ImpersonateBatchWithToken(Tridion.ContentManager.CoreService.Client.AccessTokenData)">
            <summary>
            Impersonates the batch with the given access token.
            </summary>
            <remarks>
            The real (authenticated) user must be configured in TCM as an impersonation user (unless he is "impersonating" himself).
            If the real user is unknown (because anonymous access to the service is allowed), this method cannot be used.
            </remarks>
            <param name="accessTokenData">The account name of the user to impersonate.</param>
            <returns>User as an <see cref="T:Data.Security.UserData" /> object.</returns>
            <seealso cref="M:201603.GetCurrentUser" />
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.ImpersonateBatchWithClaims(Tridion.ContentManager.CoreService.Client.ClaimData[])">
            <summary>
            Impersonates the user with provided claims.
            </summary>
            <param name="claims">A set of claims to impersonate with.</param>
            <returns>Returns access token for provided claims. </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchLocalize(Tridion.ContentManager.CoreService.Client.WeakLink[])">
            <summary>
            Creates a batch for localizing input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <returns>Returns the TcmUri of created batch. </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchUnLocalize(Tridion.ContentManager.CoreService.Client.WeakLink[])">
            <summary>
            Creates a batch for unlocalizing input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <returns>Returns the TcmUri of created batch. </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchPromote(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction)">
            <summary>
            Creates a batch for promoting input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="destinationRepositoryId">The identifier of the destination (TCM URI or WebDAV URL) where item should be promoted to.</param>
            <param name="instruction"><para>Controls how individual promote operations will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode operation will be stopped before doing actual changes in DB if any error is found.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode operation will be stopped before doing actual changes in DB if any error or warning is found.</para>
            <para>Note that in case of preliminary stopping of the operation, processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <returns>Returns the TCM URI of created batch.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchDemote(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction)">
            <summary>
            Creates a batch for demoting input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="destinationRepositoryId">The identifier of the destination (TCM URI or WebDAV URL) where item should be demoted.</param>
            <param name="instruction"><para>Controls how demote operations will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode operation will be stopped before doing actual changes in DB if any error is found.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode operation will be stopped before doing actual changes in DB if any error or warning is found.</para>
            <para>Note that in case of preliminary stopping of the operation, processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <returns>Returns the TCM URI of created batch.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchCopy(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String,System.Boolean)">
            <summary>
            Creates a batch for copying input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="destinationId">The identifier of the destination (TCM URI or WebDAV URL) where the item's copy should be created.</param>
            <param name="makeUnique">Specifies whether a unique title should be generated if an item with the same title already exists in the destination.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchMove(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String)">
            <summary>
            Creates a batch for moving input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="destinationId">The identifier of the destination (TCM URI or WebDAV URL) where the item will be moved to.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchCheckIn(Tridion.ContentManager.CoreService.Client.WeakLink[],System.Boolean,System.String)">
            <summary>
            Creates a batch for check-in input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="removePermanentLock">If <c>true</c>, any permanent lock will be removed. If <c>false</c>, the check-in is not performed if there is a permanent lock on the item.</param>
            <param name="userComment">Set the user comment of this item. If <c>null</c> the user comment is not changed.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchCheckOut(Tridion.ContentManager.CoreService.Client.WeakLink[],System.Boolean)">
            <summary>
            Creates a batch for check-out input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="permanentLock">Indicates whether to place a permanent lock or a temporary (edit) lock.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchDelete(Tridion.ContentManager.CoreService.Client.WeakLink[])">
            <summary>
            Creates a batch for deleting input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchPublish(Tridion.ContentManager.CoreService.Client.WeakLink[],Tridion.ContentManager.CoreService.Client.PublishInstructionData,System.String[],System.Nullable{Tridion.ContentManager.CoreService.Client.PublishPriority})">
            <summary>
            Creates a batch for publishing input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="publishInstruction">The instruction for the publish action.</param>
            <param name="targetIdsOrPurposes">A collection of identifiers representing Publication Targets, Target Types or purposes of the <see cref="T:Data.CommunicationManagement.TargetTypeData" /> to publish to. This cannot contain a combination of them.</param>
            <param name="priority">The priority of the publish action. Passing <c>null</c> will use the priority from the Publication Target.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchUnPublish(Tridion.ContentManager.CoreService.Client.WeakLink[],Tridion.ContentManager.CoreService.Client.UnPublishInstructionData,System.String[],System.Nullable{Tridion.ContentManager.CoreService.Client.PublishPriority})">
            <summary>
            Creates a batch for unpublishing input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="unPublishInstruction">The instruction for the un-publish action.</param>
            <param name="targetIdsOrPurposes">A collection of identifiers representing Publication Targets, Target Types or purposes of the <see cref="T:Data.CommunicationManagement.TargetTypeData" /> to un-publish from. This cannot contain a combination of them.</param>
            <param name="priority">The priority of the publish action. Passing <c>null</c> will use the priority from the Publication Target.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchUndoCheckOut(Tridion.ContentManager.CoreService.Client.WeakLink[],System.Boolean)">
            <summary>
            Creates a batch for undo check-out for input subjects.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="permanentLock">The type of the lock to be set on the Item.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchStartActivity(Tridion.ContentManager.CoreService.Client.WeakLink[])">
            <summary>
            Creates a batch for starting a workflow activity for input subjects.
            </summary>
            <param name="activityInstanceLinks">The list identifier of the Activity Instance items (TCM URI) with optional Title.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchFinishActivity(Tridion.ContentManager.CoreService.Client.WeakLink[],Tridion.ContentManager.CoreService.Client.ActivityFinishData)">
            <summary>
            Creates a batch for finishing a workflow activity for input subjects.
            </summary>
            <param name="activityInstanceLinks">List of Activity Instance Ids with optional Title.</param>
            <param name="activityFinishData">The data object that specifies some parameters for the Finish operation. Should be a <see cref="T:Data.Workflow.DecisionActivityFinishData" /> when finishing a decision Activity Instance.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchForceFinishProcess(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String)">
            <summary>
            Creates a batch for force finishing Workflow Process Instances.
            </summary>
            <param name="processInstanceLinks">List of Process Instance Ids with optional Title.</param>
            <param name="approvalStatusId">The identifier of the Approval Status (TCM URI) which will be set to all Subjects of the related Work Items..</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchClassify(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String[])">
            <summary>
            Creates a batch for classifying items by adding the specified Keyword classification(s).
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="keywordIds">A collection of Keyword identifiers to classify the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchUnClassify(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String[])">
            <summary>
            Creates a batch for unclassifying items by removing the specified Keyword classification(s).
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="keywordIds">A collection of Keyword identifiers to unclassify (remove from) the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchReClassify(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String[],System.String[])">
            <summary>
            Creates a batch for reclassifying items by removing the specified Keyword classification(s) and replacing them with others specified.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="keywordIdsToRemove">A collection of Keyword identifiers to remove from the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="keywordIdsToAdd">A collection of Keyword identifiers to add to the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchDeleteTaxonomyNode(Tridion.ContentManager.CoreService.Client.WeakLink[],Tridion.ContentManager.CoreService.Client.DeleteTaxonomyNodeMode)">
            <summary>
            Creates a batch for deleting the keyword nodes.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL).</param>
            <param name="deleteTaxonomyNodeMode">Taxonomy delete mode.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchSwitchUserEnabledState(Tridion.ContentManager.CoreService.Client.WeakLink[],System.Boolean)">
            <summary>
            Creates a batch for changing enabled state of user.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL).</param>
            <param name="isEnabled">New value for <see cref="P:Data.Security.UserData.IsEnabled" /> property.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchCopyToKeyword(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String)">
            <summary>
            Creates a batch for copying input keywords to destination keyword.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="destinationId">The identifier of the destination (TCM URI or WebDAV URL) where the item's copy should be created.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
            <remarks>
            <paramref name="subjectLinks" /> and <paramref name="destinationId" /> must refer to keyword objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchMoveToKeyword(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String)">
            <summary>
            Creates a batch for moving input keywords to destination keyword.
            </summary>
            <param name="subjectLinks">The list identifier of the input items (TCM URI or WebDAV URL) with optional Title.</param>
            <param name="destinationId">The identifier of the destination (TCM URI or WebDAV URL) where the item will be moved to.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
            <remarks>
            <paramref name="subjectLinks" /> and <paramref name="destinationId" /> must refer to keyword objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchReAssignActivity(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String)">
            <summary>
            Creates a batch for reassigning activities.
            </summary>
            <param name="activityInstanceLinks">List of Activity Instance Ids with optional Title.</param>
            <param name="newAssigneeId">TcmUri of the User or Group that will become the new assignee of this Activity Instance.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchRestartActivity(Tridion.ContentManager.CoreService.Client.WeakLink[])">
            <summary>
            Creates a Batch to restart Activity Instances.
            </summary>
            <param name="activityInstanceLinks">List of Activity Instance Ids with optional Title.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchSuspendActivity(Tridion.ContentManager.CoreService.Client.WeakLink[],System.String)">
            <summary>
            Creates a Batch to suspend Activity Instances.
            </summary>
            <param name="activityInstanceLinks">List of Activity Instance Ids with optional Title.</param>
            <param name="reason">The reason of the suspending activity.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchResumeActivity(Tridion.ContentManager.CoreService.Client.WeakLink[])">
            <summary>
            Creates a Batch to resume Activity Instances.
            </summary>
            <param name="activityInstanceLinks">List of Activity Instance Ids with optional Title.</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreServiceBatch.BatchSynchronizeWithSchemaAndUpdate(Tridion.ContentManager.CoreService.Client.WeakLink[],Tridion.ContentManager.CoreService.Client.SynchronizeOptions)">
            <summary>
            Creates a Batch to synchronize items with schemas.
            </summary>
            <param name="subjectLinks">List of Repository Local Object identifiers to synchronize with their schemas</param>
            <param name="synchOptions">Specifies what synchronization operations should be applied</param>
            <returns>
            Returns the TcmUri of created batch.
            </returns>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ICoreService">
            <summary>
            This interface provides CRUD, Versioning, Blueprinting and list functionality for CoreService201603 EndPoints to provide Versioning of Core Service Interface.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListExternalLinks(System.String)">
            <summary>
            Gets the list external links from content/metadata of the item.
            </summary>
            <param name="id">TCM URI or WebDAV URL of item to get list on.</param>
            <returns>A list of external links from content/metadata of the item.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ConvertXmlToSearchQuery(System.Xml.Linq.XElement)">
            <summary>
            Gets the search query from the Search Query XML representation.
            </summary>
            <param name="searchQueryXml">The XML which should be converted to the search query.</param>
            <returns>A <see cref="T:Data.ContentManagement.SearchQueryData" /> object representing the configuration for Search Folder.</returns>
            <remarks>
            The XML representation should be in format of Search Folder: see SearchFolder element in cm_searchfolder.xsd.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ConvertSearchQueryToXml(Tridion.ContentManager.CoreService.Client.SearchQueryData)">
            <summary>
            Gets an XML representation of the search query.
            </summary>
            <param name="searchQueryData">The search query which should be converted to XML.</param>
            <returns>The root element of the XML.</returns>
            <remarks>
            The XML representation can be used to set a Search Folder's <see cref="P:Data.ContentManagement.VirtualFolderData.Configuration" /> property.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetVirtualFolderTypeSchema(System.String)">
            <summary>
            Gets the type schema of a Virtual Folder for the Namespace URI specified.
            </summary>
            <param name="namespaceUri">The Namespace URI of the Virtual Folder type schema.</param>
            <returns>The Virtual Folder Type Schema or <c>null</c> if no Virtual Folder Type Schema is found with the given namespace URI.</returns>
            <remarks>
            To get Virtual Folder Type Schema for Bundle pass "http://www.sdltridion.com/ContentManager/Bundle" as <paramref name="namespaceUri" />.
            To get Virtual Folder Type Schema for Search Folder pass "http://www.tridion.com/ContentManager/5.1/SearchFolder" as <paramref name="namespaceUri" />.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetEnumValues(System.String)">
            <summary>
            Gets the list of dependencies between Tridion enum values and theirs localized display name.
            </summary>
            <param name="type">String name of tridion enum.</param>
            <returns>The list of dependencies between Tridion enum values and theirs localized display name.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ResolveBundleTypes(System.String[],System.Boolean)">
            <summary>
            Resolves the Bundle Schemas and associated Bundles for the given set of Workflow Items.
            </summary>
            <param name="itemIds">Collection of identifiers of the workflowable items to resolve bundle type (TCM URI or WebDav URL).</param>
            <param name="pruneTree">
            When set to <c>true</c> returned value should only contain Bundle Type and Resolved Bundle which were mapped to the given Item IDs.
            When set to <c>false</c> returns all Bundle Schemas associated with bundle process and all Bundles of those types.
            </param>
            <returns>A list of Bundle Types and associate bundles and item mappings.</returns>
            <remarks>
            All items should belong to the same publication.
            If a Bundle Process is specified for a given item, then it must be added to a Bundle before it can be checked in.
            The Bundle has to be of an appropriate type, that is, the Bundle's Schema must be associated with a Process Definition.
            The specified Bundle Process results in preferred Bundle types.
            This method can be used to determine the preferred bundle types and bundles of these types for given set of items.
            If an item already added in a Bundle then that Bundle and its associated Bundle Type will be returned regardless of <paramref name="pruneTree" />.
            If there is Business Process Type associated with the Repository, only Bundle Schemas applicable for this Business Process Type and Bundle Schemas which are not used in any Business Process Type will be returned. Otherwise, all Bundle Schemas will be returned.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.CopyToKeyword(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Copies the keyword to a given location in the taxonomy.
            </summary>
            <remarks>
            If <paramref name="sourceKeywordId" /> or <paramref name="destinationId" /> is not refer to <see cref="T:Data.ContentManagement.KeywordData" /> exception will be raised.
            The whole taxonomy branch is copied into the destination keyword.
            Always new unique title is generated, because actually copied keyword is created at the same Category.
            </remarks>
            <param name="sourceKeywordId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:Data.ContentManagement.KeywordData" /> to copy.</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:Data.ContentManagement.KeywordData" /> where the copy should be created.</param>
            <param name="readBackOptions">Specifies how the item's copy is read back after copying. If the parameter is <c>null</c>, the copy is not read back.</param>
            <returns>A <see cref="T:Data.ContentManagement.KeywordData" /> representing the <see cref="T:Data.ContentManagement.KeywordData" /> copy or <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.MoveToKeyword(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Moves the Keyword to a given location in the taxonomy.
            </summary>
            <remarks>
            If <paramref name="sourceKeywordId" /> or <paramref name="destinationId" /> is not refer to <see cref="T:Data.ContentManagement.KeywordData" /> exception will be raised.
            The whole taxonomy branch is moved into the destination keyword.
            </remarks>
            <param name="sourceKeywordId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:Data.ContentManagement.KeywordData" /> to move.</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:Data.ContentManagement.KeywordData" /> where item must be moved.</param>
            <param name="readBackOptions">Specifies how the item's copy is read back after copying. If the parameter is <c>null</c>, the copy is not read back.</param>
            <returns>A <see cref="T:Data.ContentManagement.KeywordData" /> that is read back after moving or <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetTridionLanguages">
            <summary>
            Gets the list of supported Tridion languages.
            </summary>
            <returns>List of <see cref="T:TridionLanguageInfo" />, which contains information about supported Tridion language.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListWorkflowScriptTypes">
            <summary>
            Returns the list of configured <see cref="T:TypeRegistration.WorkflowScriptType" />s.
            </summary>
            <returns>The list of <see cref="T:TypeRegistration.WorkflowScriptType" />s.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.AddToWorkflow(System.String[],System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Adds the subject(s) to the workflow in the specified Activity Instance.
            </summary>
            <param name="subjectIds">The ids of subject(s) those should be added to workflow.</param>
            <param name="activityInstanceId">The activity instance id where the subjects should be added.</param>
            <param name="readBackOptions">The read back options.</param>
            <remarks>
            If subject is a bundle, the bundle and all items in it will be added to workflow. In case of nested bundles, all nested items will be added to workflow as well (recursively).
            </remarks>
            <returns>A collection of Work Items which were added to the specified activity.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.RemoveFromWorkflow(System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Removes the subject(s) from workflow.
            </summary>
            <param name="subjectIds">The ids of subject(s) those should be removed from workflow.</param>
            <param name="readBackOptions">The read back options.</param>
            <returns>A collection of Work Items which were removed from workflow.</returns>
            <remarks>
            If subject is a bundle, the bundle and all items in it will be removed from workflow. In case of nested bundles, all nested items will be removed from workflow as well (recursively),
            unless item is contained in another bundle that will remain in workflow.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Lock(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Locks the organizational item. This means that item cannot be edited by other users.
            </summary>
            <remarks>
            Organizational item can only have following lock types: None, Permanent or InWorkflow.
            Organizational item is versionless. It means that changes made on locked item will be visible to other users.
            </remarks>
            <seealso cref="M:Unlock()" />
            <param name="organizationalItemId">The identifier of the organizational item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:OrganizationalItemData" /> is read back after locking. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:OrganizationalItemData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is locked,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Unlock(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Unlocks the item so other users could edit it as well.
            </summary>
            <seealso cref="M:Lock()" />
            <param name="organizationalItemId">The identifier of the organizational item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:OrganizationalItemData" /> is read back after unlocking. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:OrganizationalItemData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is unlocked,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.StartWorkflow(System.String,Tridion.ContentManager.CoreService.Client.StartWorkflowInstructionData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Creates <see cref="T:Data.Workflow.ProcessInstanceData" /> with first <see cref="T:Data.Workflow.ActivityInstanceData" />.
            </summary>
            <param name="repositoryId">The identifier (TCM URI or WebDAV URL) of the repository on which workflow must be started.</param>
            <param name="instruction">Contains parameters, which will be used for starting workflow and creating first activity instance.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.Workflow.ProcessInstanceData" /> is read back after starting workflow. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>
            Created <see cref="T:Data.Workflow.ProcessInstanceData" /> object.
            </returns>
            <remarks>
            <para>
            <see cref="T:Data.Workflow.ProcessInstanceData" /> and first <see cref="T:Data.Workflow.ActivityInstanceData" /> will be created with values, which specified in  <paramref name="instruction" />.
            </para>
            <para>
            The <see cref="P:ProcessDefinition" /> optional and might not be specified in <paramref name="instruction" />. In that case,
            if there is only one subject specified and it's a Bundle, then Process Definition associated with Bundle Metadata Schema will be used (if any).
            Otherwise, <see cref="P:TaskProcess" /> process will be taken.
            </para>
            <para>The <see cref="P:ShareProcessAssociations" /> property doesn't affect getting process definition for shared items. Bundle Process Definition is always shared from parent.</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.UndoPublishTransaction(System.String,System.Nullable{Tridion.ContentManager.CoreService.Client.QueueMessagePriority},Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Undoes the Publish Transaction.
            </summary>
            <param name="publishTransactionId">The Id of the Publish Transaction which should be Undone.</param>
            <param name="priority">The priority used for queuing the undo request.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.Publishing.PublishTransactionData" /> is read back after undoing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>The Publish Transaction.</returns>
            <remarks>
            <para>
            Undoing a Publish transaction will result in the system trying to pretend that this publish transaction did not happen. If items were overwritten by subsequent Publish Transactions
            then they will not be modified.
            </para>
            <para>
            This is an asynchronous operation, and the method will return as soon as the Undo request is queued. The Publish Transaction can be read again to determine if the Undo was successful
            or not, by looking at the <see cref="P:Data.Publishing.PublishTransactionData.State" />. Further details about the individual items can be found in <see cref="P:Data.Publishing.ProcessedItemData.UndoState" />.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetProcessDefinitionsForItems(System.String[],Tridion.ContentManager.CoreService.Client.ProcessDefinitionType)">
            <summary>
            Gets Process Definitions associated with the specified list of items that can go to workflow.
            </summary>
            <param name="itemIds">Ids of items for which Process Definitions should be resolved.</param>
            <param name="processDefinitionType">The type of Process Definition association to get. Expected values are <see cref="F:Workflow.ProcessDefinitionType.Editing" />
            or <see cref="F:Workflow.ProcessDefinitionType.Bundle" />.</param>
            <returns>Pairs of specified ids and links to associated Process Definitions.</returns>
            <remarks>
            If there is no Process Definition associated with an item, association link will be <c>Link.NullLink</c>.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSystemXsd(System.String)">
            <summary>
            Gets the string representation of System schema xsd by it's name.
            </summary>
            <param name="filename">Name of system schema.</param>
            <returns>
            System schema xsd in string representation.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSchemasByNamespaceUri(System.String,System.String,System.String)">
            <summary>
            Gets a list of <c>Link&lt;SchemaData&gt;</c> objects from specified Repository with specified namespace Uri and root element name.
            </summary>
            <param name="repositoryId">The identifier (TCM URI or WebDAV URL) of the repository from which items will be retrieved.</param>
            <param name="namespaceUri">The namespace Uri.</param>
            <param name="rootElementName">The root element name. If empty string is passed to this parameter then result will be retrieved regardless of root element.</param>
            <returns>
            The list of <c>Link&lt;SchemaData&gt;</c> objects.
            </returns>
            <remarks>
            If item is checked out by current user then editable version will be returned, otherwise last major version.
            If <c>null</c>, empty or <c>tcm:0-0-0</c> value is passed to the <paramref name="repositoryId" /> then items will be retrieved from system repository.
            If it is passed empty or <c>null</c> string to <paramref name="namespaceUri" /> then retrieved schemas without namespace Uri.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Validate(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData)">
            <summary>
            Validates the state of <paramref name="deltaData" />.
            </summary>
            <param name="deltaData">An <see cref="T:Data.IdentifiableObjectData" /> which contains the properties to be validated.</param>
            <returns>
            A list of <see cref="T:Data.ValidationErrorData" /> if any.
            </returns>
            <remarks>
            The operation is possible on a valid delta. In order to validate a saved item, a data object with only the Id property set can be passed.
            Any property set along with the Id property will be merged with the saved state and then validated. If the item is not saved, then defaults
            will be used for properties which are not set.
            <para>The operation is currently only allowed on Page. Trying to pass any other items will result in an exception.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetExternalBinaryContentData(System.String)">
            <summary>
            Retrieves the <c>BinaryContentData</c> for a given external URI.
            </summary>
            <param name="uri">The URI of the external binary.</param>
            <returns>The Binary Content Data for the external URI.</returns>
            <remarks>
            This method can be used to retrieve <c>BinaryContentData</c> for all protocols available in the system.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.SynchronizeWithSchema(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData,Tridion.ContentManager.CoreService.Client.SynchronizeOptions)">
            <summary>
            Synchronizes content and/or metadata of an item with current schema.
            </summary>
            <param name="dataObject">A <see cref="T:Data.ContentManagement.RepositoryLocalObjectData" /> or <see cref="T:Data.ContentManagement.RepositoryData" /> which contains content or metadata to synchronize</param>
            <param name="synchronizeOptions">Specifies what synchronization operations should be applied</param>
            <returns>A <see cref="T:SynchronizationResult" /> object which contains the synchronized item data and the operations applied</returns>
            <remarks>
            Synchronizes metadata in <see cref="T:Data.ContentManagement.RepositoryLocalObjectData" /> or <see cref="T:Data.ContentManagement.RepositoryData" /> with its metadata schema, or content in <see cref="T:Data.ContentManagement.ComponentData" /> with the component's schema.
            All changes are applied and returned, but nothing is persisted.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.SynchronizeWithSchemaAndUpdate(System.String,Tridion.ContentManager.CoreService.Client.SynchronizeOptions)">
            <summary>
            Synchronizes content and/or metadata of an item with current schema, and persists the changes.
            </summary>
            <param name="itemId">The identifier of the item to synchronize (TCM URI or WebDAV URL)</param>
            <param name="synchronizeOptions">Specifies what synchronization operations should be applied</param>
            <returns>A <see cref="T:SynchronizationResult" /> object which contains the synchronized item data and the operations applied</returns>
            <remarks>
            Synchronizes metadata in <see cref="T:Data.ContentManagement.RepositoryLocalObjectData" /> or <see cref="T:Data.ContentManagement.RepositoryData" /> with its metadata schema, or content in <see cref="T:Data.ContentManagement.ComponentData" /> with the component's schema.
            All changes are applied on the item and saved.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.DecommissionPublicationTarget(System.String)">
            <summary>
            Decommissions (takes out of service) a Publication Target, so it can be deleted afterwards.
            </summary>
            <param name="publicationTargetId">The identifier of a Publication Target to be decommissioned</param>
            <remarks>
            Only System Administrator can perform this operation.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ConvertXsdToSchemaFields(System.Xml.Linq.XElement,Tridion.ContentManager.CoreService.Client.SchemaPurpose,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Converts schema XSD to schema fields.
            </summary>
            <param name="xsd">The XSD of the schema.</param>
            <param name="purpose">The purpose of the Schema.</param>
            <param name="rootElementName">The Root Element name of the Schema. Root element names is optional. Can be derived from <paramref name="purpose" /> or <paramref name="xsd" />.</param>
            <param name="readOptions">
            Specifies how the <see cref="T:Data.ContentManagement.Fields.SchemaFieldsData" /> is loaded. Valid <see cref="T:LoadFlags" /> are <see cref="F:LoadFlags.WebDavUrls" /> and <see cref="F:LoadFlags.Expanded" />.
            Use <see cref="F:LoadFlags.Expanded" /> to get expand the embedded fields.
            Use <see cref="F:LoadFlags.WebDavUrls" /> to load the WebDAVUrls.
            </param>
            <returns>Returns <see cref="T:Data.ContentManagement.Fields.SchemaFieldsData" /> from given <paramref name="xsd" />.</returns>
            <remarks>This method does not assert Item existence unless <see cref="F:LoadFlags.WebDavUrls" /> is used.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetPublishUrl(System.String,System.String)">
            <summary>
            Gets the publish URL of an item for specific Target Type ID or purpose.
            </summary>
            <param name="id">The identifier of the item (TCM URI) or its WebDAV URL.</param>
            <param name="targetTypeIdOrPurpose">The id of the <see cref="T:Data.CommunicationManagement.TargetTypeData" /> or the purpose for which publish URL must be calculated.</param>
            <remarks>
            <para>
            The <paramref name="id" /> must refer to Publication, Structure Group or Page.
            </para>
            <para>
            The <paramref name="targetTypeIdOrPurpose" /> must be used in the <see cref="P:BusinessProcessType" /> of the context publication.
            The purpose value is case-sensitive.
            </para>
            </remarks>
            <returns>
            Absolute publish URL.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetBusinessProcessTypes(System.String)">
            <summary>
            Gets the list links to <see cref="T:Data.CommunicationManagement.BusinessProcessTypeData" /> objects which are associated with <paramref name="cdTopologyTypeId" />.
            </summary>
            <param name="cdTopologyTypeId">The CD Topology Type identifier for which the links to <see cref="T:Data.CommunicationManagement.BusinessProcessTypeData" /> objects should be retrieved.</param>
            <returns>The list of links to <see cref="T:Data.CommunicationManagement.BusinessProcessTypeData" /> objects which are associated with <paramref name="cdTopologyTypeId" /></returns>
            <remarks>
            The list returns all Business Process Types associated with <paramref name="cdTopologyTypeId" />, regardless the user has rights to read them or not,
            however, the items which the user does not have permission does not have any content, only the Id is available and the Title has a localized message
            mentioning the user does not have permission.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetPublishSourceByUrl(System.String)">
            <summary>
            Gets the <see cref="T:Data.Publishing.PublishSourceData" /> object which contains information about source from which content was published by URL.
            </summary>
            <param name="url">The URL to which item was published.</param>
            <returns><see cref="T:Data.Publishing.PublishSourceData" /> object which contains information about source from which content was published.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.RemovePublishStates(System.String,System.String)">
            <summary>
            Removes the publish states of the items published to specific <see cref="T:Data.CommunicationManagement.TargetTypeData" /> in the scope of the specific <see cref="T:Data.CommunicationManagement.PublicationData" />.
            </summary>
            <param name="publicationId">The identifier (TCM URI or WebDAV URL) of the context <see cref="T:Data.CommunicationManagement.PublicationData" /> of the items which were published.</param>
            <param name="targetTypeIdOrPurpose">The identifier (TCM URI or WebDAV URL) or purpose of the <see cref="T:Data.CommunicationManagement.TargetTypeData" /> to which items were published.</param>
            <remarks>
            <para>
            Only System Administrator can perform this operation.
            </para>
            <para>
            The purpose value is case-sensitive.
            </para>
            <para>
            The same purpose might be associated with multiple <see cref="T:Data.CommunicationManagement.TargetTypeData" /> in context of different <see cref="T:BusinessProcessTypeData" />.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ResolveContainingPages(System.String,Tridion.ContentManager.CoreService.Client.ResolveContainingPagesInstructionData)">
            <summary>
            Resolves pages that are using directly or indirectly a given component based on <see cref="T:ResolveContainingPagesInstructionData" />.
            </summary>
            <param name="componentId">TCM URI or WebDAV URL of a component.</param>
            <param name="instruction">An instance of <see cref="T:ResolveContainingPagesInstructionData" /> with set of options that configure resolving.</param>
            <returns>Set of pages where component is directly or indirectly (via component links) used. If page is published, the associated set of publish info
            is also returned (one <see cref="T:Data.Publishing.PublishInfoData" /> instance per publish destination).</returns>
            <remarks>
            <para>
            User must have read permissions on component to call this method.
            Resolved pages might be removed from result set if user does not have read permissions on them.
            </para>
            <para>
            Resolved pages are ordered by the number of links from page to provided component. If component is directly on the resolved pages, those pages will be listed first and then
            the pages that have links to components that reference provided component and so on.
            </para>
            <para>
            Note that the <see cref="T:Data.Publishing.ResolvedItemData" /> and <see cref="T:Data.Publishing.PublishInfoData" /> data is partially set. Specifically, only following properties are returned:
            <list type="bullet">
            <item><description><see cref="P:Data.Publishing.ResolvedItemData.Item" /></description></item>
            <item><description><see cref="P:Data.Publishing.ResolvedItemData.Template" /></description></item>
            <item><description><see cref="P:Data.Publishing.ResolvedItemData.ItemPath" /></description></item>
            <item><description><see cref="P:Data.Publishing.PublishInfoData.PublicationTarget" /></description></item>
            <item><description><see cref="P:Data.Publishing.PublishInfoData.TargetType" /></description></item>
            <item><description><see cref="P:Data.Publishing.PublishInfoData.PublishedAt" /></description></item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.PurgeWorkflowHistory(Tridion.ContentManager.CoreService.Client.PurgeWorkflowHistoryInstructionData)">
            <summary>
            Purges the workflow history according to <see cref="T:Data.Workflow.PurgeWorkflowHistoryInstructionData" /> object.
            </summary>
            <param name="instruction">The instruction for purging <see cref="T:Data.Workflow.ProcessHistoryData" />.</param>
            <remarks>
            <para>
            User must be a System Administrator for executing this method.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.BroadcastNotification(Tridion.ContentManager.CoreService.Client.NotificationMessage)">
            <summary>
            Broadcasts a notification defined in the <see cref="T:Notifications.NotificationMessage" /> object.
            </summary>
            <param name="notification">The notification object to send</param>
            <remarks>
            The notification is sent to all clients currently connected and listening for notifications (including scaled-out configurations).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSystemPrivileges">
            <summary>
            Returns an IEnumerable of registered <see cref="T:Security.SystemPrivilege" />.
            </summary>
            <returns>A collection of all registered <see cref="T:Security.SystemPrivilege" />s.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetApiVersion">
            <summary>
            Gets the API version.
            </summary>
            <remarks>
            Typically, the API itself does not change for Service Packs, but system behavior
            may change (i.e. be corrected) and therefore the Service Pack number is included.
            </remarks>
            <returns>API Version. Syntax: {MajorVersion}.{MinorVersion}.{ServicePack}</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetCurrentUser">
            <summary>
            Gets the <see cref="T:Data.Security.AccessTokenData" /> for which a session was created.
            </summary>
            <returns>A <see cref="T:Data.Security.AccessTokenData" /> representing the current user.</returns>
            <remarks>
            If impersonation has been used, this will be the impersonated user.
            The Group Memberships are expanded, i.e. the collection also contains indirect Group memberships
            and also group memberships obtained from an external LDAP Directory (if any).
            <para>
            Do not use the return value of this method to save it back, as this has the group memberships expanded,
            and, you might end up with Permission Denied exception.
            </para>
            </remarks>
            <seealso cref="M:Impersonate()" />
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.IsExistingObject(System.String)">
            <summary>
            Determines whether a given URI refers to an existing object.
            </summary>
            <param name="id">The URI to test. Can be either a TCM URI or a WebDAV URL representing a TCM object.</param>
            <returns><c>true</c> if the URI refers to an existing object.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetTcmUri(System.String,System.String,System.Nullable{System.UInt32})">
            <summary>
            Constructs a TCM URI from a specified base URI, context Repository URI and version number.
            </summary>
            <param name="baseUri">The base URI. Can be either a TCM URI or a WebDAV URL.</param>
            <param name="contextRepositoryUri">
            The TCM URI or WebDAV URL of the context Repository used to override the one in the <paramref name="baseUri" /> parameter.
            Can be <c>null</c> if no context Repository override is needed.
            </param>
            <param name="version">
            The version number to override the one specified (if any) in the <paramref name="baseUri" /> parameter.
            Use <c>0</c> to address the editable version (also known as "checked-out version" or "dynamic version").
            Can be <c>null</c> if no version number override is needed.
            </param>
            <returns>The constructed TCM URI.</returns>
            <remarks>
            Note that the other web methods already accept both a TCM URI and a WebDAV URL,
            so there is no need to call this method separately only to convert a WebDAV URL into a TCM URI.
            This method should only be used to override the context Repository and/or version number.
            The <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.TryGetTcmUri(System.String,System.String,System.Nullable{System.UInt32})">
            <summary>
            Try to construct a TCM URI from a specified base URI, context Repository URI and version number.
            Returns null, if specified base URI or context Repository URI are invalid, or they are unexisting WebDAV URL.
            </summary>
            <param name="baseUri">The base URI. Can be either a TCM URI or a WebDAV URL.</param>
            <param name="contextRepositoryUri">
            The TCM URI or WebDAV URL of the context Repository used to override the one in the <paramref name="baseUri" /> parameter.
            Can be <c>null</c> if no context Repository override is needed.
            </param>
            <param name="version">
            The version number to override the one specified (if any) in the <paramref name="baseUri" /> parameter.
            Use <c>0</c> to address the editable version (also known as "checked-out version" or "dynamic version").
            Can be <c>null</c> if no version number override is needed.
            </param>
            <returns>The constructed TCM URI, if specified <paramref name="baseUri" /> and <paramref name="contextRepositoryUri" /> are exist. <c>null</c> otherwise.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Read(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Gets an <see cref="T:Data.IdentifiableObjectData" /> object for the specified <paramref name="id" />.
            </summary>
            <param name="id">The identifier of the item (TCM URI) or a WebDAV URL.</param>
            <param name="readOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is loaded.</param>
            <remarks>
            <para>
            The structure of a TCM URI is PublicationId-ItemId[-ItemType][-vVersion].
            </para>
            <para>
            Only user who checked out <see cref="T:VersionedItemData" /> is allowed to read editable (version 0) item.
            </para>
            </remarks>
            <returns>An <see cref="T:Data.IdentifiableObjectData" /> object representing the item.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <example>
            <code>
            string id = "tcm:1-21-8-v0";
            // Reads editable (current) version of schema
            IdentifiableObjectData schema = (IdentifiableObjectData)_client.Read(id, null);
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.TryRead(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Tries to get  an <see cref="T:Data.IdentifiableObjectData" /> object for the specified <paramref name="id" />.
            If object with specified id doesn't exist <c>null</c> will be returned.
            </summary>
            <param name="id">The identifier of the item (TCM URI) or a WebDAV URL.</param>
            <param name="readOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is loaded.</param>
            <returns>If item with specified <paramref name="id" /> exists returns an <see cref="T:Data.IdentifiableObjectData" /> object representing of the item. <c>Null</c> otherwise.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.BulkRead(System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Returns a dictionary of <see cref="T:ItemReadResult" /> with string id as the key and a <see cref="T:ItemReadResult" /> as value.
            </summary>
            <param name="ids">The list of identifiers (TCM URI or a WebDAV URL) of the items to return.</param>
            <param name="readOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is loaded.</param>
            <remarks>
            <para>
            The structure of a TCM URI is PublicationId-ItemId[-ItemType][-vVersion].
            </para>
            <para>
            Only user who checked out <see cref="T:VersionedItemData" /> is allowed to read editable (version 0) item.
            </para>
            <para>
            If one of the <see cref="T:Data.IdentifiableObjectData" /> is loaded by id unsuccessfully, <see cref="T:ItemReadResult" /> object
            will provide additional error details (<see cref="T:CoreServiceFault" />).
            </para>
            </remarks>
            <returns>A dictionary of <see cref="T:ItemReadResult" /> with string id as the key and a <see cref="T:ItemReadResult" /> as value,
            representing the items requested by ids or error details.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <example>
            <code>
            // Reads editable (current) version of schema, folder by WebDAV URL and user.
            string id1 = "tcm:1-21-8-v0";
            string id2 = "/WebDAV/publication/Building Blocks";
            string id3 = "tcm:0-11-65552";
            ItemReadResultDictionary items = _client.BulkRead(new List{string} {id1, id2, id3}, new ReadOptions());
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ReadSchemaFields(System.String,System.Boolean,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Gets the fields for the schema specified by the <paramref name="schemaId" />.
            </summary>
            <param name="schemaId">The schema identifier (TCM URI) from which to get the field definitions.</param>
            <param name="expandEmbeddedFields">Indicates whether embedded field definitions should be expanded.</param>
            <param name="readOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is loaded.</param>
            <returns>A <see cref="T:Data.ContentManagement.Fields.SchemaFieldsData" /> object representing the fields for the schema.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ConvertSchemaFieldsToXsd(Tridion.ContentManager.CoreService.Client.SchemaFieldsData)">
            <summary>
            Gets an XSD representation of the schema field definitions.
            </summary>
            <param name="schemaFieldsData">The schema fields which should be converted to XSD.</param>
            <returns>The root element of the XSD.</returns>
            <remarks>
            The XSD representation can be used to set a Schema's <see cref="P:Data.ContentManagement.SchemaData.Xsd" /> property.
            </remarks>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Save(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Saves the state of the object to the database.
            </summary>
            <remarks>
            New objects (having the Id "tcm:0-0-0") will get a regular TCM URI after saving.
            Before actual saving the item to the database, business rules will be checked.
            </remarks>
            <param name="deltaData">An <see cref="T:Data.IdentifiableObjectData" /> which contains the properties to be modified.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is read back after saving. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>Object that is read back, with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is saved, if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">The only exception that is thrown.
            The information of the exceptions that are internally thrown, can be retrieved by the subCode.Name and Detail.ExceptionName.
            </exception>
            <example>
            <code>
            string id = "tcm:1-21";
            // Gets a component for editing
            IdentifiableObjectData component = (IdentifiableObjectData)_client.CheckOut(id, true, null);
            
            // Change title
            component.Title = "This is the new title";
            
            //Save and CheckIn the component
            try
            {
            _client.Save(component, null);
            }
            catch (FaultException&lt;CoreServiceFault&gt; fe)
            {
            string subCode = fe.Code.SubCode.Name;
            
            // ...
            }
            _client.CheckIn(id, null);
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Delete(System.String)">
            <summary>
            Permanently deletes the item or a specific version of the item from the
            system.
            </summary>
            <remarks>
            <para>The object should not be used anymore after this method has been called.</para>
            <para>
            For an instance of a class that derives from <see cref="T:VersionedItemData" />,
            the version that is loaded into the instance is taken into account. If the
            latest version of the item is loaded without a version specified in the
            TCM URI, the item will be fully deleted. If a specific
            version of the item is loaded, only that version will be deleted.
            </para>
            <para>
            If the object being deleted is a <see cref="T:Data.ContentManagement.KeywordData" />, the method <see cref="M:DeleteTaxonomyNode()" />
            offers more control over the handling of the keyword's descendants. The <see cref="M:Delete()" /> method
            is the equivalent of calling <see cref="M:DeleteTaxonomyNode()" /> method with an argument value of
            <see cref="F:RemoveParentFromChildren" />.
            </para>
            <para>
            If the object being deleted is a <see cref="T:Data.Workflow.ProcessInstanceData" />, then Process Instance will be deleted and
            workflow process will be terminated. The Process Instance won't exist anymore it will be archived to Process History.
            All subjects will be undone check-out after Delete operation is completed successfully.
            </para>
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.DeleteTaxonomyNode(System.String,Tridion.ContentManager.CoreService.Client.DeleteTaxonomyNodeMode)">
            <summary>
            Permanently deletes a taxonomy node from the system.
            </summary>
            <remarks>
            <para>The object should not be used anymore after this method has been called.</para>
            <para>A taxonomy node is a keyword. The parameter <paramref name="deleteTaxonomyNodeMode" />
            specifies what happens to the keyword's children.</para>
            </remarks>
            <param name="id">The identifier of the Keyword (TCM URI or WebDAV URL).</param>
            <param name="deleteTaxonomyNodeMode">Specifies how to handle the children of the deleted taxonomy node.</param>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <seealso cref="T:ntentManagement.DeleteTaxonomyNodeMode" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetDefaultData(Tridion.ContentManager.CoreService.Client.ItemType,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Get the default data for a new Item.
            </summary>
            <param name="itemType">The item type used to create the business object.</param>
            <param name="containerId">
            The identifier (TCM URI or WebDAV URL) of the organization item in which a Repository Local Object is to be created.
            Can be <c>null</c> for non Repository Local Objects.
            </param>
            <param name="readOptions">Specifies how the object should be read. If <c>null</c>, default read options are used.</param>
            <exception cref="T:System.ServiceModel.FaultException`1">
            Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.
            </exception>
            <returns>An <see cref="T:Data.IdentifiableObjectData" /> object representing the default data.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Move(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Moves a Repository-Local Object to another Organizational Item.
            </summary>
            <remarks>
            Moving keyword items between different categories is not allowed.
            Moving a keyword to another keyword under the same category can not be done directly.
            It can be achieved by modifying its <see cref="P:ParentKeywords" /> property.
            Moving <see cref="T:Data.ContentManagement.CategoryData" /> and <see cref="T:BusinessProcessTypeData" /> items is currently not supported.
            </remarks>
            <param name="id">The identifier (TCM URI or WebDAV URL) of the item to move</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the destination Organizational Item</param>
            <param name="readBackOptions">Specifies how the Repository-Local Object is read back after moving. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A Repository-Local Object that is read back after moving, or <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Move2(System.String,System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Moves a Repository-Local Object to another Organizational Item.
            </summary>
            <remarks>
            Moving keyword items between different categories is not allowed.
            Moving a keyword to another keyword under the same category can not be done directly.
            It can be achieved by modifying its <see cref="P:ParentKeywords" /> property.
            Moving <see cref="T:Data.ContentManagement.CategoryData" /> and <see cref="T:BusinessProcessTypeData" /> items is currently not supported.
            </remarks>
            <param name="id">The identifier (TCM URI or WebDAV URL) of the item to move</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the destination Organizational Item</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after moving. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is moved,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Copy(System.String,System.String,System.Boolean,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Copies a Repository-Local Object into its current or another Organizational Item.
            </summary>
            <remarks>
            When copying a <see cref="T:Data.ContentManagement.KeywordData" />, the whole taxonomy branch is copied into the same or different <see cref="T:Data.ContentManagement.CategoryData" />.
            Copying a <see cref="T:Data.ContentManagement.KeywordData" /> into another <see cref="T:Data.ContentManagement.KeywordData" /> can not be done directly.
            It can be achieved by first copying it to the same <see cref="T:Data.ContentManagement.CategoryData" /> and then modifying the <see cref="P:ParentKeywords" /> property on the copied instance.
            Copying of <see cref="T:Data.ContentManagement.CategoryData" /> and <see cref="T:BusinessProcessTypeData" /> items is currently not supported.
            </remarks>
            <param name="id">The identifier (TCM URI or WebDAV URL) of the item to copy</param>
            <param name="destinationId">The identifier (TCM URI or WebDAV URL) of the <see cref="T:OrganizationalItemData" /> where the copy should be created</param>
            <param name="makeUnique">Specifies whether a unique title should be generated if an item with the same title already exists in the destination.</param>
            <param name="readBackOptions">Specifies how the item's copy is read back after copying. If the parameter is <c>null</c>, the copy is not read back.</param>
            <returns>A <see cref="T:RepositoryLocalObjectData" /> representing the item's copy or <c>null</c></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetInstanceData(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Gets the default values of the Schema fields.
            </summary>
            <param name="schemaId">The identifier (TCM URI or WebDAV URL) of the Schema whose Instance Data is going to be returned.</param>
            <param name="containerItemId">The identifier (TCM URI or WebDAV URL) of an Organizational Item or Repository for which the Instance Data is going to be retrieved.</param>
            <param name="readOptions">Specifies how the Instance Data is returned.</param>
            <returns>Returns <see cref="T:Data.ContentManagement.InstanceData" /> which represents default values of the Schema fields.</returns>
            <remarks>
            If you do not specify <see cref="F:LoadFlags.Expanded" /> as <paramref name="readOptions" />.LoadFlags, only the mandatory
            embedded schema fields will be expanded. Specifying <see cref="F:LoadFlags.Expanded" /> will also
            expand embedded schema fields regardless if it is optional or not.
            Specifying <c>null</c> as <paramref name="readOptions" /> will behave similar as <see cref="F:LoadFlags.None" />.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.TryCheckOut(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Tries to check-out the item. If the item supports versioning and it's not checked-out to the current user yet, a check-out is attempted.
            If the item doesn't support versioning or the check-out fails, the current/latest version of the item is read.
            </summary>
            <seealso cref="M:CheckOut()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.ContentManagement.VersionedItemData" /> is read back after checking out. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.ContentManagement.VersionedItemData" /> object that is read back, with appropriate values according
            to the <see cref="P:ReadOptions.LoadFlags" /> after it is checked out,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.CheckOut(System.String,System.Boolean,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Checks-out the item. This means that a separate, editable version is created and a lock is placed on the item.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited.
            Checking-out an item locks the item so that it cannot be modified by others in the meantime.
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out.
            This method can be used to perform such a check-out.  This methods can also be used to place a permanent lock (by means of the permanentLock parameter).
            </remarks>
            <seealso cref="M:CheckIn()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="permanentLock">Indicates whether to place a permanent lock or a temporary (edit) lock.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:VersionedItemData" /> is read back after checking out. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:VersionedItemData" /> object that is read back, with appropriate values according
            to the <see cref="P:ReadOptions.LoadFlags" /> after it is checked out,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.CheckIn(System.String,System.Boolean,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Checks-in the item. This means that the editable version is turned into the new current version and the lock on the item is removed.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited.
            Checking-out an item locks the item so that it cannot be modified by others in the meantime.
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out.
            Alternatively, the <see cref="M:Update()" /> method can be used.
            </remarks>
            <seealso cref="M:CheckOut()" />
            <seealso cref="M:Update()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="removePermanentLock">If <c>true</c>, any permanent lock will be removed. If <c>false</c>, the check-in is not performed if there is a permanent lock on the item.</param>
            <param name="userComment">Set the user comment of this item. If <c>null</c> the user comment is not changed.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:VersionedItemData" /> is read back after checking in. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:VersionedItemData" /> object that is read back, with appropriate values according
            to the <see cref="P:ReadOptions.LoadFlags" /> after it is checked in,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Update(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Saves the state of the object to the database and checks in the item.
            </summary>
            <remarks>
            Items that support versioning must be checked-out before they can be edited.
            Checking-out an item locks the item so that it cannot be modified by others in the meantime.
            Furthermore, it creates a separate, editable version of the item that is only accessible to
            the user that performed the check-out.
            </remarks>
            <param name="deltaData">An <see cref="T:Data.IdentifiableObjectData">Data Object</see> which contains
            the properties to be modified.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.IdentifiableObjectData" /> is read back after saving. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>An <see cref="T:Data.IdentifiableObjectData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is saved and checked in,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <seealso cref="M:CheckIn()" />
            <seealso cref="M:CheckOut()" />
            <seealso cref="M:Save()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Create(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Creates an object, updates it with the given data and saves the state of the object to the database and checks in the item.
            </summary>
            <remarks>
            The check in is only performed if needed on <see cref="T:VersionedItemData" /> objects,
            and if it is not going into workflow.
            </remarks>
            <param name="data">An <see cref="T:Data.IdentifiableObjectData">Data Object</see> which contains
            the properties to be set.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:VersionedItemData" /> is read back after undoing the checkout. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>An <see cref="T:Data.IdentifiableObjectData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is saved and checked in,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <seealso cref="M:CheckIn()" />
            <seealso cref="M:Save()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.UndoCheckOut(System.String,System.Boolean,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Undoes a check-out. This means that the editable version is discarded and the lock on the item is removed.
            </summary>
            <remarks>
            A item that support versioning must be checked-out before it can be edited.
            Checking-out an item locks the item so that it cannot be modified by others in the meantime.
            Furthermore, it creates a separate, editable version of the item that is only accessible to the user that performed the check-out.
            This method can be used to undo the check-out and thus discard all changes made since the check-out.
            If the item was never checked-in before, this mean the item effectively gets deleted.
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="permanentLock">The type of the lock to be set on the Item.</param>
            <param name="readBackOptions">Specifies how the <see cref="T:Data.ContentManagement.VersionedItemData" /> is read back after undoing the checkout. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.ContentManagement.VersionedItemData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after the checkout has been undone,
            if <paramref name="readBackOptions" /> is not <c>null</c> and the object is not deleted as result of the UndoCheckOut. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Rollback(System.String,System.Boolean,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Rolls back the changes made to an item to a given version of the item.
            </summary>
            <param name="id">The identifier of the <see cref="T:VersionedItemData" /> to rollback. The identifier must be a TCM URI including the version to rollback to.</param>
            <param name="deleteVersions">Specifies whether to delete all versions after the given version or to create a new version which is a copy of the given version.</param>
            <param name="comment">Comment for the specified version. Usually used to list references to items that no longer exists.
            Maybe <c>null</c> or "".</param>
            <param name="readBackOptions">Specifies how the <see cref="T:VersionedItemData" /> is read back after rolling back. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:VersionedItemData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is rolled back,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <remarks>
            When using the CoreService, the <see cref="T:TcmUri" /> type might be generated as <see cref="T:System.String" /> by the proxy generator.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Localize(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Localizes the item in the context Publication. This means that a local copy of the item is created in the context Publication.
            </summary>
            <remarks>
            Through Blueprinting, an item can be shared in multiple Publications.
            However, a shared item can only be changed in its owning Publication.
            In order to change the item in another (child) Publication, it must first be localized in that Publication.
            Localizing creates a separate version of the item in the child Publication (a so-called local copy).
            Note that some item types have restrictions on what can be changed on a local copy.
            For example, for Schemas, only the Labels (for instance Descriptions) can be changed.
            <para>
            By default, latest checked-in version of the versioned item is localized. However, dynamic version (the -v0) of checked-out item, item in workflow
            or new item can be localized if requested by user.
            </para>
            </remarks>
            <seealso cref="M:UnLocalize()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after localizing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:RepositoryLocalObjectData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is localized,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.UnLocalize(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Un-localizes the item in the context Publication. This means that the local copy is deleted and the item becomes a shared item again.
            </summary>
            <remarks>
            If there's no longer a need for a separate version of the item in a child publication, it can be un-localized.
            That way, it becomes a shared item again and therefore needn't be maintained separately.
            </remarks>
            <seealso cref="M:Localize()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after unlocalizing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:RepositoryLocalObjectData" /> object that is read back, with appropriate values
            according to the <see cref="P:ReadOptions.LoadFlags" /> after it is un-localized,
            if <paramref name="readBackOptions" /> is not null. Otherwise returns <c>null</c>.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Localize2(System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Localizes the item in the context Publication. This means that a local copy of the item is created in the context Publication.
            </summary>
            <remarks>
            Through Blueprinting, an item can be shared in multiple Publications.
            However, a shared item can only be changed in its owning Publication.
            In order to change the item in another (child) Publication, it must first be localized in that Publication.
            Localizing creates a separate version of the item in the child Publication (a so-called local copy).
            Note that some item types have restrictions on what can be changed on a local copy.
            For example, for Schemas, only the Labels (for instance Descriptions) can be changed.
            <para>
            By default, latest checked-in version of the versioned item is localized. However, dynamic version (the -v0) of checked-out item, item in workflow
            or new item can be localized if requested by user.
            </para>
            </remarks>
            <seealso cref="M:UnLocalize()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after localizing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is localized,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.UnLocalize2(System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Un-localizes the item in the context Publication. This means that the local copy is deleted and the item becomes a shared item again.
            </summary>
            <remarks>
            If there's no longer a need for a separate version of the item in a child publication, it can be un-localized.
            That way, it becomes a shared item again and therefore needn't be maintained separately.
            </remarks>
            <seealso cref="M:Localize()" />
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after unlocalizing. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is un-localized,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Promote(System.String,System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Promotes the local item to one of its parent repository in the BluePrint.
            </summary>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL) to be promoted.</param>
            <param name="destinationRepositoryId">The identifier of the parent repository (TCM URI or WebDAV URL) where item should be promoted to.</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after promoting. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is promoted,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.
            <para>In case of validation errors or warnings, specific validation errors will be available
            in <see cref="P:ValidationErrors" /> colection, warnings will be available in <see cref="P:ValidationWarnings" /> colection.
            Multiple validation errors or warnings can be reported.</para></exception>
            <seealso cref="M:Demote()" />
            <remarks>Promote allows to move a repository-local object from repository where it is defined to one of its parent repositories up in the BluePrint.
            <para>Note that in order to successfully promote an item, all its dependencies must exist in the repository item will be promoted to.</para></remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Demote(System.String,System.String,Tridion.ContentManager.CoreService.Client.OperationInstruction,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Demotes the local item to one of the child repository in the BluePrint.
            </summary>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL) to be demoted.</param>
            <param name="destinationRepositoryId">The identifier of the child repository (TCM URI or WebDAV URL) where item should be demoted to.</param>
            <param name="instruction"><para>Controls how operation will be executed.</para>
            <para>In <see cref="F:OperationMode.FailOnError" />  mode if any error(s) are found a Validation Exception will be thrown.</para>
            <para>In <see cref="F:OperationMode.FailOnWarning" /> mode if any error(s) and/or warning(s) are found a Validation Exception will be thrown.</para>
            <para>Note that in case the Validation Exception occurred in the initialized phase, then, the processed event handlers are not executed.</para>
            <para>If null or not specified, <see cref="F:OperationMode.FailOnError" /> mode will be used.</para></param>
            <param name="readBackOptions">Specifies how the <see cref="T:RepositoryLocalObjectData" /> is read back after demoting. If the parameter is <c>null</c>, the object is not read back.</param>
            <returns>A <see cref="T:Data.OperationResultData`1" /> object that contains item with appropriate values according to the <see cref="P:ReadOptions.LoadFlags" /> after it is demoted,
            if <paramref name="readBackOptions" /> is not null. Otherwise does not return an item.
            <para>Result also may contain list of warnings that were generated during execution (regardless of <paramref name="readBackOptions" />).</para></returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.
            <para>In case of validation errors or warnings, specific validation errors will be available
            in <see cref="P:ValidationErrors" /> colection, warnings will be available in <see cref="P:ValidationWarnings" /> colection.
            Multiple validation errors or warnings can be reported.</para></exception>
            <seealso cref="M:Promote()" />
            <remarks>Demote allows to move a repository-local object from repository where it is defined to one of the child repositories down in the BluePrint.
            <para>Note that in order to successfully demote an item, it must not be used, published or localized in any of the repositories it will be demoted from.</para></remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListTemplateTypes(System.Nullable{Tridion.ContentManager.CoreService.Client.ItemType})">
            <summary>
            Returns an IEnumerable of <see cref="T:TemplateTypes.TemplateType" /> configured in the <c>TemplateTypeRegistry</c>.
            </summary>
            <param name="itemType">Can be used to filter the template types on Item Type. If it is <c>null</c> all template types are returned. Supported <see cref="T:ItemType" />s are:
            <see cref="F:ItemType.ComponentTemplate" />, <see cref="F:ItemType.PageTemplate" /> and <see cref="F:ItemType.TemplateBuildingBlock" />.</param>
            <returns>IEnumerable  of <see cref="T:TemplateTypes.TemplateType" />.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListPublicationTypes">
            <summary>
            Returns an IEnumerable of <see cref="T:TypeRegistration.PublicationType" /> configured in the <c>TypeRegistrySection</c>.
            </summary>
            <returns>IEnumerable  of <see cref="T:TypeRegistration.PublicationType" />.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSystemWideListXml(Tridion.ContentManager.CoreService.Client.SystemWideListFilterData)">
            <summary>Gets a system-wide list of objects as XML.</summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            </param>
            <returns>The root element of the XML List (element name depends of the type of object requested).</returns>
            <seealso cref="M:GetSystemWideList()" />
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSystemWideList(Tridion.ContentManager.CoreService.Client.SystemWideListFilterData)">
            <summary>
            Gets a list of <see cref="T:Data.IdentifiableObjectData" /> objects constrained by the specified <see cref="T:Data.SystemWideListFilterData" />.
            </summary>
            <seealso cref="M:GetSystemWideListXml()" />
            <param name="filter">A <see cref="T:Data.SystemWideListFilterData" /> that constraints the list of returned <see cref="T:Data.IdentifiableObjectData" /> objects.</param>
            <returns>A list of <see cref="T:Data.IdentifiableObjectData" /> objects.</returns>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListXml(System.String,Tridion.ContentManager.CoreService.Client.SubjectRelatedListFilterData)">
            <summary>
            Gets a list of items related to specified subject as XML.
            </summary>
            <param name="id">TCM URI or WebDAV URL of item to get list on.</param>
            <param name="filter">The filterParameter which specifies which kind of
            list to retrieve. Also it can be used to filterParameter the items based on
            conditions and specify which attribute to include in the list.
            </param>
            <returns>The root element of the XML List (element name depends of
            the type of object requested).</returns>
            <remarks>
            There is no specific method (filter) for getting list of Destination Protocols or Virtual Folder type schemas. To get such lists System Repository Folder must be used (tcm:0-0-7)
            with set <see cref="P:ItemTypes" /> condition to Schema type and set <see cref="P:SchemaPurposes" /> to
            <see cref="F:ntentManagement.SchemaPurpose.Protocol" /> or <see cref="F:VirtualFolderType" />. For further details, please see examples section.
            </remarks>
            <example>
            The following example illustrates how to get a list of the protocol schemas:
            <code>
            OrganizationalItemItemsFilterData filter = new OrganizationalItemItemsFilterData();
            filter.ItemTypes = new[] { ItemType.Schema };
            filter.SchemaPurposes = new[] { SchemaPurpose.Protocol };
            XmlElement list = client.GetListXml("tcm:0-0-7", filter);
            </code>
            The following example illustrates how to get a list of the virtual folder types:
            <code>
            OrganizationalItemItemsFilterData filter = new OrganizationalItemItemsFilterData();
            filter.ItemTypes = new[] { ItemType.Schema };
            filter.SchemaPurposes = new[] { SchemaPurpose.VirtualFolderType };
            XmlElement list = client.GetListXml("tcm:0-0-7", filter);
            </code>
            </example>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetList(System.String,Tridion.ContentManager.CoreService.Client.SubjectRelatedListFilterData)">
            <summary>
            Gets a list of items related to specified subject as Data Objects.
            </summary>
            <param name="id">TCM URI or WebDAV URL of item to get list on.</param>
            <param name="filter">A filter object that specifies which kind of
            list to retrieve. Also it can be used to filterParameter the items based on
            conditions and specify which attribute to include in the list.
            </param>
            <returns>A list of (partially loaded) Data Objects..</returns>
            <example>
            The following example illustrates how to get a list of an Organizational Item ancestors:
            <code>
            OrganizationalItemAncestorsFilterData filter = new OrganizationalItemAncestorsFilterData();
            IEnumerable&lt;IdentifiableObjectData&gt; list = client.GetList("tcm:1-2-64", filter);
            </code>
            The following example illustrates how to get a list of the protocol schemas:
            <code>
            OrganizationalItemItemsFilterData filter = new OrganizationalItemItemsFilterData();
            filter.ItemTypes = new[] { ItemType.Schema };
            filter.SchemaPurposes = new[] { SchemaPurpose.Protocol };
            IEnumerable&lt;IdentifiableObjectData&gt; list = client.GetList("tcm:0-0-7", filter);
            </code>
            The following example illustrates how to get a list of the virtual folder types:
            <code>
            OrganizationalItemItemsFilterData filter = new OrganizationalItemItemsFilterData();
            filter.ItemTypes = new[] { ItemType.Schema };
            filter.SchemaPurposes = new[] { SchemaPurpose.VirtualFolderType };
            IEnumerable&lt;IdentifiableObjectData&gt; list = client.GetList("tcm:0-0-7", filter);
            </code>
            </example>
            <remarks>
            <para>
            <see cref="T:TaxonomiesOwlFilterData" /> is not supported by this method.
            </para>
            <para>
            There is no specific method (filter) for getting list of Destination Protocols or Virtual Folder type schemas. To get such lists System Repository Folder must be used (tcm:0-0-7)
            with set <see cref="P:ItemTypes" /> condition to Schema type and set <see cref="P:SchemaPurposes" /> to
            <see cref="F:Protocol" /> or <see cref="F:VirtualFolderType" />. For further details, please see examples section.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListDirectoryServiceNames">
            <summary>
            Gets the names of the configured Directory Service servers.
            </summary>
            <returns>A string list containing the names of the configured Directory Services.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListWindowsDomainUsers(System.String)">
            <summary>
            Gets the list of users for the specified Windows domain
            </summary>
            <param name="domainName">The name of the Windows domain to get the user list for.</param>
            <returns>A list of <see cref="T:Security.WindowsUser" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListDirectoryServiceAllUsers(System.String)">
            <summary>
            Gets the list of users for the specified directory service name.
            </summary>
            <param name="directoryServiceName">Name of the directory service.</param>
            <returns>A list of <see cref="T:Security.DirectoryServiceUser" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListDirectoryServiceGroupMembers(System.String,System.String)">
            <summary>
            Gets list of directory service users belonging to a specific group.
            </summary>
            <param name="directoryServiceName">Name of the directory service.</param>
            <param name="groupDN">The distinguished name of the group to retrieve members of.</param>
            <returns>A list of <see cref="T:Security.DirectoryServiceUser" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListDirectoryServiceUsers(System.String,Tridion.ContentManager.CoreService.Client.DirectoryUsersFilter)">
            <summary>
            Gets a list of users found in the Directory Service using the directory users filter.
            </summary>
            <param name="directoryServiceName">Name of the directory service.</param>
            <param name="filter">The <see cref="T:Security.DirectoryUsersFilter" /> to filter with</param>
            <returns>A list of <see cref="T:Security.DirectoryServiceUser" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Classify(System.String,System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Classifies the item by adding the specified Keyword classification(s) (if valid according to Schema definition).
            </summary>
            <remarks>
            This function is intended to add one or more Keywords to all the Keyword fields of this item (content and/or metadata).
            Classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="keywordIds">A collection of Keyword identifiers to classify the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, a <see cref="T:ClassificationInfoData" /> object that contains the Item that was classified and a collection of <see cref="T:ClassificationDetailData" /> objects that contains information about all fields, where the requested keywords matched and were added.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.UnClassify(System.String,System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Unclassifies the item by removing the specified Keyword classification(s) (if valid according to Schema definition).
            </summary>
            <remarks>
            This function is intended to remove one or more Keywords from all the Keyword fields of this item (content and/or metadata).
            Classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="keywordIds">A collection of Keyword identifiers to unclassify (remove from) the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, a <see cref="T:ClassificationInfoData" /> object that contains the Item that was unclassified and a collection of <see cref="T:ClassificationDetailData" /> objects that contains information about all fields, where the requested keywords matched and were removed.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ReClassify(System.String,System.String[],System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Reclassifies the item by removing the specified Keyword classification(s) and replacing them with others specified (if valid according to Schema definition).
            </summary>
            <remarks>
            This function is intended to replace one or more Keywords in all the Keyword fields of this item (content and/or metadata).
            Classification is not supported for Schema, Category, Target Group and Process Definition item types.
            </remarks>
            <param name="id">The identifier of the item (TCM URI or WebDAV URL).</param>
            <param name="keywordIdsToRemove">A collection of Keyword identifiers to remove from the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="keywordIdsToAdd">A collection of Keyword identifiers to add to the item. The collection can not be empty and must contain valid TCM URI identifiers or WebDAV URLs.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, a <see cref="T:ClassificationInfoData" /> object that contains the Item that was reclassified and a collection of <see cref="T:ClassificationDetailData" /> objects that contains information about all fields, where the requested keywords matched and were replaced.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.StartActivity(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Starts a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="readBackOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readBackOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the started Activity Instance.
            If <paramref name="readBackOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.SuspendActivity(System.String,System.String,System.Nullable{System.DateTime},System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Suspends a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="reason">The reason of the suspending activity.</param>
            <param name="resumeAt">Time, when suspending activity must be resumed.</param>
            <param name="resumeBookmark">The resume bookmark for suspending activities.</param>
            <param name="readBackOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readBackOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the suspended Activity Instance.
            If <paramref name="readBackOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
            <remarks>
            <para>This method can be called manually or by an automated Activity script. Workflow activity can continue execution after calling <see cref="M:ResumeActivity()" /> method.</para>
            <para>The current User must be the Owner or have Workflow Management Rights.</para>
            <para>An automated activity will be resumed automatically (if <paramref name="resumeAt" /> is specified).</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.RestartActivity(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Restarts a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="readBackOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter
            is <c>null</c>.</param>
            <returns>
            If <paramref name="readBackOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the restarted Activity
            Instance. If <paramref name="readBackOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
            <remarks>
            <para>
            This method can only be used for automatic Activity Instances. Activity State must be in
            <see cref="F:Workflow.ActivityState.Suspended" /> in order to restart the activity.
            </para>
            <para>
            The Workflow Agent sets the Activity Instance State to <see cref="F:Workflow.ActivityState.Suspended" /> as soon as an error occurs in an automated Activity.
            (i.e. automated activity instance with script that throws exception.)
            A user may retry the execution of the workflow activity using the Restart method after the fixing the error.
            </para>
            <para>
            If the Activity Instance is successfully restarted, it enters the <see cref="F:Workflow.ActivityState.Assigned" /> state.
            The Workflow Agent will pick it up again and set the Activity Instance state to <see cref="F:Workflow.ActivityState.Started" />.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ReAssignActivity(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Reassigns a Workflow Activity Instance to a new Trustee.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="newAssigneeId">The identifier of the new Assignee (TCM URI).</param>
            <param name="readBackOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readBackOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the reassigned Activity Instance.
            If <paramref name="readBackOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
            <remarks>
            <para>
            The Activity Instance must be in <see cref="F:Workflow.ActivityState.Assigned" /> or
            <see cref="F:Workflow.ActivityState.Started" /> state for this operation to succeed.
            Additionally, if the Activity State is Started, the provided Assignee can only be a User.
            </para>
            <para>
            The User performing the operation must have Read Permissions on every subject related to this Activity Instance
            and Workflow Management Rights on the context repository.
            </para>
            <para>
            If the Activity State is Started, only the Performers collection is updated in order to hold the new user.
            If The Activity State is Assigned, only the Assignee property is updated in order to hold the new trustee.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.FinishActivity(System.String,Tridion.ContentManager.CoreService.Client.ActivityFinishData,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Finishes a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="activityFinishData">The data object that specifies some parameters for the Finish operation. Should be a <see cref="T:Data.Workflow.DecisionActivityFinishData" /> when finishing a decision Activity Instance.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the next Activity Instance that was created when finishing this Activity Instance, or <c>null</c> when there is no next Activity Instance.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ForceFinishProcess(System.String,System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Forces finish of a Workflow Process Instance.
            </summary>
            <param name="processInstanceId">The identifier of the Process Instance (TCM URI).</param>
            <param name="approvalStatusId">The identifier of the Approval Status (TCM URI) which will be set to all Subjects of the related Work Items.</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <remarks>
            <para>All the Subjects of the related Work Items will be checked-in after a force finish.</para>
            <para>Approval Status Id can be set <c>null</c>. In that case Approval Statuses of all the Subjects of the related Work Items will not be updated.</para>
            </remarks>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, a corresponding Process History Data object that represents archived Process Instance.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ResumeActivity(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Resumes a Workflow Activity Instance.
            </summary>
            <param name="activityInstanceId">The identifier of the Activity Instance (TCM URI).</param>
            <param name="readOptions">Specifies additional read options for the returned value. The return value is <c>null</c> if this parameter is <c>null</c>.</param>
            <returns>
            If <paramref name="readOptions" /> was not <c>null</c>, an Activity Instance Data object that represents the resumed Activity Instance.
            If <paramref name="readOptions" /> was <c>null</c>, <c>null</c> is returned.
            </returns>
            <remarks>
            <para>
            The Activity Instance must be in <see cref="F:Workflow.ActivityState.Suspended" /> state for this operation to succeed.
            </para>
            <para>
            Operation can be performed by WFAgent, or activity owner, or by user with workflow management rights.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListQueueMessages(System.Int32)">
            <summary>
            Get a list of queue messages in the given queue.
            </summary>
            <param name="queueId">The identifier of the queue.</param>
            <returns>A set of <see cref="T:Data.Queuing.QueueMessageData" /> objects representing the messages in the queue.</returns>
            <remarks>
            The titles of queued items are not directly available in the returned <see cref="T:Data.Queuing.QueueMessageData" /> objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.PurgeQueue(System.Int32)">
            <summary>
            Purges the messages in the given Queue.
            </summary>
            <param name="queueId">The identifier of the queue.</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListQueues">
            <summary>
            Get a list of <see cref="T:Data.Queuing.QueueData" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Data.Queuing.QueueData" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ReadApplicationData(System.String,System.String)">
            <summary>
            Reads application-specific data which is either global or associated with a given subject.
            </summary>
            <param name="subjectId">
            The identifier (TCM URI or WebDAV URL) of the subject to which the application data should be associated.
            Use <c>null</c> to read global application data.</param>
            <param name="applicationId">The application identifier for which to read the application data.</param>
            <returns>An <see cref="T:Data.ApplicationData" /> instance or <c>null</c> if no such application-specific data is found.</returns>
            <seealso cref="M:ReadAllApplicationData()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ReadAllApplicationData(System.String)">
            <summary>
            Reads all application-specific data which is either global or associated with a given subject.
            </summary>
            <param name="subjectId">
            The identifier (TCM URI or WebDAV URL) of the subject to which the application data should be associated.
            Use <c>null</c> to read global application data.</param>
            <returns>A collection of <see cref="T:Data.ApplicationData" /> instances.</returns>
            <seealso cref="M:ReadApplicationData()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.SaveApplicationData(System.String,Tridion.ContentManager.CoreService.Client.ApplicationData[])">
            <summary>
            Saves application-specific data which is either global or associated with a given subject.
            </summary>
            <param name="subjectId">
            The identifier (TCM URI or WebDAV URL) of the subject to which the application data should be associated.
            Use <c>null</c> to save global application data.</param>
            <param name="applicationData">The application-specific data to save.
            Multiple <see cref="T:Data.ApplicationData" /> instances can be saved at once.</param>
            <remarks>
            If application-specific data already exists for the given application identifiers, it will be overwritten.
            </remarks>
            <seealso cref="M:DeleteApplicationData()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.DeleteApplicationData(System.String,System.String)">
            <summary>
            Deletes application-specific data which is either global or associated with a given subject.
            </summary>
            <param name="subjectId">
            The identifier (TCM URI or WebDAV URL) of the subject to which the application data should be associated.
            Use <c>null</c> to delete global application data.</param>
            <param name="applicationId">The application identifier for which to delete the application data.
            Can be <c>null</c> to delete all application data associated with the subject or all global application data.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetApplicationIds">
            <summary>
            Reads all application IDs for all application data stored in the system.
            </summary>
            <returns>
            A collection of <see cref="T:System.String" /> values representing all application IDs.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.PurgeApplicationData(System.String)">
            <summary>
            Deletes all (global and subject related) application data for a given application ID.
            </summary>
            <param name="applicationId">The application identifier for which to purge the application data.</param>
            <remarks>
            Typical usecase of this method is a clean up of all application data left by some application which was uninstalled.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ParsePredefinedBatchOperation(System.String)">
            <summary>
            Parses the predefined batch operation by string value.
            </summary>
            <param name="operation">The string representation of operation.</param>
            <returns><see cref="T:Batching.PredefinedBatchOperation" /> object if <paramref name="operation" /> can be parsed. Otherwise return <c>null</c>.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetPredefinedBatchOperationName(Tridion.ContentManager.CoreService.Client.PredefinedBatchOperation)">
            <summary>
            Gets the name of the predefined batch operation in string representation.
            </summary>
            <param name="operation">The <see cref="T:Batching.PredefinedBatchOperation" /> value.</param>
            <returns>String representation of <paramref name="operation" /> value.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ResolveItems(System.String[],Tridion.ContentManager.CoreService.Client.ResolveInstructionData,System.String[],Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Gets a collection of Resolved Items that will be (un-/re-)published to the given targets if
            a (un-/re-)publish action is performed on the items identified by the given ids.
            </summary>
            <param name="ids">Collection of identifiers of the items to resolve (TCM URI or WebDAV URL). All items must be from the same publication.</param>
            <param name="resolveInstruction">The Resolve Instruction.</param>
            <param name="targetIdsOrPurposes">A collection of identifiers representing Publication Targets, Target Types or purposes of the <see cref="T:Data.CommunicationManagement.TargetTypeData" /> to publish to. This cannot contain a combination of them.</param>
            <param name="readOptions">Specifies how the Publish Context(s) are read back after resolving. If the parameter is <c>null</c>, the items are read with <see cref="F:LoadFlags.None" />.</param>
            <returns>A collection of Publish Contexts, containing the Resolved Items per Publish Context</returns>
            <remarks>
            <para>
            <paramref name="targetIdsOrPurposes" /> cannot contain a combination of identifiers representing Publication Targets, Target Types and purposes of the <see cref="T:Data.CommunicationManagement.TargetTypeData" />.
            </para>
            <para>
            If purposes are specified they will be resolved to a list of <see cref="T:Data.CommunicationManagement.TargetTypeData" /> based on the associated <see cref="P:BusinessProcessType" /> and <see cref="P:Purpose" />.
            </para>
            <para>
            If <see cref="P:IncludeChildPublications" /> is specified, then the set of resolved Target Types might be different per Repository due to a different associated Business Process Type.
            </para>
            <para>
            The access to Target Types are evaluated per Repository, hence they might be suppressed due to insufficient rights.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSearchResultsXml(Tridion.ContentManager.CoreService.Client.SearchQueryData)">
            <summary>
            Gets a list of items as <see cref="T:System.Xml.XmlElement" /> constrained by the specified <see cref="T:Data.ContentManagement.SearchQueryData" />.
            </summary>
            <param name="filter">A <see cref="T:Data.ContentManagement.SearchQueryData" /> that constraints the list of items.</param>
            <remarks>
            See element ListSearchResults in cm_xml.xsd for a definition of the XML list structure.
            </remarks>
            <returns>An XML element representing the root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSearchResultsXmlPaged(Tridion.ContentManager.CoreService.Client.SearchQueryData,System.Int32,System.Int32)">
            <summary>
            Gets a paged list of items as <see cref="T:System.Xml.XmlElement" /> constrained by the specified <see cref="T:Data.ContentManagement.SearchQueryData" />.
            </summary>
            <param name="filter">A <see cref="T:Data.ContentManagement.SearchQueryData" /> that constraints the list of items.</param>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <remarks>
            See element ListSearchResults in cm_xml.xsd for a definition of the XML list structure.
            </remarks>
            <returns>An XML element representing the root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSearchResults(Tridion.ContentManager.CoreService.Client.SearchQueryData)">
            <summary>
            Gets a list of <see cref="T:Data.IdentifiableObjectData" /> constrained by the specified <see cref="T:Data.ContentManagement.SearchQueryData" />.
            </summary>
            <param name="filter">A <see cref="T:Data.ContentManagement.SearchQueryData" /> that constraints the list of items.</param>
            <returns>A list of <see cref="T:Data.IdentifiableObjectData" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSearchResultsPaged(Tridion.ContentManager.CoreService.Client.SearchQueryData,System.Int32,System.Int32)">
            <summary>
            Gets a paged list of <see cref="T:Data.IdentifiableObjectData" /> constrained by the specified <see cref="T:Data.ContentManagement.SearchQueryData" />.
            </summary>
            <param name="filter">A <see cref="T:Data.ContentManagement.SearchQueryData" /> that constraints the list of items.</param>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <returns>A list of <see cref="T:Data.IdentifiableObjectData" /> objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.RenderItem(System.String,System.String,Tridion.ContentManager.CoreService.Client.PublishInstructionData,System.String)">
            <summary>
            Renders the preview of an Item.
            </summary>
            <param name="itemId">The id or WebDAV url of the Item to render.</param>
            <param name="templateId">The optional id or WebDAV url of the Template to use in order to render the Item.</param>
            <param name="publishInstruction">The Publish Instruction to use in order to render the Item.</param>
            <param name="publicationTargetIdOrPurpose">The id of the Publication Target or purpose of the <see cref="T:TargetTypeData" /> to use. Parameter can be <c>null</c>.</param>
            <returns>An object containing the Rendered Item.</returns>
            <remarks>
            <para>
            If the rendering operation produces Binaries, the actual binary content can be downloaded by calling the <see cref="M:DownloadRenderedBinary()" /> method.
            Binaries will always be generated on a file location relative to the Content Manager temporary path. The returned <see cref="T:Data.Publishing.Rendering.BinaryData" /> objects
            will have an appropriate path in their <see cref="P:FilePath" /> property and callers of the <see cref="M:DownloadRenderedBinary()" /> method can
            use that value to retrieve the binary content as a stream.
            </para>
            <para>
            If the <paramref name="templateId" /> is <see langword="null" /> when a Page is rendered, the template of the Page is used otherwise the <paramref name="templateId" /> is used.
            </para>
            <para>
            <paramref name="publicationTargetIdOrPurpose" /> will be resolved to a <see cref="T:TargetTypeData" /> based on the associated <see cref="P:BusinessProcessType" /> and <see cref="P:Purpose" />.
            </para>
            </remarks>
            <seealso cref="M:PreviewItem()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.PreviewItem(Tridion.ContentManager.CoreService.Client.RepositoryLocalObjectData,Tridion.ContentManager.CoreService.Client.TemplateData,Tridion.ContentManager.CoreService.Client.PublishInstructionData,System.String)">
            <summary>
            Renders the preview for a given item (and template) with optionally delta data applied. That is: this method can preview non-persisted/transient changes to the item and/or template.
            </summary>
            <param name="itemData">The delta data for the item to render. The specified delta data is merged into the persisted state of the item referred to by the <see cref="P:Data.IdentifiableObjectData.Id" /> property. If the <c>Id</c> property is <c>tcm:0-0-0</c>, the delta is merged into default data. In this case, the <see cref="P:OrganizationalItem" /> property must be set.</param>
            <param name="templateData">The delta data for the Template to render with  (can be <c>null</c>, see remarks). The specified delta data is merged into the persisted state of the template referred to by the <see cref="P:Data.IdentifiableObjectData.Id" /> property. If the <c>Id</c> property is <c>tcm:0-0-0</c>, the delta is merged into default data. In this case, the <see cref="P:OrganizationalItem" /> property must be set.</param>
            <param name="publishInstruction">The Publish Instruction to use in order to render the Item.</param>
            <param name="publicationTargetId">The id of the Publication Target to use. Can be <c>null</c>. Current implementation ignores <paramref name="publicationTargetId" /> while generating the preview.</param>
            <returns>A <see cref="T:Data.Publishing.Rendering.RenderedItemData" /> object containing the rendered content.</returns>
            <remarks>
            <para>
            <paramref name="templateData" /> can be <c>null</c>.
            In case of <c>null</c> <paramref name="templateData" />, default component template of publication will be used for rendering of components and default default page template for rendering of pages.
            Exception will be thrown if template property is not set and values of default templates can’t be obtained.
            </para>
            </remarks>
            <seealso cref="M:RenderItem()" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.Publish(System.String[],Tridion.ContentManager.CoreService.Client.PublishInstructionData,System.String[],System.Nullable{Tridion.ContentManager.CoreService.Client.PublishPriority},Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Publishes, re-publishes and/or deploys the <see cref="T:Data.IdentifiableObjectData" />s and related items to given target(s).
            </summary>
            <param name="ids">Collection of identifiers of the items to publish (TCM URI or WebDAV URL).</param>
            <param name="publishInstruction">The instruction for the publish action.</param>
            <param name="targetIdsOrPurposes">A collection of identifiers representing Publication Targets, Target Types or purposes of the <see cref="T:TargetTypeData" /> to publish to. This cannot contain a combination of them.</param>
            <param name="priority">The priority of the publish action. Passing <c>null</c> will use the priority from the Publication Target.</param>
            <param name="readOptions">Specifies how the Publish Transaction(s) are read back after publishing. If the parameter is <c>null</c>, the items are read with <see cref="F:LoadFlags.None" />.</param>
            <remarks>
            <para>
            <paramref name="targetIdsOrPurposes" /> cannot contain a combination of identifiers representing Publication Targets, Target Types and purposes of the <see cref="T:TargetTypeData" />.
            </para>
            <para>
            If purposes are specified they will be resolved to a list of <see cref="T:TargetTypeData" /> based on the associated <see cref="P:BusinessProcessType" /> and <see cref="P:Purpose" />.
            </para>
            <para>
            If <see cref="P:IncludeChildPublications" /> is specified, then the set of resolved Target Types might be different per Repository due to a different associated Business Process Type.
            </para>
            <para>
            The access to Target Types are evaluated per Repository, hence they might be suppressed due to insufficient rights.
            </para>
            </remarks>
            <returns>A collection of <see cref="T:Data.Publishing.PublishTransactionData" /></returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.UnPublish(System.String[],Tridion.ContentManager.CoreService.Client.UnPublishInstructionData,System.String[],System.Nullable{Tridion.ContentManager.CoreService.Client.PublishPriority},Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Un-publishes the collection of <see cref="T:Data.IdentifiableObjectData" /> instances from given target(s).
            </summary>
            <param name="ids">Collection of identifiers of the items to unpublish (TCM URI or WebDAV URL).</param>
            <param name="unPublishInstruction">The instruction for the un-publish action.</param>
            <param name="targetIdsOrPurposes">A collection of identifiers representing Publication Targets, Target Types or purposes of the <see cref="T:TargetTypeData" /> to un-publish from. This cannot contain a combination of them.</param>
            <param name="priority">The priority of the un-publish action. Passing <c>null</c> will use the priority from the Publication Target.</param>
            <param name="readOptions">Specifies how the Publish Transaction(s) are read back after un-publishing. If the parameter is <c>null</c>, the items are read with <see cref="F:LoadFlags.None" />.</param>
            <remarks>
            <para>
            <paramref name="targetIdsOrPurposes" /> cannot contain a combination of identifiers representing Publication Targets, Target Types and purposes of the <see cref="T:TargetTypeData" />.
            </para>
            <para>
            If purposes are specified they will be resolved to a list of <see cref="T:TargetTypeData" /> based on the associated <see cref="P:BusinessProcessType" /> and <see cref="P:Purpose" />.
            </para>
            <para>
            If <see cref="P:IncludeChildPublications" /> is specified, then the set of resolved Target Types might be different per Repository due to a different associated Business Process Type.
            </para>
            <para>
            The access to Target Types are evaluated per Repository, hence they might be suppressed due to insufficient rights.
            </para>
            </remarks>
            <returns>A collection of <see cref="T:Data.Publishing.PublishTransactionData" /></returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.IsPublished(System.String,System.String,System.Boolean)">
            <summary>
            Returns whether the given item is published to the specified Publishing Target.
            </summary>
            <param name="itemId">The identifier of the item (TCM URI or WebDAV URL) to get the publish state for.</param>
            <param name="publishingTargetIdOrPurpose">
            <para>The TCM URI of the Target Type or Publication Target or Target Purpose of the <see cref="T:TargetTypeData" /> to which the item should be published.</para>
            <para>If URI of the Publishing Target (Target Type or Publication Target or Target Purpose) is not specified or URI is set to "tcm:0-0-0"
            then the published state of the item will be checked against all existing Publishing Targets and if the item is published to at least
            one Publishing Target then return value will be <c>true</c>; otherwise, <c>false</c>.</para></param>
            <param name="isPublishedInContext">Indicates if state should be returned regardless of the context Publication.
            If <c>true</c> check if item is published in the context Publication only. If <c>false</c> check if the item is published in any Publication.</param>
            <returns>
            <c>true</c> if the given item is published to the specified Publishing Target or any Publishing Target when none specified.
            </returns>
            <seealso cref="P:IsPublishedInContext" />
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetWorkItemSnapshot(System.String)">
            <summary>
            Gets the snapshot of the Activity of the given Work Item.
            </summary>
            <param name="workItemId">The identifier of the Work Item (TCM URI).</param>
            <returns>The snapshot of the Activity of the given Work Item.</returns>
            <remarks>
            Returns <c>null</c> if there is no snapshot stored or storing snapshot is turned off or the Work Item is not finished yet.
            <para>
            If the snapshot contains Binaries, the actual binary content can be downloaded by calling the <see cref="M:DownloadRenderedBinary()" /> method.
            Binaries will always be generated on a file location relative to the Content Manager temporary path. The returned <see cref="T:Data.Publishing.Rendering.BinaryData" /> objects
            will have an appropriate path in their <see cref="P:Data.Publishing.Rendering.BinaryData.FilePath" /> property and callers of the <see cref="M:DownloadRenderedBinary()" /> method can
            use that value to retrieve the binary content as a stream.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetListPublishInfo(System.String)">
            <summary>
            Gets a list of publish information for each target the item was published to.
            </summary>
            <param name="itemId">The identifier of the item (TCM URI or WebDAV URL).</param>
            <returns>
            Returns a list of <see cref="T:Data.Publishing.PublishInfoData" />
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.CastActions(System.Int32)">
            <summary>
            Gets the actions (allowed or denied) in an enumeration format.
            </summary>
            <param name="numericActions">Actions in numeric format.</param>
            <returns>Actions in enumeration format.</returns>
            <remarks>
            If your client supports casting of deny and allowed actions please do so, it saves you a call to the web service.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ValidateXml(Tridion.ContentManager.CoreService.Client.IdentifiableObjectData)">
            <summary>
            Validates Xml of input object.
            </summary>
            <param name="data">An <see cref="T:Data.IdentifiableObjectData" /> object which Xml must be validated.</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.IsValidTridionWebSchemaXml(Tridion.ContentManager.CoreService.Client.SchemaData)">
            <summary>
            Determines whether Schema XSD is valid Tridion Web Schema or not.
            </summary>
            <param name="data">An <see cref="T:Data.ContentManagement.SchemaData" /> object which Xml must be validated.</param>
            <returns>
            <c>true</c> if Schema XSD is valid Tridion Web Schema; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSubjectIdsWithApplicationData(System.String)">
            <summary>
            Gets a list of <see cref="T:TcmUri" /> of subjects which have application data of the specified <paramref name="applicationId" /> associated.
            </summary>
            <param name="applicationId">The application Id whose subjects needs to be retrieved.</param>
            <returns>An enumerable of <see cref="T:TcmUri" /> of subjects associated with the specified application data.</returns>
            <remarks>
            If the specified <paramref name="applicationId" /> has associated Global Application Data, then, the returned list will contain tcm:0-0-0.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ReadApplicationDataForSubjectsIds(System.String[],System.String[])">
            <summary>
            Gets a dictionary of <see cref="T:Data.ApplicationData" /> with subjectId as the key and a set of associated <see cref="T:Data.ApplicationData" /> as value.
            </summary>
            <param name="subjectIds">The subject Ids whose <see cref="T:Data.ApplicationData" /> needs to be retrieved.</param>
            <param name="applicationIds">The application Ids whose <see cref="T:Data.ApplicationData" /> needs to be retrieved.</param>
            <returns>A dictionary of <see cref="T:Data.ApplicationData" /> with subjectId as the key and a set of associated <see cref="T:Data.ApplicationData" /> as value.</returns>
            <remarks>
            <p>
            The <paramref name="subjectIds" /> can contain <c>null</c>, <c>tcm:0-0-0</c> or <c>empty string</c> to read global application data.
            However when returning, the global application data will always be associated with <c>tcm:0-0-0</c> as key even if <c>null</c> was passed in <paramref name="subjectIds" />.
            </p>
            <p>
            The <paramref name="applicationIds" /> can be <c>null</c> to read all Application Data.
            </p>
            <p>
            In case a subject does not exist or Application Data does not exist the returned dictionary will contain <c>empty collection</c>. However, it is recommended to ensure
            that <paramref name="subjectIds" /> being passed in all exists, as events will be fired for all passed in <paramref name="subjectIds" />, some event handler
            might try to load the item and fail.
            </p>
            <p>
            Keep in mind that this is a bulk retrieval method, and using this method with very small amount of <paramref name="subjectIds" /> might actually perform worse.
            Also using <c>null</c> for <paramref name="applicationIds" /> is not recommended, as it may cause significant performance impact. Ideally this method should be used
            with a set of <paramref name="subjectIds" /> and only the required <paramref name="applicationIds" />.
            </p>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetSecurityDescriptorsForSubjectsIds(System.String[])">
            <summary>
            Gets a dictionary of <see cref="T:Data.Security.SecurityDescriptorData" /> with subjectId as the key and a set of associated <see cref="T:Data.Security.SecurityDescriptorData" /> of the current user as value.
            </summary>
            <param name="subjectIds">The subject Ids whose <see cref="T:Data.Security.SecurityDescriptorData" /> needs to be retrieved.</param>
            <returns>A dictionary of <see cref="T:Data.Security.SecurityDescriptorData" /> with subjectId as the key and a set of associated <see cref="T:Data.Security.SecurityDescriptorData" /> of the current user as value.</returns>
            <remarks>
            For root Organizational Items the value of the <see cref="P:Data.Security.SecurityDescriptorData.Permissions" /> is always <see cref="F:Security.Permissions.None" />.
            Use the <see cref="P:Data.Security.SecurityDescriptorData.Rights" /> to check if the user can read, write, localize or delete the item.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.GetContentSecurityDescriptorsForOrgItemIds(System.String[])">
            <summary>
            Gets Content Security Descriptors for a set of Organizational Items.
            </summary>
            <param name="organizationalItemIds">The Ids of the Organization Item whose Content Security Descriptor needs to be retrieved.</param>
            <returns>A dictionary with subjectId as the key and a set of associated Content Security Descriptor as value.</returns>
            <remarks>Content Security Descriptor specifies the Rights and Permissions that the current user has on the content of the Organizational Item.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.ReIndex(System.String)">
            <summary>
            Rebuilds the full-text search index for a given item.
            </summary>
            <param name="id">The subject Id whose will be re-indexed.</param>
            <remarks>
            If <paramref name="id" /> is <c>null</c> then Re-index process for all repositories.
            If <paramref name="id" /> is <see cref="T:Data.ContentManagement.RepositoryData" /> object then Re-index process for specified repository.
            Otherwise exception will be thrown.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.CastPredefinedQueue(System.Int32)">
            <summary>
            Gets the predefined queue id in an enumeration format.
            </summary>
            <param name="queueId">Queue id in numeric format.</param>
            <returns>Predefined queue id in enumeration format; <c>null</c>, if <paramref name="queueId" /> is not predefined.</returns>
            <remarks>
            If your client supports casting please do so, it saves you a call to the web service.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ICoreService.PurgeOldVersions(Tridion.ContentManager.CoreService.Client.PurgeOldVersionsInstructionData)">
            <summary>
            Purges the old versions, according to <see cref="T:Data.PurgeOldVersionsInstructionData" /> object.
            </summary>
            <exception cref="T:System.ServiceModel.FaultException`1">Generic service exception that encapsulates the inner
            exception(s). T is of type <see cref="T:CoreServiceFault" />.</exception>
            <example>
            <code>
            PurgeOldVersionsInstructionData purgeOldVersionsInstructionData = new PurgeOldVersionsInstructionData();
            purgeOldVersionsInstructionData.Containers = new LinkToIdentifiableObjectData[] { new LinkToIdentifiableObjectData() { IdRef = "tcm:0-67-1" }, new LinkToIdentifiableObjectData() { IdRef = "tcm:67-706-4" } };
            _client.PurgeOldVersions(purgeOldVersionsInstructionData);
            </code>
            </example>
            <param name="instruction">The purge instruction.</param>
            <returns>The count of purged versions.</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.CoreServiceClient.CheckIn(System.String,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Overload for the pre-2012 contract signature
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.CoreServiceClient.ConvertXsdToSchemaFields(System.Xml.Linq.XElement,Tridion.ContentManager.CoreService.Client.SchemaPurpose,Tridion.ContentManager.CoreService.Client.ReadOptions)">
            <summary>
            Converts schema XSD to schema fields.
            Overloaded method for ConvertXsdToSchemaFields(xsd, purpose, string.Empty, readOptions);
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.ElevatedPrivilegesScope">
            <summary>
            Represents scope, which allows to elevate privileges in the <see cref="T:Tridion.ContentManager.CoreService.Client.SessionAwareCoreServiceClient"/>.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ElevatedPrivilegesScope.#ctor(Tridion.ContentManager.CoreService.Client.ISessionAwareCoreService,Tridion.ContentManager.CoreService.Client.Privileges)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.CoreService.Client.ElevatedPrivilegesScope" /> class.
            Also elevates user privileges to requested level.
            </summary>
            <param name="client">The client, for which privileges need to be elevated.</param>
            <param name="privileges">The privileges, to which we need elevate.</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.ElevatedPrivilegesScope.Dispose">
            <summary>
            Restores user privileges to initial value.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials">
            <summary>
            Custom Client Credentials class that allows <see cref="P:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials.Claims"/> to be specified by the client.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials.#ctor">
            <summary>
            Default constructor (called by WCF when creating the channel)
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials.Claims">
            <summary>
            Gets or sets the Claims which will be sent as a SAML token. 
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials.AudienceUris">
            <summary>
            Gets or sets a collection of Uris which will be added to the SAML token as audience restrictions. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials.CloneCore">
            <summary>
            Creates a new copy of this ClientCredentials instance. 
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials.CreateSecurityTokenManager">
            <summary>
            Creates a security token manager for this instance. 
            This method is rarely called explicitly; it is primarily used in extensibility scenarios and is called by the system itself.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials.CreateUserNameClaims">
            <summary>
            Create a basic ClaimSet that only contains a user name claim (NameIdentifier).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Security.Saml20SecurityTokenProvider">
            <summary>
            Generates a Security Token that represents a SAML 2.0 assertion.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.Saml20SecurityTokenProvider.#ctor(Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials,System.IdentityModel.Selectors.SecurityTokenRequirement,System.ServiceModel.Security.SecurityAlgorithmSuite)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.Saml20SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
            <summary>
            Creates the security token
            </summary>
            <param name="timeout">Maximum amount of time the method is supposed to take. Ignored in this implementation.</param>
            <returns>A SecurityToken that corresponds to the SAML assertion and proof key specified at construction time</returns>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Security.SamlSecurityTokenManager">
            <summary>
            Custom Security Token Manager used by <see cref="T:Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials"/>. Supports SAML 1.1 and SAML 2.0.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.SamlSecurityTokenManager.#ctor(Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials)">
            <summary>
            Constructor
            </summary>
            <param name="claimsClientCredentials">The creating SamlClientCredentials instance</param>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.SamlSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
            <summary>
            Creates the custom SecurityTokenProvider when SAML tokens are specified in the tokenRequirement
            </summary>
            <param name="tokenRequirement">A SecurityTokenRequirement  </param>
            <returns>The appropriate SecurityTokenProvider</returns>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Security.Saml11SecurityTokenProvider">
            <summary>
            Generates a Security Token that represents a SAML 1.1 assertion.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.Saml11SecurityTokenProvider.#ctor(Tridion.ContentManager.CoreService.Client.Security.ClaimsClientCredentials,System.IdentityModel.Selectors.SecurityTokenRequirement,System.ServiceModel.Security.SecurityAlgorithmSuite)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.Saml11SecurityTokenProvider.GetTokenCore(System.TimeSpan)">
            <summary>
            Creates the security token
            </summary>
            <param name="timeout">Maximum amount of time the method is supposed to take. Ignored in this implementation.</param>
            <returns>A SecurityToken that corresponds to the SAML assertion and proof key specified at construction time</returns>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.Security.SamlSecurityTokenProvider">
            <summary>
            Abstract base class for SAML Security Token Providers.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.SamlSecurityTokenProvider.CreateSymmetricProofToken(System.Int32)">
            <summary>
            Creates a Binary Secret Security Token
            </summary>
            <param name="keySize">Number of bits of key material to generate</param>
            <returns>A BinarySecretSecurityToken</returns>
        </member>
        <member name="M:Tridion.ContentManager.CoreService.Client.Security.SamlSecurityTokenProvider.CreateAsymmetricProofToken">
            <summary>
            Creates an RSA Security Token
            </summary>
            <returns>An RsaSecurityToken</returns>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TcmAction">
            <summary>
            Predefined applicable actions for an item.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CoreService.Client.TcmSystemPrivileges">
            <summary>
            Contains list of constants for built-in TCM System Privileges.
            </summary>
        </member>
    </members>
</doc>
